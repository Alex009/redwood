import org.jetbrains.kotlin.gradle.plugin.KotlinPluginKt

apply plugin: 'org.jetbrains.kotlin.multiplatform'
apply plugin: 'com.android.library'
apply plugin: 'com.vanniktech.maven.publish'
apply plugin: 'org.jetbrains.dokka' // Must be applied here for publish plugin.

archivesBaseName = 'treehouse-jetpack-compose'

kotlin {
  android {
    publishAllLibraryVariants()
  }
  iosArm32()
  iosArm64()
  iosX64()
  js {
    browser()
  }
  jvm()
  macosX64()
  mingwX64()
  tvosX64()
  tvosArm64()
  watchosArm32()
  watchosArm64()

  sourceSets {
    commonMain {
      kotlin {
        srcDir '../upstream/compose/runtime/runtime/src/commonMain/kotlin'
      }
      dependencies {
        api deps.kotlinx.coroutines.core
      }
    }
    commonTest {
      kotlin {
        // TODO get tests working on all platforms
        // srcDir '../upstream/compose/runtime/runtime/src/test/kotlin'
      }
      dependencies {
        implementation deps.kotlin.test
      }
    }
    androidMain {
      kotlin {
        srcDir '../upstream/compose/runtime/runtime/src/androidMain/kotlin'
        srcDir '../upstream/compose/runtime/runtime/src/jvmMain/kotlin'
      }
      dependencies {
        // Keep in sync with ../upstream/compose/runtime/runtime/build.gradle
        api 'androidx.annotation:annotation:1.1.0'
      }
    }
    nativeMain {
    }
    nativeTest {
    }
    jvmMain {
      kotlin {
        srcDir '../upstream/compose/runtime/runtime/src/jvmMain/kotlin'
        srcDir '../upstream/compose/runtime/runtime/src/desktopMain/kotlin'
      }
    }
    jvmTest {
      kotlin {
        srcDir '../upstream/compose/runtime/runtime/src/test/kotlin'
      }
      dependencies {
        implementation deps.kotlinx.coroutines.test
      }
    }
  }

  configure([
    targets.iosArm32,
    targets.iosArm64,
    targets.iosX64,
    targets.macosX64,
    targets.mingwX64,
    targets.tvosArm64,
    targets.tvosX64,
    targets.watchosArm32,
    targets.watchosArm64,
  ]) {
    compilations.main.source(sourceSets.nativeMain)
    compilations.test.source(sourceSets.nativeTest)
  }
}

android {
  sourceSets {
    main {
      manifest.srcFile '../upstream/compose/runtime/runtime/src/androidMain/AndroidManifest.xml'
    }
  }

  defaultConfig {
    consumerProguardFiles '../upstream/compose/runtime/runtime/proguard-rules.pro'
  }
}

dependencies {
  add(KotlinPluginKt.PLUGIN_CLASSPATH_CONFIGURATION_NAME, deps.androidx.compose.compiler)
  add(KotlinPluginKt.NATIVE_COMPILER_PLUGIN_CLASSPATH_CONFIGURATION_NAME, project(':compose:compiler-hosted'))
}
