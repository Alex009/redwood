apply plugin: 'org.jetbrains.kotlin.multiplatform'
apply plugin: 'com.android.library'

kotlin {
  android()
  jvm()

  sourceSets {
    commonMain {
      kotlin {
        srcDir 'upstream/compose/runtime/runtime/src/commonMain/kotlin'
        srcDir 'upstream/compose/runtime/runtime-dispatch/src/commonMain/kotlin'
      }
      dependencies {
        // Keep these in sync with upstream/compose/runtime/runtime/build.gradle
        api 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.9'
        api 'org.jetbrains.kotlinx:kotlinx-collections-immutable:0.3'
      }
    }
    // TODO get tests working
    // commonTest {
    //   kotlin {
    //     srcDir 'upstream/compose/runtime/runtime/src/test/kotlin'
    //   }
    //   dependencies {
    //     implementation 'org.jetbrains.kotlin:kotlin-test-multiplatform'
    //   }
    // }
    androidMain {
      kotlin {
        srcDir 'upstream/compose/runtime/runtime/src/androidMain/kotlin'
        srcDir 'upstream/compose/runtime/runtime/src/jvmMain/kotlin'
        srcDir 'upstream/compose/runtime/runtime-dispatch/src/androidMain/kotlin'
      }
      dependencies {
        // Keep these in sync with upstream/compose/runtime/runtime/build.gradle
        api 'androidx.annotation:annotation:1.1.0'
        implementation 'androidx.core:core-ktx:1.1.0'
      }
    }
    jvmMain {
      kotlin {
        srcDir 'upstream/compose/runtime/runtime/src/jvmMain/kotlin'
      }
    }
  }
}

android {
  sourceSets {
    main {
      manifest.srcFile 'upstream/compose/runtime/runtime/src/androidMain/AndroidManifest.xml'
    }
  }
}

dependencies {
  kotlinPlugin deps.composeCompiler
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
  doFirst {
    if (!file('upstream/.git').exists()) {
      throw new RuntimeException(
        "Missing 'upstream' git submodule clone. Did you run 'git submodule update --init'?")
    }
  }
}
