[{"name":"fun main(vararg args: String)","description":"app.cash.treehouse.schema.generator.main","location":"treehouse-schema-generator/treehouse-schema-generator/app.cash.treehouse.schema.generator/main.html","searchKeys":["main","fun main(vararg args: String)","app.cash.treehouse.schema.generator.main"]},{"name":"Compose(\"--compose\", \"app.cash.treehouse:treehouse-compose:$treehouseVersion\")","description":"app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.Strategy.Compose","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-schema-generator-plugin/-strategy/-compose/index.html","searchKeys":["Compose","Compose(\"--compose\", \"app.cash.treehouse:treehouse-compose:$treehouseVersion\")","app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.Strategy.Compose"]},{"name":"Test(\"--test\", \"app.cash.treehouse:treehouse-widget:$treehouseVersion\")","description":"app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.Strategy.Test","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-schema-generator-plugin/-strategy/-test/index.html","searchKeys":["Test","Test(\"--test\", \"app.cash.treehouse:treehouse-widget:$treehouseVersion\")","app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.Strategy.Test"]},{"name":"Widget(\"--widget\", \"app.cash.treehouse:treehouse-widget:$treehouseVersion\")","description":"app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.Strategy.Widget","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-schema-generator-plugin/-strategy/-widget/index.html","searchKeys":["Widget","Widget(\"--widget\", \"app.cash.treehouse:treehouse-widget:$treehouseVersion\")","app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.Strategy.Widget"]},{"name":"abstract class TreehouseSchemaGeneratorPlugin(strategy: TreehouseSchemaGeneratorPlugin.Strategy) : Plugin<Project> ","description":"app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-schema-generator-plugin/index.html","searchKeys":["TreehouseSchemaGeneratorPlugin","abstract class TreehouseSchemaGeneratorPlugin(strategy: TreehouseSchemaGeneratorPlugin.Strategy) : Plugin<Project> ","app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin"]},{"name":"abstract var source: Project?","description":"app.cash.treehouse.gradle.TreehouseSchemaExtension.source","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-schema-extension/source.html","searchKeys":["source","abstract var source: Project?","app.cash.treehouse.gradle.TreehouseSchemaExtension.source"]},{"name":"abstract var type: String?","description":"app.cash.treehouse.gradle.TreehouseSchemaExtension.type","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-schema-extension/type.html","searchKeys":["type","abstract var type: String?","app.cash.treehouse.gradle.TreehouseSchemaExtension.type"]},{"name":"class TreehousePlugin : KotlinCompilerPluginSupportPlugin","description":"app.cash.treehouse.gradle.TreehousePlugin","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-plugin/index.html","searchKeys":["TreehousePlugin","class TreehousePlugin : KotlinCompilerPluginSupportPlugin","app.cash.treehouse.gradle.TreehousePlugin"]},{"name":"class TreehouseSchemaComposePlugin : TreehouseSchemaGeneratorPlugin","description":"app.cash.treehouse.gradle.TreehouseSchemaComposePlugin","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-schema-compose-plugin/index.html","searchKeys":["TreehouseSchemaComposePlugin","class TreehouseSchemaComposePlugin : TreehouseSchemaGeneratorPlugin","app.cash.treehouse.gradle.TreehouseSchemaComposePlugin"]},{"name":"class TreehouseSchemaPlugin : Plugin<Project> ","description":"app.cash.treehouse.gradle.TreehouseSchemaPlugin","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-schema-plugin/index.html","searchKeys":["TreehouseSchemaPlugin","class TreehouseSchemaPlugin : Plugin<Project> ","app.cash.treehouse.gradle.TreehouseSchemaPlugin"]},{"name":"class TreehouseSchemaTestPlugin : TreehouseSchemaGeneratorPlugin","description":"app.cash.treehouse.gradle.TreehouseSchemaTestPlugin","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-schema-test-plugin/index.html","searchKeys":["TreehouseSchemaTestPlugin","class TreehouseSchemaTestPlugin : TreehouseSchemaGeneratorPlugin","app.cash.treehouse.gradle.TreehouseSchemaTestPlugin"]},{"name":"class TreehouseSchemaWidgetPlugin : TreehouseSchemaGeneratorPlugin","description":"app.cash.treehouse.gradle.TreehouseSchemaWidgetPlugin","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-schema-widget-plugin/index.html","searchKeys":["TreehouseSchemaWidgetPlugin","class TreehouseSchemaWidgetPlugin : TreehouseSchemaGeneratorPlugin","app.cash.treehouse.gradle.TreehouseSchemaWidgetPlugin"]},{"name":"enum Strategy : Enum<TreehouseSchemaGeneratorPlugin.Strategy> ","description":"app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.Strategy","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-schema-generator-plugin/-strategy/index.html","searchKeys":["Strategy","enum Strategy : Enum<TreehouseSchemaGeneratorPlugin.Strategy> ","app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.Strategy"]},{"name":"fun TreehousePlugin()","description":"app.cash.treehouse.gradle.TreehousePlugin.TreehousePlugin","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-plugin/-treehouse-plugin.html","searchKeys":["TreehousePlugin","fun TreehousePlugin()","app.cash.treehouse.gradle.TreehousePlugin.TreehousePlugin"]},{"name":"fun TreehouseSchemaComposePlugin()","description":"app.cash.treehouse.gradle.TreehouseSchemaComposePlugin.TreehouseSchemaComposePlugin","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-schema-compose-plugin/-treehouse-schema-compose-plugin.html","searchKeys":["TreehouseSchemaComposePlugin","fun TreehouseSchemaComposePlugin()","app.cash.treehouse.gradle.TreehouseSchemaComposePlugin.TreehouseSchemaComposePlugin"]},{"name":"fun TreehouseSchemaGeneratorPlugin(strategy: TreehouseSchemaGeneratorPlugin.Strategy)","description":"app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.TreehouseSchemaGeneratorPlugin","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-schema-generator-plugin/-treehouse-schema-generator-plugin.html","searchKeys":["TreehouseSchemaGeneratorPlugin","fun TreehouseSchemaGeneratorPlugin(strategy: TreehouseSchemaGeneratorPlugin.Strategy)","app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.TreehouseSchemaGeneratorPlugin"]},{"name":"fun TreehouseSchemaPlugin()","description":"app.cash.treehouse.gradle.TreehouseSchemaPlugin.TreehouseSchemaPlugin","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-schema-plugin/-treehouse-schema-plugin.html","searchKeys":["TreehouseSchemaPlugin","fun TreehouseSchemaPlugin()","app.cash.treehouse.gradle.TreehouseSchemaPlugin.TreehouseSchemaPlugin"]},{"name":"fun TreehouseSchemaTestPlugin()","description":"app.cash.treehouse.gradle.TreehouseSchemaTestPlugin.TreehouseSchemaTestPlugin","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-schema-test-plugin/-treehouse-schema-test-plugin.html","searchKeys":["TreehouseSchemaTestPlugin","fun TreehouseSchemaTestPlugin()","app.cash.treehouse.gradle.TreehouseSchemaTestPlugin.TreehouseSchemaTestPlugin"]},{"name":"fun TreehouseSchemaWidgetPlugin()","description":"app.cash.treehouse.gradle.TreehouseSchemaWidgetPlugin.TreehouseSchemaWidgetPlugin","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-schema-widget-plugin/-treehouse-schema-widget-plugin.html","searchKeys":["TreehouseSchemaWidgetPlugin","fun TreehouseSchemaWidgetPlugin()","app.cash.treehouse.gradle.TreehouseSchemaWidgetPlugin.TreehouseSchemaWidgetPlugin"]},{"name":"interface TreehouseSchemaExtension","description":"app.cash.treehouse.gradle.TreehouseSchemaExtension","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-schema-extension/index.html","searchKeys":["TreehouseSchemaExtension","interface TreehouseSchemaExtension","app.cash.treehouse.gradle.TreehouseSchemaExtension"]},{"name":"internal val dependencyCoordinate: String","description":"app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.Strategy.Compose.dependencyCoordinate","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-schema-generator-plugin/-strategy/-compose/dependency-coordinate.html","searchKeys":["dependencyCoordinate","internal val dependencyCoordinate: String","app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.Strategy.Compose.dependencyCoordinate"]},{"name":"internal val dependencyCoordinate: String","description":"app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.Strategy.Test.dependencyCoordinate","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-schema-generator-plugin/-strategy/-test/dependency-coordinate.html","searchKeys":["dependencyCoordinate","internal val dependencyCoordinate: String","app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.Strategy.Test.dependencyCoordinate"]},{"name":"internal val dependencyCoordinate: String","description":"app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.Strategy.Widget.dependencyCoordinate","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-schema-generator-plugin/-strategy/-widget/dependency-coordinate.html","searchKeys":["dependencyCoordinate","internal val dependencyCoordinate: String","app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.Strategy.Widget.dependencyCoordinate"]},{"name":"internal val generatorFlag: String","description":"app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.Strategy.Compose.generatorFlag","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-schema-generator-plugin/-strategy/-compose/generator-flag.html","searchKeys":["generatorFlag","internal val generatorFlag: String","app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.Strategy.Compose.generatorFlag"]},{"name":"internal val generatorFlag: String","description":"app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.Strategy.Test.generatorFlag","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-schema-generator-plugin/-strategy/-test/generator-flag.html","searchKeys":["generatorFlag","internal val generatorFlag: String","app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.Strategy.Test.generatorFlag"]},{"name":"internal val generatorFlag: String","description":"app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.Strategy.Widget.generatorFlag","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-schema-generator-plugin/-strategy/-widget/generator-flag.html","searchKeys":["generatorFlag","internal val generatorFlag: String","app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.Strategy.Widget.generatorFlag"]},{"name":"open override fun apply(project: Project)","description":"app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.apply","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-schema-generator-plugin/apply.html","searchKeys":["apply","open override fun apply(project: Project)","app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.apply"]},{"name":"open override fun apply(project: Project)","description":"app.cash.treehouse.gradle.TreehouseSchemaPlugin.apply","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-schema-plugin/apply.html","searchKeys":["apply","open override fun apply(project: Project)","app.cash.treehouse.gradle.TreehouseSchemaPlugin.apply"]},{"name":"open override fun applyToCompilation(kotlinCompilation: KotlinCompilation<*>): Provider<List<SubpluginOption>>","description":"app.cash.treehouse.gradle.TreehousePlugin.applyToCompilation","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-plugin/apply-to-compilation.html","searchKeys":["applyToCompilation","open override fun applyToCompilation(kotlinCompilation: KotlinCompilation<*>): Provider<List<SubpluginOption>>","app.cash.treehouse.gradle.TreehousePlugin.applyToCompilation"]},{"name":"open override fun getCompilerPluginId(): String","description":"app.cash.treehouse.gradle.TreehousePlugin.getCompilerPluginId","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-plugin/get-compiler-plugin-id.html","searchKeys":["getCompilerPluginId","open override fun getCompilerPluginId(): String","app.cash.treehouse.gradle.TreehousePlugin.getCompilerPluginId"]},{"name":"open override fun getPluginArtifact(): SubpluginArtifact","description":"app.cash.treehouse.gradle.TreehousePlugin.getPluginArtifact","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-plugin/get-plugin-artifact.html","searchKeys":["getPluginArtifact","open override fun getPluginArtifact(): SubpluginArtifact","app.cash.treehouse.gradle.TreehousePlugin.getPluginArtifact"]},{"name":"open override fun getPluginArtifactForNative(): SubpluginArtifact","description":"app.cash.treehouse.gradle.TreehousePlugin.getPluginArtifactForNative","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-plugin/get-plugin-artifact-for-native.html","searchKeys":["getPluginArtifactForNative","open override fun getPluginArtifactForNative(): SubpluginArtifact","app.cash.treehouse.gradle.TreehousePlugin.getPluginArtifactForNative"]},{"name":"open override fun isApplicable(kotlinCompilation: KotlinCompilation<*>): Boolean","description":"app.cash.treehouse.gradle.TreehousePlugin.isApplicable","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-plugin/is-applicable.html","searchKeys":["isApplicable","open override fun isApplicable(kotlinCompilation: KotlinCompilation<*>): Boolean","app.cash.treehouse.gradle.TreehousePlugin.isApplicable"]},{"name":"val name: String","description":"app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.Strategy.Compose.name","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-schema-generator-plugin/-strategy/-compose/name.html","searchKeys":["name","val name: String","app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.Strategy.Compose.name"]},{"name":"val name: String","description":"app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.Strategy.Test.name","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-schema-generator-plugin/-strategy/-test/name.html","searchKeys":["name","val name: String","app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.Strategy.Test.name"]},{"name":"val name: String","description":"app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.Strategy.Widget.name","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-schema-generator-plugin/-strategy/-widget/name.html","searchKeys":["name","val name: String","app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.Strategy.Widget.name"]},{"name":"val ordinal: Int","description":"app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.Strategy.Compose.ordinal","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-schema-generator-plugin/-strategy/-compose/ordinal.html","searchKeys":["ordinal","val ordinal: Int","app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.Strategy.Compose.ordinal"]},{"name":"val ordinal: Int","description":"app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.Strategy.Test.ordinal","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-schema-generator-plugin/-strategy/-test/ordinal.html","searchKeys":["ordinal","val ordinal: Int","app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.Strategy.Test.ordinal"]},{"name":"val ordinal: Int","description":"app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.Strategy.Widget.ordinal","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-schema-generator-plugin/-strategy/-widget/ordinal.html","searchKeys":["ordinal","val ordinal: Int","app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.Strategy.Widget.ordinal"]},{"name":"abstract fun apply(diff: Diff, events: (Event) -> Unit)","description":"app.cash.treehouse.widget.Display.apply","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-display/apply.html","searchKeys":["apply","abstract fun apply(diff: Diff, events: (Event) -> Unit)","app.cash.treehouse.widget.Display.apply"]},{"name":"abstract fun apply(diff: PropertyDiff, events: (Event) -> Unit)","description":"app.cash.treehouse.widget.Widget.apply","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-widget/apply.html","searchKeys":["apply","abstract fun apply(diff: PropertyDiff, events: (Event) -> Unit)","app.cash.treehouse.widget.Widget.apply"]},{"name":"abstract fun clear()","description":"app.cash.treehouse.widget.Widget.Children.clear","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-widget/-children/clear.html","searchKeys":["clear","abstract fun clear()","app.cash.treehouse.widget.Widget.Children.clear"]},{"name":"abstract fun create(kind: Int, id: Long): Widget<T>","description":"app.cash.treehouse.widget.Widget.Factory.create","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-widget/-factory/create.html","searchKeys":["create","abstract fun create(kind: Int, id: Long): Widget<T>","app.cash.treehouse.widget.Widget.Factory.create"]},{"name":"abstract fun insert(index: Int, widget: T)","description":"app.cash.treehouse.widget.Widget.Children.insert","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-widget/-children/insert.html","searchKeys":["insert","abstract fun insert(index: Int, widget: T)","app.cash.treehouse.widget.Widget.Children.insert"]},{"name":"abstract fun move(fromIndex: Int, toIndex: Int, count: Int)","description":"app.cash.treehouse.widget.Widget.Children.move","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-widget/-children/move.html","searchKeys":["move","abstract fun move(fromIndex: Int, toIndex: Int, count: Int)","app.cash.treehouse.widget.Widget.Children.move"]},{"name":"abstract fun remove(index: Int, count: Int)","description":"app.cash.treehouse.widget.Widget.Children.remove","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-widget/-children/remove.html","searchKeys":["remove","abstract fun remove(index: Int, count: Int)","app.cash.treehouse.widget.Widget.Children.remove"]},{"name":"abstract val value: T","description":"app.cash.treehouse.widget.Widget.value","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-widget/value.html","searchKeys":["value","abstract val value: T","app.cash.treehouse.widget.Widget.value"]},{"name":"class HTMLElementChildren(parent: HTMLElement) : Widget.Children<HTMLElement> ","description":"app.cash.treehouse.widget.HTMLElementChildren","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-h-t-m-l-element-children/index.html","searchKeys":["HTMLElementChildren","class HTMLElementChildren(parent: HTMLElement) : Widget.Children<HTMLElement> ","app.cash.treehouse.widget.HTMLElementChildren"]},{"name":"class MutableListChildren<T : Any> constructor(list: MutableList<T>) : Widget.Children<T> , Iterable<T> ","description":"app.cash.treehouse.widget.MutableListChildren","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-mutable-list-children/index.html","searchKeys":["MutableListChildren","class MutableListChildren<T : Any> constructor(list: MutableList<T>) : Widget.Children<T> , Iterable<T> ","app.cash.treehouse.widget.MutableListChildren"]},{"name":"class UIViewChildren(root: <ERROR CLASS>) : Widget.Children<<ERROR CLASS>> ","description":"app.cash.treehouse.widget.UIViewChildren","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-u-i-view-children/index.html","searchKeys":["UIViewChildren","class UIViewChildren(root: <ERROR CLASS>) : Widget.Children<<ERROR CLASS>> ","app.cash.treehouse.widget.UIViewChildren"]},{"name":"class ViewGroupChildren(parent: ViewGroup) : Widget.Children<View> ","description":"app.cash.treehouse.widget.ViewGroupChildren","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-view-group-children/index.html","searchKeys":["ViewGroupChildren","class ViewGroupChildren(parent: ViewGroup) : Widget.Children<View> ","app.cash.treehouse.widget.ViewGroupChildren"]},{"name":"class WidgetDisplay<T : Any>(root: Widget<T>, factory: Widget.Factory<T>) : Display","description":"app.cash.treehouse.widget.WidgetDisplay","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-widget-display/index.html","searchKeys":["WidgetDisplay","class WidgetDisplay<T : Any>(root: Widget<T>, factory: Widget.Factory<T>) : Display","app.cash.treehouse.widget.WidgetDisplay"]},{"name":"fun <T : Any> MutableListChildren(list: MutableList<T> = mutableListOf())","description":"app.cash.treehouse.widget.MutableListChildren.MutableListChildren","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-mutable-list-children/-mutable-list-children.html","searchKeys":["MutableListChildren","fun <T : Any> MutableListChildren(list: MutableList<T> = mutableListOf())","app.cash.treehouse.widget.MutableListChildren.MutableListChildren"]},{"name":"fun <T : Any> WidgetDisplay(root: Widget<T>, factory: Widget.Factory<T>)","description":"app.cash.treehouse.widget.WidgetDisplay.WidgetDisplay","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-widget-display/-widget-display.html","searchKeys":["WidgetDisplay","fun <T : Any> WidgetDisplay(root: Widget<T>, factory: Widget.Factory<T>)","app.cash.treehouse.widget.WidgetDisplay.WidgetDisplay"]},{"name":"fun HTMLElementChildren(parent: HTMLElement)","description":"app.cash.treehouse.widget.HTMLElementChildren.HTMLElementChildren","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-h-t-m-l-element-children/-h-t-m-l-element-children.html","searchKeys":["HTMLElementChildren","fun HTMLElementChildren(parent: HTMLElement)","app.cash.treehouse.widget.HTMLElementChildren.HTMLElementChildren"]},{"name":"fun UIViewChildren(root: <ERROR CLASS>)","description":"app.cash.treehouse.widget.UIViewChildren.UIViewChildren","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-u-i-view-children/-u-i-view-children.html","searchKeys":["UIViewChildren","fun UIViewChildren(root: <ERROR CLASS>)","app.cash.treehouse.widget.UIViewChildren.UIViewChildren"]},{"name":"fun ViewGroupChildren(parent: ViewGroup)","description":"app.cash.treehouse.widget.ViewGroupChildren.ViewGroupChildren","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-view-group-children/-view-group-children.html","searchKeys":["ViewGroupChildren","fun ViewGroupChildren(parent: ViewGroup)","app.cash.treehouse.widget.ViewGroupChildren.ViewGroupChildren"]},{"name":"interface Children<T : Any>","description":"app.cash.treehouse.widget.Widget.Children","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-widget/-children/index.html","searchKeys":["Children","interface Children<T : Any>","app.cash.treehouse.widget.Widget.Children"]},{"name":"interface Display","description":"app.cash.treehouse.widget.Display","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-display/index.html","searchKeys":["Display","interface Display","app.cash.treehouse.widget.Display"]},{"name":"interface Factory<T : Any>","description":"app.cash.treehouse.widget.Widget.Factory","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-widget/-factory/index.html","searchKeys":["Factory","interface Factory<T : Any>","app.cash.treehouse.widget.Widget.Factory"]},{"name":"interface Widget<T : Any>","description":"app.cash.treehouse.widget.Widget","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-widget/index.html","searchKeys":["Widget","interface Widget<T : Any>","app.cash.treehouse.widget.Widget"]},{"name":"open fun children(tag: Int): Widget.Children<T>","description":"app.cash.treehouse.widget.Widget.children","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-widget/children.html","searchKeys":["children","open fun children(tag: Int): Widget.Children<T>","app.cash.treehouse.widget.Widget.children"]},{"name":"open operator override fun iterator(): Iterator<T>","description":"app.cash.treehouse.widget.MutableListChildren.iterator","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-mutable-list-children/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<T>","app.cash.treehouse.widget.MutableListChildren.iterator"]},{"name":"open override fun apply(diff: Diff, events: (Event) -> Unit)","description":"app.cash.treehouse.widget.WidgetDisplay.apply","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-widget-display/apply.html","searchKeys":["apply","open override fun apply(diff: Diff, events: (Event) -> Unit)","app.cash.treehouse.widget.WidgetDisplay.apply"]},{"name":"open override fun clear()","description":"app.cash.treehouse.widget.HTMLElementChildren.clear","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-h-t-m-l-element-children/clear.html","searchKeys":["clear","open override fun clear()","app.cash.treehouse.widget.HTMLElementChildren.clear"]},{"name":"open override fun clear()","description":"app.cash.treehouse.widget.MutableListChildren.clear","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-mutable-list-children/clear.html","searchKeys":["clear","open override fun clear()","app.cash.treehouse.widget.MutableListChildren.clear"]},{"name":"open override fun clear()","description":"app.cash.treehouse.widget.UIViewChildren.clear","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-u-i-view-children/clear.html","searchKeys":["clear","open override fun clear()","app.cash.treehouse.widget.UIViewChildren.clear"]},{"name":"open override fun clear()","description":"app.cash.treehouse.widget.ViewGroupChildren.clear","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-view-group-children/clear.html","searchKeys":["clear","open override fun clear()","app.cash.treehouse.widget.ViewGroupChildren.clear"]},{"name":"open override fun insert(index: Int, widget: <ERROR CLASS>)","description":"app.cash.treehouse.widget.UIViewChildren.insert","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-u-i-view-children/insert.html","searchKeys":["insert","open override fun insert(index: Int, widget: <ERROR CLASS>)","app.cash.treehouse.widget.UIViewChildren.insert"]},{"name":"open override fun insert(index: Int, widget: HTMLElement)","description":"app.cash.treehouse.widget.HTMLElementChildren.insert","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-h-t-m-l-element-children/insert.html","searchKeys":["insert","open override fun insert(index: Int, widget: HTMLElement)","app.cash.treehouse.widget.HTMLElementChildren.insert"]},{"name":"open override fun insert(index: Int, widget: T)","description":"app.cash.treehouse.widget.MutableListChildren.insert","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-mutable-list-children/insert.html","searchKeys":["insert","open override fun insert(index: Int, widget: T)","app.cash.treehouse.widget.MutableListChildren.insert"]},{"name":"open override fun insert(index: Int, widget: View)","description":"app.cash.treehouse.widget.ViewGroupChildren.insert","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-view-group-children/insert.html","searchKeys":["insert","open override fun insert(index: Int, widget: View)","app.cash.treehouse.widget.ViewGroupChildren.insert"]},{"name":"open override fun move(fromIndex: Int, toIndex: Int, count: Int)","description":"app.cash.treehouse.widget.HTMLElementChildren.move","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-h-t-m-l-element-children/move.html","searchKeys":["move","open override fun move(fromIndex: Int, toIndex: Int, count: Int)","app.cash.treehouse.widget.HTMLElementChildren.move"]},{"name":"open override fun move(fromIndex: Int, toIndex: Int, count: Int)","description":"app.cash.treehouse.widget.MutableListChildren.move","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-mutable-list-children/move.html","searchKeys":["move","open override fun move(fromIndex: Int, toIndex: Int, count: Int)","app.cash.treehouse.widget.MutableListChildren.move"]},{"name":"open override fun move(fromIndex: Int, toIndex: Int, count: Int)","description":"app.cash.treehouse.widget.UIViewChildren.move","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-u-i-view-children/move.html","searchKeys":["move","open override fun move(fromIndex: Int, toIndex: Int, count: Int)","app.cash.treehouse.widget.UIViewChildren.move"]},{"name":"open override fun move(fromIndex: Int, toIndex: Int, count: Int)","description":"app.cash.treehouse.widget.ViewGroupChildren.move","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-view-group-children/move.html","searchKeys":["move","open override fun move(fromIndex: Int, toIndex: Int, count: Int)","app.cash.treehouse.widget.ViewGroupChildren.move"]},{"name":"open override fun remove(index: Int, count: Int)","description":"app.cash.treehouse.widget.HTMLElementChildren.remove","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-h-t-m-l-element-children/remove.html","searchKeys":["remove","open override fun remove(index: Int, count: Int)","app.cash.treehouse.widget.HTMLElementChildren.remove"]},{"name":"open override fun remove(index: Int, count: Int)","description":"app.cash.treehouse.widget.MutableListChildren.remove","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-mutable-list-children/remove.html","searchKeys":["remove","open override fun remove(index: Int, count: Int)","app.cash.treehouse.widget.MutableListChildren.remove"]},{"name":"open override fun remove(index: Int, count: Int)","description":"app.cash.treehouse.widget.UIViewChildren.remove","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-u-i-view-children/remove.html","searchKeys":["remove","open override fun remove(index: Int, count: Int)","app.cash.treehouse.widget.UIViewChildren.remove"]},{"name":"open override fun remove(index: Int, count: Int)","description":"app.cash.treehouse.widget.ViewGroupChildren.remove","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-view-group-children/remove.html","searchKeys":["remove","open override fun remove(index: Int, count: Int)","app.cash.treehouse.widget.ViewGroupChildren.remove"]},{"name":"val list: MutableList<T>","description":"app.cash.treehouse.widget.MutableListChildren.list","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-mutable-list-children/list.html","searchKeys":["list","val list: MutableList<T>","app.cash.treehouse.widget.MutableListChildren.list"]},{"name":"abstract fun cancel()","description":"app.cash.treehouse.compose.TreehouseComposition.cancel","location":"treehouse-compose/treehouse-compose/app.cash.treehouse.compose/-treehouse-composition/cancel.html","searchKeys":["cancel","abstract fun cancel()","app.cash.treehouse.compose.TreehouseComposition.cancel"]},{"name":"abstract fun sendEvent(event: Event)","description":"app.cash.treehouse.compose.TreehouseComposition.sendEvent","location":"treehouse-compose/treehouse-compose/app.cash.treehouse.compose/-treehouse-composition/send-event.html","searchKeys":["sendEvent","abstract fun sendEvent(event: Event)","app.cash.treehouse.compose.TreehouseComposition.sendEvent"]},{"name":"abstract fun setContent(content: () -> Unit)","description":"app.cash.treehouse.compose.TreehouseComposition.setContent","location":"treehouse-compose/treehouse-compose/app.cash.treehouse.compose/-treehouse-composition/set-content.html","searchKeys":["setContent","abstract fun setContent(content: () -> Unit)","app.cash.treehouse.compose.TreehouseComposition.setContent"]},{"name":"class AndroidUiDispatcher : CoroutineDispatcher","description":"app.cash.treehouse.compose.AndroidUiDispatcher","location":"treehouse-compose/treehouse-compose/app.cash.treehouse.compose/-android-ui-dispatcher/index.html","searchKeys":["AndroidUiDispatcher","class AndroidUiDispatcher : CoroutineDispatcher","app.cash.treehouse.compose.AndroidUiDispatcher"]},{"name":"class AndroidUiFrameClock(choreographer: Choreographer) : MonotonicFrameClock","description":"app.cash.treehouse.compose.AndroidUiFrameClock","location":"treehouse-compose/treehouse-compose/app.cash.treehouse.compose/-android-ui-frame-clock/index.html","searchKeys":["AndroidUiFrameClock","class AndroidUiFrameClock(choreographer: Choreographer) : MonotonicFrameClock","app.cash.treehouse.compose.AndroidUiFrameClock"]},{"name":"fun AndroidUiFrameClock(choreographer: Choreographer)","description":"app.cash.treehouse.compose.AndroidUiFrameClock.AndroidUiFrameClock","location":"treehouse-compose/treehouse-compose/app.cash.treehouse.compose/-android-ui-frame-clock/-android-ui-frame-clock.html","searchKeys":["AndroidUiFrameClock","fun AndroidUiFrameClock(choreographer: Choreographer)","app.cash.treehouse.compose.AndroidUiFrameClock.AndroidUiFrameClock"]},{"name":"fun TreehouseComposition(scope: CoroutineScope, display: (diff: Diff, events: (Event) -> Unit) -> Unit, onDiff: (Diff) -> Unit = {}, onEvent: (Event) -> Unit = {}): TreehouseComposition","description":"app.cash.treehouse.compose.TreehouseComposition","location":"treehouse-compose/treehouse-compose/app.cash.treehouse.compose/-treehouse-composition.html","searchKeys":["TreehouseComposition","fun TreehouseComposition(scope: CoroutineScope, display: (diff: Diff, events: (Event) -> Unit) -> Unit, onDiff: (Diff) -> Unit = {}, onEvent: (Event) -> Unit = {}): TreehouseComposition","app.cash.treehouse.compose.TreehouseComposition"]},{"name":"interface TreehouseComposition","description":"app.cash.treehouse.compose.TreehouseComposition","location":"treehouse-compose/treehouse-compose/app.cash.treehouse.compose/-treehouse-composition/index.html","searchKeys":["TreehouseComposition","interface TreehouseComposition","app.cash.treehouse.compose.TreehouseComposition"]},{"name":"object Companion","description":"app.cash.treehouse.compose.AndroidUiDispatcher.Companion","location":"treehouse-compose/treehouse-compose/app.cash.treehouse.compose/-android-ui-dispatcher/-companion/index.html","searchKeys":["Companion","object Companion","app.cash.treehouse.compose.AndroidUiDispatcher.Companion"]},{"name":"object WindowAnimationFrameClock","description":"app.cash.treehouse.compose.WindowAnimationFrameClock","location":"treehouse-compose/treehouse-compose/app.cash.treehouse.compose/-window-animation-frame-clock/index.html","searchKeys":["WindowAnimationFrameClock","object WindowAnimationFrameClock","app.cash.treehouse.compose.WindowAnimationFrameClock"]},{"name":"open override fun dispatch(context: CoroutineContext, block: Runnable)","description":"app.cash.treehouse.compose.AndroidUiDispatcher.dispatch","location":"treehouse-compose/treehouse-compose/app.cash.treehouse.compose/-android-ui-dispatcher/dispatch.html","searchKeys":["dispatch","open override fun dispatch(context: CoroutineContext, block: Runnable)","app.cash.treehouse.compose.AndroidUiDispatcher.dispatch"]},{"name":"open suspend fun <R> withFrameNanos(onFrame: (Long) -> R): R","description":"app.cash.treehouse.compose.WindowAnimationFrameClock.withFrameNanos","location":"treehouse-compose/treehouse-compose/app.cash.treehouse.compose/-window-animation-frame-clock/with-frame-nanos.html","searchKeys":["withFrameNanos","open suspend fun <R> withFrameNanos(onFrame: (Long) -> R): R","app.cash.treehouse.compose.WindowAnimationFrameClock.withFrameNanos"]},{"name":"open suspend override fun <R> withFrameNanos(onFrame: (Long) -> R): R","description":"app.cash.treehouse.compose.AndroidUiFrameClock.withFrameNanos","location":"treehouse-compose/treehouse-compose/app.cash.treehouse.compose/-android-ui-frame-clock/with-frame-nanos.html","searchKeys":["withFrameNanos","open suspend override fun <R> withFrameNanos(onFrame: (Long) -> R): R","app.cash.treehouse.compose.AndroidUiFrameClock.withFrameNanos"]},{"name":"val Main: CoroutineContext","description":"app.cash.treehouse.compose.AndroidUiDispatcher.Companion.Main","location":"treehouse-compose/treehouse-compose/app.cash.treehouse.compose/-android-ui-dispatcher/-companion/-main.html","searchKeys":["Main","val Main: CoroutineContext","app.cash.treehouse.compose.AndroidUiDispatcher.Companion.Main"]},{"name":"val choreographer: Choreographer","description":"app.cash.treehouse.compose.AndroidUiDispatcher.choreographer","location":"treehouse-compose/treehouse-compose/app.cash.treehouse.compose/-android-ui-dispatcher/choreographer.html","searchKeys":["choreographer","val choreographer: Choreographer","app.cash.treehouse.compose.AndroidUiDispatcher.choreographer"]},{"name":"val frameClock: MonotonicFrameClock","description":"app.cash.treehouse.compose.AndroidUiDispatcher.frameClock","location":"treehouse-compose/treehouse-compose/app.cash.treehouse.compose/-android-ui-dispatcher/frame-clock.html","searchKeys":["frameClock","val frameClock: MonotonicFrameClock","app.cash.treehouse.compose.AndroidUiDispatcher.frameClock"]},{"name":"annotation class Children(tag: Int)","description":"app.cash.treehouse.schema.Children","location":"treehouse-schema-annotations/treehouse-schema-annotations/app.cash.treehouse.schema/-children/index.html","searchKeys":["Children","annotation class Children(tag: Int)","app.cash.treehouse.schema.Children"]},{"name":"annotation class Default(expression: String)","description":"app.cash.treehouse.schema.Default","location":"treehouse-schema-annotations/treehouse-schema-annotations/app.cash.treehouse.schema/-default/index.html","searchKeys":["Default","annotation class Default(expression: String)","app.cash.treehouse.schema.Default"]},{"name":"annotation class Property(tag: Int)","description":"app.cash.treehouse.schema.Property","location":"treehouse-schema-annotations/treehouse-schema-annotations/app.cash.treehouse.schema/-property/index.html","searchKeys":["Property","annotation class Property(tag: Int)","app.cash.treehouse.schema.Property"]},{"name":"annotation class Schema(widgets: Array<KClass<*>>)","description":"app.cash.treehouse.schema.Schema","location":"treehouse-schema-annotations/treehouse-schema-annotations/app.cash.treehouse.schema/-schema/index.html","searchKeys":["Schema","annotation class Schema(widgets: Array<KClass<*>>)","app.cash.treehouse.schema.Schema"]},{"name":"annotation class Widget(tag: Int)","description":"app.cash.treehouse.schema.Widget","location":"treehouse-schema-annotations/treehouse-schema-annotations/app.cash.treehouse.schema/-widget/index.html","searchKeys":["Widget","annotation class Widget(tag: Int)","app.cash.treehouse.schema.Widget"]},{"name":"fun Children(tag: Int)","description":"app.cash.treehouse.schema.Children.Children","location":"treehouse-schema-annotations/treehouse-schema-annotations/app.cash.treehouse.schema/-children/-children.html","searchKeys":["Children","fun Children(tag: Int)","app.cash.treehouse.schema.Children.Children"]},{"name":"fun Default(expression: String)","description":"app.cash.treehouse.schema.Default.Default","location":"treehouse-schema-annotations/treehouse-schema-annotations/app.cash.treehouse.schema/-default/-default.html","searchKeys":["Default","fun Default(expression: String)","app.cash.treehouse.schema.Default.Default"]},{"name":"fun Property(tag: Int)","description":"app.cash.treehouse.schema.Property.Property","location":"treehouse-schema-annotations/treehouse-schema-annotations/app.cash.treehouse.schema/-property/-property.html","searchKeys":["Property","fun Property(tag: Int)","app.cash.treehouse.schema.Property.Property"]},{"name":"fun Schema(widgets: Array<KClass<*>>)","description":"app.cash.treehouse.schema.Schema.Schema","location":"treehouse-schema-annotations/treehouse-schema-annotations/app.cash.treehouse.schema/-schema/-schema.html","searchKeys":["Schema","fun Schema(widgets: Array<KClass<*>>)","app.cash.treehouse.schema.Schema.Schema"]},{"name":"fun Widget(tag: Int)","description":"app.cash.treehouse.schema.Widget.Widget","location":"treehouse-schema-annotations/treehouse-schema-annotations/app.cash.treehouse.schema/-widget/-widget.html","searchKeys":["Widget","fun Widget(tag: Int)","app.cash.treehouse.schema.Widget.Widget"]},{"name":"val expression: String","description":"app.cash.treehouse.schema.Default.expression","location":"treehouse-schema-annotations/treehouse-schema-annotations/app.cash.treehouse.schema/-default/expression.html","searchKeys":["expression","val expression: String","app.cash.treehouse.schema.Default.expression"]},{"name":"val tag: Int","description":"app.cash.treehouse.schema.Children.tag","location":"treehouse-schema-annotations/treehouse-schema-annotations/app.cash.treehouse.schema/-children/tag.html","searchKeys":["tag","val tag: Int","app.cash.treehouse.schema.Children.tag"]},{"name":"val tag: Int","description":"app.cash.treehouse.schema.Property.tag","location":"treehouse-schema-annotations/treehouse-schema-annotations/app.cash.treehouse.schema/-property/tag.html","searchKeys":["tag","val tag: Int","app.cash.treehouse.schema.Property.tag"]},{"name":"val tag: Int","description":"app.cash.treehouse.schema.Widget.tag","location":"treehouse-schema-annotations/treehouse-schema-annotations/app.cash.treehouse.schema/-widget/tag.html","searchKeys":["tag","val tag: Int","app.cash.treehouse.schema.Widget.tag"]},{"name":"val widgets: Array<KClass<*>>","description":"app.cash.treehouse.schema.Schema.widgets","location":"treehouse-schema-annotations/treehouse-schema-annotations/app.cash.treehouse.schema/-schema/widgets.html","searchKeys":["widgets","val widgets: Array<KClass<*>>","app.cash.treehouse.schema.Schema.widgets"]},{"name":"abstract val id: Long","description":"app.cash.treehouse.protocol.ChildrenDiff.id","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/id.html","searchKeys":["id","abstract val id: Long","app.cash.treehouse.protocol.ChildrenDiff.id"]},{"name":"abstract val tag: Int","description":"app.cash.treehouse.protocol.ChildrenDiff.tag","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/tag.html","searchKeys":["tag","abstract val tag: Int","app.cash.treehouse.protocol.ChildrenDiff.tag"]},{"name":"const val RootChildrenTag: Int = 1","description":"app.cash.treehouse.protocol.ChildrenDiff.Companion.RootChildrenTag","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/-companion/-root-children-tag.html","searchKeys":["RootChildrenTag","const val RootChildrenTag: Int = 1","app.cash.treehouse.protocol.ChildrenDiff.Companion.RootChildrenTag"]},{"name":"const val RootId: Long = 0L","description":"app.cash.treehouse.protocol.ChildrenDiff.Companion.RootId","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/-companion/-root-id.html","searchKeys":["RootId","const val RootId: Long = 0L","app.cash.treehouse.protocol.ChildrenDiff.Companion.RootId"]},{"name":"data class Diff(childrenDiffs: List<ChildrenDiff>, propertyDiffs: List<PropertyDiff>)","description":"app.cash.treehouse.protocol.Diff","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-diff/index.html","searchKeys":["Diff","data class Diff(childrenDiffs: List<ChildrenDiff>, propertyDiffs: List<PropertyDiff>)","app.cash.treehouse.protocol.Diff"]},{"name":"data class Event(id: Long, tag: Int, value: Any?)","description":"app.cash.treehouse.protocol.Event","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-event/index.html","searchKeys":["Event","data class Event(id: Long, tag: Int, value: Any?)","app.cash.treehouse.protocol.Event"]},{"name":"data class Insert(id: Long, tag: Int, childId: Long, kind: Int, index: Int) : ChildrenDiff","description":"app.cash.treehouse.protocol.ChildrenDiff.Insert","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/-insert/index.html","searchKeys":["Insert","data class Insert(id: Long, tag: Int, childId: Long, kind: Int, index: Int) : ChildrenDiff","app.cash.treehouse.protocol.ChildrenDiff.Insert"]},{"name":"data class Move(id: Long, tag: Int, fromIndex: Int, toIndex: Int, count: Int) : ChildrenDiff","description":"app.cash.treehouse.protocol.ChildrenDiff.Move","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/-move/index.html","searchKeys":["Move","data class Move(id: Long, tag: Int, fromIndex: Int, toIndex: Int, count: Int) : ChildrenDiff","app.cash.treehouse.protocol.ChildrenDiff.Move"]},{"name":"data class PropertyDiff(id: Long, tag: Int, value: Any?)","description":"app.cash.treehouse.protocol.PropertyDiff","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-property-diff/index.html","searchKeys":["PropertyDiff","data class PropertyDiff(id: Long, tag: Int, value: Any?)","app.cash.treehouse.protocol.PropertyDiff"]},{"name":"data class Remove(id: Long, tag: Int, index: Int, count: Int) : ChildrenDiff","description":"app.cash.treehouse.protocol.ChildrenDiff.Remove","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/-remove/index.html","searchKeys":["Remove","data class Remove(id: Long, tag: Int, index: Int, count: Int) : ChildrenDiff","app.cash.treehouse.protocol.ChildrenDiff.Remove"]},{"name":"fun Diff(childrenDiffs: List<ChildrenDiff> = emptyList(), propertyDiffs: List<PropertyDiff> = emptyList())","description":"app.cash.treehouse.protocol.Diff.Diff","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-diff/-diff.html","searchKeys":["Diff","fun Diff(childrenDiffs: List<ChildrenDiff> = emptyList(), propertyDiffs: List<PropertyDiff> = emptyList())","app.cash.treehouse.protocol.Diff.Diff"]},{"name":"fun Event(id: Long, tag: Int, value: Any? = null)","description":"app.cash.treehouse.protocol.Event.Event","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-event/-event.html","searchKeys":["Event","fun Event(id: Long, tag: Int, value: Any? = null)","app.cash.treehouse.protocol.Event.Event"]},{"name":"fun Insert(id: Long, tag: Int, childId: Long, kind: Int, index: Int)","description":"app.cash.treehouse.protocol.ChildrenDiff.Insert.Insert","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/-insert/-insert.html","searchKeys":["Insert","fun Insert(id: Long, tag: Int, childId: Long, kind: Int, index: Int)","app.cash.treehouse.protocol.ChildrenDiff.Insert.Insert"]},{"name":"fun Move(id: Long, tag: Int, fromIndex: Int, toIndex: Int, count: Int)","description":"app.cash.treehouse.protocol.ChildrenDiff.Move.Move","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/-move/-move.html","searchKeys":["Move","fun Move(id: Long, tag: Int, fromIndex: Int, toIndex: Int, count: Int)","app.cash.treehouse.protocol.ChildrenDiff.Move.Move"]},{"name":"fun PropertyDiff(id: Long, tag: Int, value: Any? = null)","description":"app.cash.treehouse.protocol.PropertyDiff.PropertyDiff","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-property-diff/-property-diff.html","searchKeys":["PropertyDiff","fun PropertyDiff(id: Long, tag: Int, value: Any? = null)","app.cash.treehouse.protocol.PropertyDiff.PropertyDiff"]},{"name":"fun Remove(id: Long, tag: Int, index: Int, count: Int)","description":"app.cash.treehouse.protocol.ChildrenDiff.Remove.Remove","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/-remove/-remove.html","searchKeys":["Remove","fun Remove(id: Long, tag: Int, index: Int, count: Int)","app.cash.treehouse.protocol.ChildrenDiff.Remove.Remove"]},{"name":"object Clear : ChildrenDiff","description":"app.cash.treehouse.protocol.ChildrenDiff.Clear","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/-clear/index.html","searchKeys":["Clear","object Clear : ChildrenDiff","app.cash.treehouse.protocol.ChildrenDiff.Clear"]},{"name":"object Companion","description":"app.cash.treehouse.protocol.ChildrenDiff.Companion","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/-companion/index.html","searchKeys":["Companion","object Companion","app.cash.treehouse.protocol.ChildrenDiff.Companion"]},{"name":"open override val id: Long","description":"app.cash.treehouse.protocol.ChildrenDiff.Clear.id","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/-clear/id.html","searchKeys":["id","open override val id: Long","app.cash.treehouse.protocol.ChildrenDiff.Clear.id"]},{"name":"open override val id: Long","description":"app.cash.treehouse.protocol.ChildrenDiff.Insert.id","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/-insert/id.html","searchKeys":["id","open override val id: Long","app.cash.treehouse.protocol.ChildrenDiff.Insert.id"]},{"name":"open override val id: Long","description":"app.cash.treehouse.protocol.ChildrenDiff.Move.id","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/-move/id.html","searchKeys":["id","open override val id: Long","app.cash.treehouse.protocol.ChildrenDiff.Move.id"]},{"name":"open override val id: Long","description":"app.cash.treehouse.protocol.ChildrenDiff.Remove.id","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/-remove/id.html","searchKeys":["id","open override val id: Long","app.cash.treehouse.protocol.ChildrenDiff.Remove.id"]},{"name":"open override val tag: Int","description":"app.cash.treehouse.protocol.ChildrenDiff.Clear.tag","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/-clear/tag.html","searchKeys":["tag","open override val tag: Int","app.cash.treehouse.protocol.ChildrenDiff.Clear.tag"]},{"name":"open override val tag: Int","description":"app.cash.treehouse.protocol.ChildrenDiff.Insert.tag","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/-insert/tag.html","searchKeys":["tag","open override val tag: Int","app.cash.treehouse.protocol.ChildrenDiff.Insert.tag"]},{"name":"open override val tag: Int","description":"app.cash.treehouse.protocol.ChildrenDiff.Move.tag","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/-move/tag.html","searchKeys":["tag","open override val tag: Int","app.cash.treehouse.protocol.ChildrenDiff.Move.tag"]},{"name":"open override val tag: Int","description":"app.cash.treehouse.protocol.ChildrenDiff.Remove.tag","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/-remove/tag.html","searchKeys":["tag","open override val tag: Int","app.cash.treehouse.protocol.ChildrenDiff.Remove.tag"]},{"name":"sealed class ChildrenDiff","description":"app.cash.treehouse.protocol.ChildrenDiff","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/index.html","searchKeys":["ChildrenDiff","sealed class ChildrenDiff","app.cash.treehouse.protocol.ChildrenDiff"]},{"name":"val childId: Long","description":"app.cash.treehouse.protocol.ChildrenDiff.Insert.childId","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/-insert/child-id.html","searchKeys":["childId","val childId: Long","app.cash.treehouse.protocol.ChildrenDiff.Insert.childId"]},{"name":"val childrenDiffs: List<ChildrenDiff>","description":"app.cash.treehouse.protocol.Diff.childrenDiffs","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-diff/children-diffs.html","searchKeys":["childrenDiffs","val childrenDiffs: List<ChildrenDiff>","app.cash.treehouse.protocol.Diff.childrenDiffs"]},{"name":"val count: Int","description":"app.cash.treehouse.protocol.ChildrenDiff.Move.count","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/-move/count.html","searchKeys":["count","val count: Int","app.cash.treehouse.protocol.ChildrenDiff.Move.count"]},{"name":"val count: Int","description":"app.cash.treehouse.protocol.ChildrenDiff.Remove.count","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/-remove/count.html","searchKeys":["count","val count: Int","app.cash.treehouse.protocol.ChildrenDiff.Remove.count"]},{"name":"val fromIndex: Int","description":"app.cash.treehouse.protocol.ChildrenDiff.Move.fromIndex","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/-move/from-index.html","searchKeys":["fromIndex","val fromIndex: Int","app.cash.treehouse.protocol.ChildrenDiff.Move.fromIndex"]},{"name":"val id: Long","description":"app.cash.treehouse.protocol.Event.id","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-event/id.html","searchKeys":["id","val id: Long","app.cash.treehouse.protocol.Event.id"]},{"name":"val id: Long","description":"app.cash.treehouse.protocol.PropertyDiff.id","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-property-diff/id.html","searchKeys":["id","val id: Long","app.cash.treehouse.protocol.PropertyDiff.id"]},{"name":"val index: Int","description":"app.cash.treehouse.protocol.ChildrenDiff.Insert.index","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/-insert/--index--.html","searchKeys":["index","val index: Int","app.cash.treehouse.protocol.ChildrenDiff.Insert.index"]},{"name":"val index: Int","description":"app.cash.treehouse.protocol.ChildrenDiff.Remove.index","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/-remove/--index--.html","searchKeys":["index","val index: Int","app.cash.treehouse.protocol.ChildrenDiff.Remove.index"]},{"name":"val kind: Int","description":"app.cash.treehouse.protocol.ChildrenDiff.Insert.kind","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/-insert/kind.html","searchKeys":["kind","val kind: Int","app.cash.treehouse.protocol.ChildrenDiff.Insert.kind"]},{"name":"val propertyDiffs: List<PropertyDiff>","description":"app.cash.treehouse.protocol.Diff.propertyDiffs","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-diff/property-diffs.html","searchKeys":["propertyDiffs","val propertyDiffs: List<PropertyDiff>","app.cash.treehouse.protocol.Diff.propertyDiffs"]},{"name":"val tag: Int","description":"app.cash.treehouse.protocol.Event.tag","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-event/tag.html","searchKeys":["tag","val tag: Int","app.cash.treehouse.protocol.Event.tag"]},{"name":"val tag: Int","description":"app.cash.treehouse.protocol.PropertyDiff.tag","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-property-diff/tag.html","searchKeys":["tag","val tag: Int","app.cash.treehouse.protocol.PropertyDiff.tag"]},{"name":"val toIndex: Int","description":"app.cash.treehouse.protocol.ChildrenDiff.Move.toIndex","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/-move/to-index.html","searchKeys":["toIndex","val toIndex: Int","app.cash.treehouse.protocol.ChildrenDiff.Move.toIndex"]},{"name":"val value: Any? = null","description":"app.cash.treehouse.protocol.Event.value","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-event/value.html","searchKeys":["value","val value: Any? = null","app.cash.treehouse.protocol.Event.value"]},{"name":"val value: Any? = null","description":"app.cash.treehouse.protocol.PropertyDiff.value","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-property-diff/value.html","searchKeys":["value","val value: Any? = null","app.cash.treehouse.protocol.PropertyDiff.value"]},{"name":"CHANGED()","description":"androidx.compose.compiler.plugins.kotlin.ValidationType.CHANGED","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-validation-type/-c-h-a-n-g-e-d/index.html","searchKeys":["CHANGED","CHANGED()","androidx.compose.compiler.plugins.kotlin.ValidationType.CHANGED"]},{"name":"Different(0b010)","description":"androidx.compose.compiler.plugins.kotlin.lower.ParamState.Different","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-param-state/-different/index.html","searchKeys":["Different","Different(0b010)","androidx.compose.compiler.plugins.kotlin.lower.ParamState.Different"]},{"name":"Mask(0b111)","description":"androidx.compose.compiler.plugins.kotlin.lower.ParamState.Mask","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-param-state/-mask/index.html","searchKeys":["Mask","Mask(0b111)","androidx.compose.compiler.plugins.kotlin.lower.ParamState.Mask"]},{"name":"SET()","description":"androidx.compose.compiler.plugins.kotlin.ValidationType.SET","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-validation-type/-s-e-t/index.html","searchKeys":["SET","SET()","androidx.compose.compiler.plugins.kotlin.ValidationType.SET"]},{"name":"STABLE(0b000)","description":"androidx.compose.compiler.plugins.kotlin.lower.StabilityBits.STABLE","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-stability-bits/-s-t-a-b-l-e/index.html","searchKeys":["STABLE","STABLE(0b000)","androidx.compose.compiler.plugins.kotlin.lower.StabilityBits.STABLE"]},{"name":"Same(0b001)","description":"androidx.compose.compiler.plugins.kotlin.lower.ParamState.Same","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-param-state/-same/index.html","searchKeys":["Same","Same(0b001)","androidx.compose.compiler.plugins.kotlin.lower.ParamState.Same"]},{"name":"Static(0b011)","description":"androidx.compose.compiler.plugins.kotlin.lower.ParamState.Static","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-param-state/-static/index.html","searchKeys":["Static","Static(0b011)","androidx.compose.compiler.plugins.kotlin.lower.ParamState.Static"]},{"name":"UNSTABLE(0b100)","description":"androidx.compose.compiler.plugins.kotlin.lower.StabilityBits.UNSTABLE","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-stability-bits/-u-n-s-t-a-b-l-e/index.html","searchKeys":["UNSTABLE","UNSTABLE(0b100)","androidx.compose.compiler.plugins.kotlin.lower.StabilityBits.UNSTABLE"]},{"name":"UPDATE()","description":"androidx.compose.compiler.plugins.kotlin.ValidationType.UPDATE","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-validation-type/-u-p-d-a-t-e/index.html","searchKeys":["UPDATE","UPDATE()","androidx.compose.compiler.plugins.kotlin.ValidationType.UPDATE"]},{"name":"Uncertain(0b000)","description":"androidx.compose.compiler.plugins.kotlin.lower.ParamState.Uncertain","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-param-state/-uncertain/index.html","searchKeys":["Uncertain","Uncertain(0b000)","androidx.compose.compiler.plugins.kotlin.lower.ParamState.Uncertain"]},{"name":"Unknown(0b100)","description":"androidx.compose.compiler.plugins.kotlin.lower.ParamState.Unknown","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-param-state/-unknown/index.html","searchKeys":["Unknown","Unknown(0b100)","androidx.compose.compiler.plugins.kotlin.lower.ParamState.Unknown"]},{"name":"abstract class AbstractComposeLowering(context: IrPluginContext, symbolRemapper: DeepCopySymbolRemapper, bindingTrace: BindingTrace) : IrElementTransformerVoid, ModuleLoweringPass","description":"androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-abstract-compose-lowering/index.html","searchKeys":["AbstractComposeLowering","abstract class AbstractComposeLowering(context: IrPluginContext, symbolRemapper: DeepCopySymbolRemapper, bindingTrace: BindingTrace) : IrElementTransformerVoid, ModuleLoweringPass","androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering"]},{"name":"abstract class BlockScope(name: String) : ComposableFunctionBodyTransformer.Scope","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.BlockScope","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-block-scope/index.html","searchKeys":["BlockScope","abstract class BlockScope(name: String) : ComposableFunctionBodyTransformer.Scope","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.BlockScope"]},{"name":"abstract fun asStatements(): List<IrStatement>","description":"androidx.compose.compiler.plugins.kotlin.lower.IrChangedBitMaskVariable.asStatements","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-ir-changed-bit-mask-variable/as-statements.html","searchKeys":["asStatements","abstract fun asStatements(): List<IrStatement>","androidx.compose.compiler.plugins.kotlin.lower.IrChangedBitMaskVariable.asStatements"]},{"name":"abstract fun irCopyToTemporary(nameHint: String? = null, isVar: Boolean = false, exactName: Boolean = false): IrChangedBitMaskVariable","description":"androidx.compose.compiler.plugins.kotlin.lower.IrChangedBitMaskValue.irCopyToTemporary","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-ir-changed-bit-mask-value/ir-copy-to-temporary.html","searchKeys":["irCopyToTemporary","abstract fun irCopyToTemporary(nameHint: String? = null, isVar: Boolean = false, exactName: Boolean = false): IrChangedBitMaskVariable","androidx.compose.compiler.plugins.kotlin.lower.IrChangedBitMaskValue.irCopyToTemporary"]},{"name":"abstract fun irHasAnyProvidedAndUnstable(unstable: BooleanArray): IrExpression","description":"androidx.compose.compiler.plugins.kotlin.lower.IrDefaultBitMaskValue.irHasAnyProvidedAndUnstable","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-ir-default-bit-mask-value/ir-has-any-provided-and-unstable.html","searchKeys":["irHasAnyProvidedAndUnstable","abstract fun irHasAnyProvidedAndUnstable(unstable: BooleanArray): IrExpression","androidx.compose.compiler.plugins.kotlin.lower.IrDefaultBitMaskValue.irHasAnyProvidedAndUnstable"]},{"name":"abstract fun irHasDifferences(usedParams: BooleanArray): IrExpression","description":"androidx.compose.compiler.plugins.kotlin.lower.IrChangedBitMaskValue.irHasDifferences","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-ir-changed-bit-mask-value/ir-has-differences.html","searchKeys":["irHasDifferences","abstract fun irHasDifferences(usedParams: BooleanArray): IrExpression","androidx.compose.compiler.plugins.kotlin.lower.IrChangedBitMaskValue.irHasDifferences"]},{"name":"abstract fun irIsolateBitAtIndex(index: Int): IrExpression","description":"androidx.compose.compiler.plugins.kotlin.lower.IrDefaultBitMaskValue.irIsolateBitAtIndex","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-ir-default-bit-mask-value/ir-isolate-bit-at-index.html","searchKeys":["irIsolateBitAtIndex","abstract fun irIsolateBitAtIndex(index: Int): IrExpression","androidx.compose.compiler.plugins.kotlin.lower.IrDefaultBitMaskValue.irIsolateBitAtIndex"]},{"name":"abstract fun irIsolateBitsAtSlot(slot: Int, includeStableBit: Boolean): IrExpression","description":"androidx.compose.compiler.plugins.kotlin.lower.IrChangedBitMaskValue.irIsolateBitsAtSlot","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-ir-changed-bit-mask-value/ir-isolate-bits-at-slot.html","searchKeys":["irIsolateBitsAtSlot","abstract fun irIsolateBitsAtSlot(slot: Int, includeStableBit: Boolean): IrExpression","androidx.compose.compiler.plugins.kotlin.lower.IrChangedBitMaskValue.irIsolateBitsAtSlot"]},{"name":"abstract fun irLowBit(): IrExpression","description":"androidx.compose.compiler.plugins.kotlin.lower.IrChangedBitMaskValue.irLowBit","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-ir-changed-bit-mask-value/ir-low-bit.html","searchKeys":["irLowBit","abstract fun irLowBit(): IrExpression","androidx.compose.compiler.plugins.kotlin.lower.IrChangedBitMaskValue.irLowBit"]},{"name":"abstract fun irOrSetBitsAtSlot(slot: Int, value: IrExpression): IrExpression","description":"androidx.compose.compiler.plugins.kotlin.lower.IrChangedBitMaskVariable.irOrSetBitsAtSlot","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-ir-changed-bit-mask-variable/ir-or-set-bits-at-slot.html","searchKeys":["irOrSetBitsAtSlot","abstract fun irOrSetBitsAtSlot(slot: Int, value: IrExpression): IrExpression","androidx.compose.compiler.plugins.kotlin.lower.IrChangedBitMaskVariable.irOrSetBitsAtSlot"]},{"name":"abstract fun irSetSlotUncertain(slot: Int): IrExpression","description":"androidx.compose.compiler.plugins.kotlin.lower.IrChangedBitMaskVariable.irSetSlotUncertain","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-ir-changed-bit-mask-variable/ir-set-slot-uncertain.html","searchKeys":["irSetSlotUncertain","abstract fun irSetSlotUncertain(slot: Int): IrExpression","androidx.compose.compiler.plugins.kotlin.lower.IrChangedBitMaskVariable.irSetSlotUncertain"]},{"name":"abstract fun irShiftBits(fromSlot: Int, toSlot: Int): IrExpression","description":"androidx.compose.compiler.plugins.kotlin.lower.IrChangedBitMaskValue.irShiftBits","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-ir-changed-bit-mask-value/ir-shift-bits.html","searchKeys":["irShiftBits","abstract fun irShiftBits(fromSlot: Int, toSlot: Int): IrExpression","androidx.compose.compiler.plugins.kotlin.lower.IrChangedBitMaskValue.irShiftBits"]},{"name":"abstract fun irSlotAnd(slot: Int, bits: Int): IrExpression","description":"androidx.compose.compiler.plugins.kotlin.lower.IrChangedBitMaskValue.irSlotAnd","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-ir-changed-bit-mask-value/ir-slot-and.html","searchKeys":["irSlotAnd","abstract fun irSlotAnd(slot: Int, bits: Int): IrExpression","androidx.compose.compiler.plugins.kotlin.lower.IrChangedBitMaskValue.irSlotAnd"]},{"name":"abstract fun lower(module: IrModuleFragment)","description":"androidx.compose.compiler.plugins.kotlin.lower.ModuleLoweringPass.lower","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-module-lowering-pass/lower.html","searchKeys":["lower","abstract fun lower(module: IrModuleFragment)","androidx.compose.compiler.plugins.kotlin.lower.ModuleLoweringPass.lower"]},{"name":"abstract fun putAsValueArgumentIn(fn: IrFunctionAccessExpression, startIndex: Int)","description":"androidx.compose.compiler.plugins.kotlin.lower.IrDefaultBitMaskValue.putAsValueArgumentIn","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-ir-default-bit-mask-value/put-as-value-argument-in.html","searchKeys":["putAsValueArgumentIn","abstract fun putAsValueArgumentIn(fn: IrFunctionAccessExpression, startIndex: Int)","androidx.compose.compiler.plugins.kotlin.lower.IrDefaultBitMaskValue.putAsValueArgumentIn"]},{"name":"abstract fun putAsValueArgumentInWithLowBit(fn: IrFunctionAccessExpression, startIndex: Int, lowBit: Boolean)","description":"androidx.compose.compiler.plugins.kotlin.lower.IrChangedBitMaskValue.putAsValueArgumentInWithLowBit","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-ir-changed-bit-mask-value/put-as-value-argument-in-with-low-bit.html","searchKeys":["putAsValueArgumentInWithLowBit","abstract fun putAsValueArgumentInWithLowBit(fn: IrFunctionAccessExpression, startIndex: Int, lowBit: Boolean)","androidx.compose.compiler.plugins.kotlin.lower.IrChangedBitMaskValue.putAsValueArgumentInWithLowBit"]},{"name":"abstract val used: Boolean","description":"androidx.compose.compiler.plugins.kotlin.lower.IrChangedBitMaskValue.used","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-ir-changed-bit-mask-value/used.html","searchKeys":["used","abstract val used: Boolean","androidx.compose.compiler.plugins.kotlin.lower.IrChangedBitMaskValue.used"]},{"name":"class BranchScope : ComposableFunctionBodyTransformer.Scope.BlockScope","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.BranchScope","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-branch-scope/index.html","searchKeys":["BranchScope","class BranchScope : ComposableFunctionBodyTransformer.Scope.BlockScope","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.BranchScope"]},{"name":"class CaptureScope : ComposableFunctionBodyTransformer.Scope.BlockScope","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.CaptureScope","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-capture-scope/index.html","searchKeys":["CaptureScope","class CaptureScope : ComposableFunctionBodyTransformer.Scope.BlockScope","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.CaptureScope"]},{"name":"class Certain(stable: Boolean) : Stability","description":"androidx.compose.compiler.plugins.kotlin.analysis.Stability.Certain","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.analysis/-stability/-certain/index.html","searchKeys":["Certain","class Certain(stable: Boolean) : Stability","androidx.compose.compiler.plugins.kotlin.analysis.Stability.Certain"]},{"name":"class ClassScope(name: Name) : ComposableFunctionBodyTransformer.Scope","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.ClassScope","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-class-scope/index.html","searchKeys":["ClassScope","class ClassScope(name: Name) : ComposableFunctionBodyTransformer.Scope","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.ClassScope"]},{"name":"class ClassStabilityFieldSerializationPlugin : DescriptorSerializerPlugin","description":"androidx.compose.compiler.plugins.kotlin.lower.ClassStabilityFieldSerializationPlugin","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-class-stability-field-serialization-plugin/index.html","searchKeys":["ClassStabilityFieldSerializationPlugin","class ClassStabilityFieldSerializationPlugin : DescriptorSerializerPlugin","androidx.compose.compiler.plugins.kotlin.lower.ClassStabilityFieldSerializationPlugin"]},{"name":"class ClassStabilityTransformer(context: IrPluginContext, symbolRemapper: DeepCopySymbolRemapper, bindingTrace: BindingTrace) : AbstractComposeLowering, ClassLoweringPass, ModuleLoweringPass","description":"androidx.compose.compiler.plugins.kotlin.lower.ClassStabilityTransformer","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-class-stability-transformer/index.html","searchKeys":["ClassStabilityTransformer","class ClassStabilityTransformer(context: IrPluginContext, symbolRemapper: DeepCopySymbolRemapper, bindingTrace: BindingTrace) : AbstractComposeLowering, ClassLoweringPass, ModuleLoweringPass","androidx.compose.compiler.plugins.kotlin.lower.ClassStabilityTransformer"]},{"name":"class Combined(elements: List<Stability>) : Stability","description":"androidx.compose.compiler.plugins.kotlin.analysis.Stability.Combined","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.analysis/-stability/-combined/index.html","searchKeys":["Combined","class Combined(elements: List<Stability>) : Stability","androidx.compose.compiler.plugins.kotlin.analysis.Stability.Combined"]},{"name":"class ComposableDeclarationChecker : DeclarationChecker, StorageComponentContainerContributor","description":"androidx.compose.compiler.plugins.kotlin.ComposableDeclarationChecker","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-composable-declaration-checker/index.html","searchKeys":["ComposableDeclarationChecker","class ComposableDeclarationChecker : DeclarationChecker, StorageComponentContainerContributor","androidx.compose.compiler.plugins.kotlin.ComposableDeclarationChecker"]},{"name":"class ComposableFunInterfaceLowering(context: IrPluginContext) : IrElementTransformerVoidWithContext, ModuleLoweringPass","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunInterfaceLowering","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-fun-interface-lowering/index.html","searchKeys":["ComposableFunInterfaceLowering","class ComposableFunInterfaceLowering(context: IrPluginContext) : IrElementTransformerVoidWithContext, ModuleLoweringPass","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunInterfaceLowering"]},{"name":"class ComposableFunctionBodyTransformer(context: IrPluginContext, symbolRemapper: DeepCopySymbolRemapper, bindingTrace: BindingTrace, sourceInformationEnabled: Boolean, intrinsicRememberEnabled: Boolean) : AbstractComposeLowering, FileLoweringPass, ModuleLoweringPass","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/index.html","searchKeys":["ComposableFunctionBodyTransformer","class ComposableFunctionBodyTransformer(context: IrPluginContext, symbolRemapper: DeepCopySymbolRemapper, bindingTrace: BindingTrace, sourceInformationEnabled: Boolean, intrinsicRememberEnabled: Boolean) : AbstractComposeLowering, FileLoweringPass, ModuleLoweringPass","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer"]},{"name":"class ComposableLambdaScope : ComposableFunctionBodyTransformer.Scope.BlockScope","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.ComposableLambdaScope","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-composable-lambda-scope/index.html","searchKeys":["ComposableLambdaScope","class ComposableLambdaScope : ComposableFunctionBodyTransformer.Scope.BlockScope","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.ComposableLambdaScope"]},{"name":"class ComposableSymbolRemapper : DeepCopySymbolRemapper","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableSymbolRemapper","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-symbol-remapper/index.html","searchKeys":["ComposableSymbolRemapper","class ComposableSymbolRemapper : DeepCopySymbolRemapper","androidx.compose.compiler.plugins.kotlin.lower.ComposableSymbolRemapper"]},{"name":"class ComposeCommandLineProcessor : CommandLineProcessor","description":"androidx.compose.compiler.plugins.kotlin.ComposeCommandLineProcessor","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-command-line-processor/index.html","searchKeys":["ComposeCommandLineProcessor","class ComposeCommandLineProcessor : CommandLineProcessor","androidx.compose.compiler.plugins.kotlin.ComposeCommandLineProcessor"]},{"name":"class ComposeComponentRegistrar : ComponentRegistrar","description":"androidx.compose.compiler.plugins.kotlin.ComposeComponentRegistrar","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-component-registrar/index.html","searchKeys":["ComposeComponentRegistrar","class ComposeComponentRegistrar : ComponentRegistrar","androidx.compose.compiler.plugins.kotlin.ComposeComponentRegistrar"]},{"name":"class ComposeErrorMessages : DefaultErrorMessages.Extension","description":"androidx.compose.compiler.plugins.kotlin.ComposeErrorMessages","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-error-messages/index.html","searchKeys":["ComposeErrorMessages","class ComposeErrorMessages : DefaultErrorMessages.Extension","androidx.compose.compiler.plugins.kotlin.ComposeErrorMessages"]},{"name":"class ComposeIrGenerationExtension(liveLiteralsEnabled: Boolean, liveLiteralsV2Enabled: Boolean, sourceInformationEnabled: Boolean, intrinsicRememberEnabled: Boolean, decoysEnabled: Boolean) : IrGenerationExtension","description":"androidx.compose.compiler.plugins.kotlin.ComposeIrGenerationExtension","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-ir-generation-extension/index.html","searchKeys":["ComposeIrGenerationExtension","class ComposeIrGenerationExtension(liveLiteralsEnabled: Boolean, liveLiteralsV2Enabled: Boolean, sourceInformationEnabled: Boolean, intrinsicRememberEnabled: Boolean, decoysEnabled: Boolean) : IrGenerationExtension","androidx.compose.compiler.plugins.kotlin.ComposeIrGenerationExtension"]},{"name":"class ComposerIntrinsicTransformer(context: IrPluginContext, decoysEnabled: Boolean) : IrElementTransformerVoid, FileLoweringPass, ModuleLoweringPass","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposerIntrinsicTransformer","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composer-intrinsic-transformer/index.html","searchKeys":["ComposerIntrinsicTransformer","class ComposerIntrinsicTransformer(context: IrPluginContext, decoysEnabled: Boolean) : IrElementTransformerVoid, FileLoweringPass, ModuleLoweringPass","androidx.compose.compiler.plugins.kotlin.lower.ComposerIntrinsicTransformer"]},{"name":"class ComposerLambdaMemoization(context: IrPluginContext, symbolRemapper: DeepCopySymbolRemapper, bindingTrace: BindingTrace) : AbstractComposeLowering, ModuleLoweringPass","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposerLambdaMemoization","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composer-lambda-memoization/index.html","searchKeys":["ComposerLambdaMemoization","class ComposerLambdaMemoization(context: IrPluginContext, symbolRemapper: DeepCopySymbolRemapper, bindingTrace: BindingTrace) : AbstractComposeLowering, ModuleLoweringPass","androidx.compose.compiler.plugins.kotlin.lower.ComposerLambdaMemoization"]},{"name":"class ComposerParamTransformer(context: IrPluginContext, symbolRemapper: DeepCopySymbolRemapper, bindingTrace: BindingTrace, decoysEnabled: Boolean) : AbstractComposeLowering, ModuleLoweringPass","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposerParamTransformer","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composer-param-transformer/index.html","searchKeys":["ComposerParamTransformer","class ComposerParamTransformer(context: IrPluginContext, symbolRemapper: DeepCopySymbolRemapper, bindingTrace: BindingTrace, decoysEnabled: Boolean) : AbstractComposeLowering, ModuleLoweringPass","androidx.compose.compiler.plugins.kotlin.lower.ComposerParamTransformer"]},{"name":"class ComposerTypeRemapper(context: IrPluginContext, symbolRemapper: SymbolRemapper, typeTranslator: TypeTranslator, composerType: IrType) : TypeRemapper","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposerTypeRemapper","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composer-type-remapper/index.html","searchKeys":["ComposerTypeRemapper","class ComposerTypeRemapper(context: IrPluginContext, symbolRemapper: SymbolRemapper, typeTranslator: TypeTranslator, composerType: IrType) : TypeRemapper","androidx.compose.compiler.plugins.kotlin.lower.ComposerTypeRemapper"]},{"name":"class CreateDecoysTransformer(pluginContext: IrPluginContext, symbolRemapper: DeepCopySymbolRemapper, bindingTrace: BindingTrace, signatureBuilder: IdSignatureSerializer) : AbstractComposeLowering, ModuleLoweringPass, DecoyTransformBase","description":"androidx.compose.compiler.plugins.kotlin.lower.decoys.CreateDecoysTransformer","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower.decoys/-create-decoys-transformer/index.html","searchKeys":["CreateDecoysTransformer","class CreateDecoysTransformer(pluginContext: IrPluginContext, symbolRemapper: DeepCopySymbolRemapper, bindingTrace: BindingTrace, signatureBuilder: IdSignatureSerializer) : AbstractComposeLowering, ModuleLoweringPass, DecoyTransformBase","androidx.compose.compiler.plugins.kotlin.lower.decoys.CreateDecoysTransformer"]},{"name":"class DeepCopyIrTreeWithSymbolsPreservingMetadata(context: IrPluginContext, symbolRemapper: DeepCopySymbolRemapper, typeRemapper: TypeRemapper, typeTranslator: TypeTranslator, symbolRenamer: SymbolRenamer) : DeepCopyIrTreeWithSymbols","description":"androidx.compose.compiler.plugins.kotlin.lower.DeepCopyIrTreeWithSymbolsPreservingMetadata","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-deep-copy-ir-tree-with-symbols-preserving-metadata/index.html","searchKeys":["DeepCopyIrTreeWithSymbolsPreservingMetadata","class DeepCopyIrTreeWithSymbolsPreservingMetadata(context: IrPluginContext, symbolRemapper: DeepCopySymbolRemapper, typeRemapper: TypeRemapper, typeTranslator: TypeTranslator, symbolRenamer: SymbolRenamer) : DeepCopyIrTreeWithSymbols","androidx.compose.compiler.plugins.kotlin.lower.DeepCopyIrTreeWithSymbolsPreservingMetadata"]},{"name":"class DurableKeyVisitor(keys: MutableSet<String>)","description":"androidx.compose.compiler.plugins.kotlin.lower.DurableKeyVisitor","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-durable-key-visitor/index.html","searchKeys":["DurableKeyVisitor","class DurableKeyVisitor(keys: MutableSet<String>)","androidx.compose.compiler.plugins.kotlin.lower.DurableKeyVisitor"]},{"name":"class FieldScope(name: Name) : ComposableFunctionBodyTransformer.Scope","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.FieldScope","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-field-scope/index.html","searchKeys":["FieldScope","class FieldScope(name: Name) : ComposableFunctionBodyTransformer.Scope","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.FieldScope"]},{"name":"class FileScope(declaration: IrFile) : ComposableFunctionBodyTransformer.Scope","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.FileScope","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-file-scope/index.html","searchKeys":["FileScope","class FileScope(declaration: IrFile) : ComposableFunctionBodyTransformer.Scope","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.FileScope"]},{"name":"class FunctionReferenceBuilder(irFunctionExpression: IrFunctionExpression, functionSuperClass: IrClassSymbol, superType: IrType, currentDeclarationParent: IrDeclarationParent, generatorContext: IrGeneratorContext, currentScopeOwnerSymbol: IrSymbol, irBuiltIns: IrBuiltIns)","description":"androidx.compose.compiler.plugins.kotlin.lower.FunctionReferenceBuilder","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-function-reference-builder/index.html","searchKeys":["FunctionReferenceBuilder","class FunctionReferenceBuilder(irFunctionExpression: IrFunctionExpression, functionSuperClass: IrClassSymbol, superType: IrType, currentDeclarationParent: IrDeclarationParent, generatorContext: IrGeneratorContext, currentScopeOwnerSymbol: IrSymbol, irBuiltIns: IrBuiltIns)","androidx.compose.compiler.plugins.kotlin.lower.FunctionReferenceBuilder"]},{"name":"class FunctionScope(function: IrFunction, transformer: ComposableFunctionBodyTransformer) : ComposableFunctionBodyTransformer.Scope.BlockScope","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.FunctionScope","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-function-scope/index.html","searchKeys":["FunctionScope","class FunctionScope(function: IrFunction, transformer: ComposableFunctionBodyTransformer) : ComposableFunctionBodyTransformer.Scope.BlockScope","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.FunctionScope"]},{"name":"class IncompatibleComposeRuntimeVersionException(message: String) : Exception","description":"androidx.compose.compiler.plugins.kotlin.IncompatibleComposeRuntimeVersionException","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-incompatible-compose-runtime-version-exception/index.html","searchKeys":["IncompatibleComposeRuntimeVersionException","class IncompatibleComposeRuntimeVersionException(message: String) : Exception","androidx.compose.compiler.plugins.kotlin.IncompatibleComposeRuntimeVersionException"]},{"name":"class KlibAssignableParamTransformer(context: IrPluginContext, symbolRemapper: DeepCopySymbolRemapper, bindingTrace: BindingTrace) : AbstractComposeLowering, ModuleLoweringPass","description":"androidx.compose.compiler.plugins.kotlin.lower.KlibAssignableParamTransformer","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-klib-assignable-param-transformer/index.html","searchKeys":["KlibAssignableParamTransformer","class KlibAssignableParamTransformer(context: IrPluginContext, symbolRemapper: DeepCopySymbolRemapper, bindingTrace: BindingTrace) : AbstractComposeLowering, ModuleLoweringPass","androidx.compose.compiler.plugins.kotlin.lower.KlibAssignableParamTransformer"]},{"name":"class LoopScope(loop: IrLoop) : ComposableFunctionBodyTransformer.Scope.BlockScope","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.LoopScope","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-loop-scope/index.html","searchKeys":["LoopScope","class LoopScope(loop: IrLoop) : ComposableFunctionBodyTransformer.Scope.BlockScope","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.LoopScope"]},{"name":"class Parameter(parameter: IrTypeParameter) : Stability","description":"androidx.compose.compiler.plugins.kotlin.analysis.Stability.Parameter","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.analysis/-stability/-parameter/index.html","searchKeys":["Parameter","class Parameter(parameter: IrTypeParameter) : Stability","androidx.compose.compiler.plugins.kotlin.analysis.Stability.Parameter"]},{"name":"class ParametersScope : ComposableFunctionBodyTransformer.Scope.BlockScope","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.ParametersScope","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-parameters-scope/index.html","searchKeys":["ParametersScope","class ParametersScope : ComposableFunctionBodyTransformer.Scope.BlockScope","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.ParametersScope"]},{"name":"class PathPartInfo(key: String)","description":"androidx.compose.compiler.plugins.kotlin.lower.PathPartInfo","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-path-part-info/index.html","searchKeys":["PathPartInfo","class PathPartInfo(key: String)","androidx.compose.compiler.plugins.kotlin.lower.PathPartInfo"]},{"name":"class PropertyScope(name: Name) : ComposableFunctionBodyTransformer.Scope","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.PropertyScope","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-property-scope/index.html","searchKeys":["PropertyScope","class PropertyScope(name: Name) : ComposableFunctionBodyTransformer.Scope","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.PropertyScope"]},{"name":"class RecordDecoySignaturesTransformer(pluginContext: IrPluginContext, symbolRemapper: DeepCopySymbolRemapper, bindingTrace: BindingTrace, signatureBuilder: IdSignatureSerializer) : AbstractComposeLowering, ModuleLoweringPass, DecoyTransformBase","description":"androidx.compose.compiler.plugins.kotlin.lower.decoys.RecordDecoySignaturesTransformer","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower.decoys/-record-decoy-signatures-transformer/index.html","searchKeys":["RecordDecoySignaturesTransformer","class RecordDecoySignaturesTransformer(pluginContext: IrPluginContext, symbolRemapper: DeepCopySymbolRemapper, bindingTrace: BindingTrace, signatureBuilder: IdSignatureSerializer) : AbstractComposeLowering, ModuleLoweringPass, DecoyTransformBase","androidx.compose.compiler.plugins.kotlin.lower.decoys.RecordDecoySignaturesTransformer"]},{"name":"class RootScope : ComposableFunctionBodyTransformer.Scope","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.RootScope","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-root-scope/index.html","searchKeys":["RootScope","class RootScope : ComposableFunctionBodyTransformer.Scope","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.RootScope"]},{"name":"class Runtime(declaration: IrClass) : Stability","description":"androidx.compose.compiler.plugins.kotlin.analysis.Stability.Runtime","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.analysis/-stability/-runtime/index.html","searchKeys":["Runtime","class Runtime(declaration: IrClass) : Stability","androidx.compose.compiler.plugins.kotlin.analysis.Stability.Runtime"]},{"name":"class StabilityInferencer(context: IrPluginContext)","description":"androidx.compose.compiler.plugins.kotlin.analysis.StabilityInferencer","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.analysis/-stability-inferencer/index.html","searchKeys":["StabilityInferencer","class StabilityInferencer(context: IrPluginContext)","androidx.compose.compiler.plugins.kotlin.analysis.StabilityInferencer"]},{"name":"class SubstituteDecoyCallsTransformer(pluginContext: IrPluginContext, symbolRemapper: DeepCopySymbolRemapper, bindingTrace: BindingTrace, signatureBuilder: IdSignatureSerializer) : AbstractComposeLowering, ModuleLoweringPass, DecoyTransformBase","description":"androidx.compose.compiler.plugins.kotlin.lower.decoys.SubstituteDecoyCallsTransformer","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower.decoys/-substitute-decoy-calls-transformer/index.html","searchKeys":["SubstituteDecoyCallsTransformer","class SubstituteDecoyCallsTransformer(pluginContext: IrPluginContext, symbolRemapper: DeepCopySymbolRemapper, bindingTrace: BindingTrace, signatureBuilder: IdSignatureSerializer) : AbstractComposeLowering, ModuleLoweringPass, DecoyTransformBase","androidx.compose.compiler.plugins.kotlin.lower.decoys.SubstituteDecoyCallsTransformer"]},{"name":"class Unknown(declaration: IrClass) : Stability","description":"androidx.compose.compiler.plugins.kotlin.analysis.Stability.Unknown","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.analysis/-stability/-unknown/index.html","searchKeys":["Unknown","class Unknown(declaration: IrClass) : Stability","androidx.compose.compiler.plugins.kotlin.analysis.Stability.Unknown"]},{"name":"class ValidatedAssignment(validationType: ValidationType, validationCall: ResolvedCall<*>?, uncheckedValidationCall: ResolvedCall<*>?, assignment: ResolvedCall<*>?, assignmentLambda: FunctionDescriptor?, type: KotlinType, name: String, descriptor: DeclarationDescriptor)","description":"androidx.compose.compiler.plugins.kotlin.ValidatedAssignment","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-validated-assignment/index.html","searchKeys":["ValidatedAssignment","class ValidatedAssignment(validationType: ValidationType, validationCall: ResolvedCall<*>?, uncheckedValidationCall: ResolvedCall<*>?, assignment: ResolvedCall<*>?, assignmentLambda: FunctionDescriptor?, type: KotlinType, name: String, descriptor: DeclarationDescriptor)","androidx.compose.compiler.plugins.kotlin.ValidatedAssignment"]},{"name":"class VersionChecker(context: IrPluginContext)","description":"androidx.compose.compiler.plugins.kotlin.VersionChecker","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-version-checker/index.html","searchKeys":["VersionChecker","class VersionChecker(context: IrPluginContext)","androidx.compose.compiler.plugins.kotlin.VersionChecker"]},{"name":"class WeakBindingTrace","description":"androidx.compose.compiler.plugins.kotlin.WeakBindingTrace","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-weak-binding-trace/index.html","searchKeys":["WeakBindingTrace","class WeakBindingTrace","androidx.compose.compiler.plugins.kotlin.WeakBindingTrace"]},{"name":"class WhenScope : ComposableFunctionBodyTransformer.Scope.BlockScope","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.WhenScope","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-when-scope/index.html","searchKeys":["WhenScope","class WhenScope : ComposableFunctionBodyTransformer.Scope.BlockScope","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.WhenScope"]},{"name":"const val BITS_PER_INT: Int = 31","description":"androidx.compose.compiler.plugins.kotlin.lower.BITS_PER_INT","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-b-i-t-s_-p-e-r_-i-n-t.html","searchKeys":["BITS_PER_INT","const val BITS_PER_INT: Int = 31","androidx.compose.compiler.plugins.kotlin.lower.BITS_PER_INT"]},{"name":"const val BITS_PER_SLOT: Int = 3","description":"androidx.compose.compiler.plugins.kotlin.lower.BITS_PER_SLOT","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-b-i-t-s_-p-e-r_-s-l-o-t.html","searchKeys":["BITS_PER_SLOT","const val BITS_PER_SLOT: Int = 3","androidx.compose.compiler.plugins.kotlin.lower.BITS_PER_SLOT"]},{"name":"const val COMPOSABLE_LAMBDA: String","description":"androidx.compose.compiler.plugins.kotlin.lower.COMPOSABLE_LAMBDA","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-c-o-m-p-o-s-a-b-l-e_-l-a-m-b-d-a.html","searchKeys":["COMPOSABLE_LAMBDA","const val COMPOSABLE_LAMBDA: String","androidx.compose.compiler.plugins.kotlin.lower.COMPOSABLE_LAMBDA"]},{"name":"const val COMPOSABLE_LAMBDA_INSTANCE: String","description":"androidx.compose.compiler.plugins.kotlin.lower.COMPOSABLE_LAMBDA_INSTANCE","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-c-o-m-p-o-s-a-b-l-e_-l-a-m-b-d-a_-i-n-s-t-a-n-c-e.html","searchKeys":["COMPOSABLE_LAMBDA_INSTANCE","const val COMPOSABLE_LAMBDA_INSTANCE: String","androidx.compose.compiler.plugins.kotlin.lower.COMPOSABLE_LAMBDA_INSTANCE"]},{"name":"const val COMPOSABLE_LAMBDA_N: String","description":"androidx.compose.compiler.plugins.kotlin.lower.COMPOSABLE_LAMBDA_N","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-c-o-m-p-o-s-a-b-l-e_-l-a-m-b-d-a_-n.html","searchKeys":["COMPOSABLE_LAMBDA_N","const val COMPOSABLE_LAMBDA_N: String","androidx.compose.compiler.plugins.kotlin.lower.COMPOSABLE_LAMBDA_N"]},{"name":"const val COMPOSABLE_LAMBDA_N_INSTANCE: String","description":"androidx.compose.compiler.plugins.kotlin.lower.COMPOSABLE_LAMBDA_N_INSTANCE","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-c-o-m-p-o-s-a-b-l-e_-l-a-m-b-d-a_-n_-i-n-s-t-a-n-c-e.html","searchKeys":["COMPOSABLE_LAMBDA_N_INSTANCE","const val COMPOSABLE_LAMBDA_N_INSTANCE: String","androidx.compose.compiler.plugins.kotlin.lower.COMPOSABLE_LAMBDA_N_INSTANCE"]},{"name":"const val SLOTS_PER_INT: Int = 10","description":"androidx.compose.compiler.plugins.kotlin.lower.SLOTS_PER_INT","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-s-l-o-t-s_-p-e-r_-i-n-t.html","searchKeys":["SLOTS_PER_INT","const val SLOTS_PER_INT: Int = 10","androidx.compose.compiler.plugins.kotlin.lower.SLOTS_PER_INT"]},{"name":"data class InlineLambdaInfo(argument: IrFunctionExpression, callee: IrFunction, parameter: IrValueParameter, scope: IrDeclaration)","description":"androidx.compose.compiler.plugins.kotlin.lower.InlineLambdaInfo","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-inline-lambda-info/index.html","searchKeys":["InlineLambdaInfo","data class InlineLambdaInfo(argument: IrFunctionExpression, callee: IrFunction, parameter: IrValueParameter, scope: IrDeclaration)","androidx.compose.compiler.plugins.kotlin.lower.InlineLambdaInfo"]},{"name":"data class ParamMeta(stability: Stability, isVararg: Boolean, isProvided: Boolean, isStatic: Boolean, isCertain: Boolean, maskSlot: Int, maskParam: IrChangedBitMaskValue?)","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.ParamMeta","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-param-meta/index.html","searchKeys":["ParamMeta","data class ParamMeta(stability: Stability, isVararg: Boolean, isProvided: Boolean, isStatic: Boolean, isCertain: Boolean, maskSlot: Int, maskParam: IrChangedBitMaskValue?)","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.ParamMeta"]},{"name":"enum ParamState : Enum<ParamState> ","description":"androidx.compose.compiler.plugins.kotlin.lower.ParamState","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-param-state/index.html","searchKeys":["ParamState","enum ParamState : Enum<ParamState> ","androidx.compose.compiler.plugins.kotlin.lower.ParamState"]},{"name":"enum StabilityBits : Enum<StabilityBits> ","description":"androidx.compose.compiler.plugins.kotlin.lower.StabilityBits","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-stability-bits/index.html","searchKeys":["StabilityBits","enum StabilityBits : Enum<StabilityBits> ","androidx.compose.compiler.plugins.kotlin.lower.StabilityBits"]},{"name":"enum ValidationType : Enum<ValidationType> ","description":"androidx.compose.compiler.plugins.kotlin.ValidationType","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-validation-type/index.html","searchKeys":["ValidationType","enum ValidationType : Enum<ValidationType> ","androidx.compose.compiler.plugins.kotlin.ValidationType"]},{"name":"fun <K : IrAttributeContainer, V> record(slice: WritableSlice<K, V>, key: K, value: V)","description":"androidx.compose.compiler.plugins.kotlin.WeakBindingTrace.record","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-weak-binding-trace/record.html","searchKeys":["record","fun <K : IrAttributeContainer, V> record(slice: WritableSlice<K, V>, key: K, value: V)","androidx.compose.compiler.plugins.kotlin.WeakBindingTrace.record"]},{"name":"fun <T> enter(part: String, block: () -> T): T","description":"androidx.compose.compiler.plugins.kotlin.lower.DurableKeyVisitor.enter","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-durable-key-visitor/enter.html","searchKeys":["enter","fun <T> enter(part: String, block: () -> T): T","androidx.compose.compiler.plugins.kotlin.lower.DurableKeyVisitor.enter"]},{"name":"fun <T> root(keys: MutableSet<String> = mutableSetOf(), block: () -> T): T","description":"androidx.compose.compiler.plugins.kotlin.lower.DurableKeyVisitor.root","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-durable-key-visitor/root.html","searchKeys":["root","fun <T> root(keys: MutableSet<String> = mutableSetOf(), block: () -> T): T","androidx.compose.compiler.plugins.kotlin.lower.DurableKeyVisitor.root"]},{"name":"fun <T> siblings(block: () -> T): T","description":"androidx.compose.compiler.plugins.kotlin.lower.DurableKeyVisitor.siblings","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-durable-key-visitor/siblings.html","searchKeys":["siblings","fun <T> siblings(block: () -> T): T","androidx.compose.compiler.plugins.kotlin.lower.DurableKeyVisitor.siblings"]},{"name":"fun <T> siblings(part: String, block: () -> T): T","description":"androidx.compose.compiler.plugins.kotlin.lower.DurableKeyVisitor.siblings","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-durable-key-visitor/siblings.html","searchKeys":["siblings","fun <T> siblings(part: String, block: () -> T): T","androidx.compose.compiler.plugins.kotlin.lower.DurableKeyVisitor.siblings"]},{"name":"fun AbstractComposeLowering(context: IrPluginContext, symbolRemapper: DeepCopySymbolRemapper, bindingTrace: BindingTrace)","description":"androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.AbstractComposeLowering","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-abstract-compose-lowering/-abstract-compose-lowering.html","searchKeys":["AbstractComposeLowering","fun AbstractComposeLowering(context: IrPluginContext, symbolRemapper: DeepCopySymbolRemapper, bindingTrace: BindingTrace)","androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.AbstractComposeLowering"]},{"name":"fun Annotated.hasComposableAnnotation(): Boolean","description":"androidx.compose.compiler.plugins.kotlin.hasComposableAnnotation","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/has-composable-annotation.html","searchKeys":["hasComposableAnnotation","fun Annotated.hasComposableAnnotation(): Boolean","androidx.compose.compiler.plugins.kotlin.hasComposableAnnotation"]},{"name":"fun Annotated.hasDisallowComposableCallsAnnotation(): Boolean","description":"androidx.compose.compiler.plugins.kotlin.hasDisallowComposableCallsAnnotation","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/has-disallow-composable-calls-annotation.html","searchKeys":["hasDisallowComposableCallsAnnotation","fun Annotated.hasDisallowComposableCallsAnnotation(): Boolean","androidx.compose.compiler.plugins.kotlin.hasDisallowComposableCallsAnnotation"]},{"name":"fun Annotated.hasExplicitGroupsAnnotation(): Boolean","description":"androidx.compose.compiler.plugins.kotlin.hasExplicitGroupsAnnotation","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/has-explicit-groups-annotation.html","searchKeys":["hasExplicitGroupsAnnotation","fun Annotated.hasExplicitGroupsAnnotation(): Boolean","androidx.compose.compiler.plugins.kotlin.hasExplicitGroupsAnnotation"]},{"name":"fun Annotated.hasNonRestartableComposableAnnotation(): Boolean","description":"androidx.compose.compiler.plugins.kotlin.hasNonRestartableComposableAnnotation","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/has-non-restartable-composable-annotation.html","searchKeys":["hasNonRestartableComposableAnnotation","fun Annotated.hasNonRestartableComposableAnnotation(): Boolean","androidx.compose.compiler.plugins.kotlin.hasNonRestartableComposableAnnotation"]},{"name":"fun Annotated.hasReadonlyComposableAnnotation(): Boolean","description":"androidx.compose.compiler.plugins.kotlin.hasReadonlyComposableAnnotation","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/has-readonly-composable-annotation.html","searchKeys":["hasReadonlyComposableAnnotation","fun Annotated.hasReadonlyComposableAnnotation(): Boolean","androidx.compose.compiler.plugins.kotlin.hasReadonlyComposableAnnotation"]},{"name":"fun BlockScope(name: String)","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.BlockScope.BlockScope","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-block-scope/-block-scope.html","searchKeys":["BlockScope","fun BlockScope(name: String)","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.BlockScope.BlockScope"]},{"name":"fun BranchScope()","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.BranchScope.BranchScope","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-branch-scope/-branch-scope.html","searchKeys":["BranchScope","fun BranchScope()","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.BranchScope.BranchScope"]},{"name":"fun CallableDescriptor.isComposableCallable(bindingContext: BindingContext): Boolean","description":"androidx.compose.compiler.plugins.kotlin.isComposableCallable","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/is-composable-callable.html","searchKeys":["isComposableCallable","fun CallableDescriptor.isComposableCallable(bindingContext: BindingContext): Boolean","androidx.compose.compiler.plugins.kotlin.isComposableCallable"]},{"name":"fun CaptureScope()","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.CaptureScope.CaptureScope","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-capture-scope/-capture-scope.html","searchKeys":["CaptureScope","fun CaptureScope()","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.CaptureScope.CaptureScope"]},{"name":"fun Certain(stable: Boolean)","description":"androidx.compose.compiler.plugins.kotlin.analysis.Stability.Certain.Certain","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.analysis/-stability/-certain/-certain.html","searchKeys":["Certain","fun Certain(stable: Boolean)","androidx.compose.compiler.plugins.kotlin.analysis.Stability.Certain.Certain"]},{"name":"fun ClassScope(name: Name)","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.ClassScope.ClassScope","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-class-scope/-class-scope.html","searchKeys":["ClassScope","fun ClassScope(name: Name)","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.ClassScope.ClassScope"]},{"name":"fun ClassStabilityFieldSerializationPlugin()","description":"androidx.compose.compiler.plugins.kotlin.lower.ClassStabilityFieldSerializationPlugin.ClassStabilityFieldSerializationPlugin","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-class-stability-field-serialization-plugin/-class-stability-field-serialization-plugin.html","searchKeys":["ClassStabilityFieldSerializationPlugin","fun ClassStabilityFieldSerializationPlugin()","androidx.compose.compiler.plugins.kotlin.lower.ClassStabilityFieldSerializationPlugin.ClassStabilityFieldSerializationPlugin"]},{"name":"fun ClassStabilityTransformer(context: IrPluginContext, symbolRemapper: DeepCopySymbolRemapper, bindingTrace: BindingTrace)","description":"androidx.compose.compiler.plugins.kotlin.lower.ClassStabilityTransformer.ClassStabilityTransformer","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-class-stability-transformer/-class-stability-transformer.html","searchKeys":["ClassStabilityTransformer","fun ClassStabilityTransformer(context: IrPluginContext, symbolRemapper: DeepCopySymbolRemapper, bindingTrace: BindingTrace)","androidx.compose.compiler.plugins.kotlin.lower.ClassStabilityTransformer.ClassStabilityTransformer"]},{"name":"fun Combined(elements: List<Stability>)","description":"androidx.compose.compiler.plugins.kotlin.analysis.Stability.Combined.Combined","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.analysis/-stability/-combined/-combined.html","searchKeys":["Combined","fun Combined(elements: List<Stability>)","androidx.compose.compiler.plugins.kotlin.analysis.Stability.Combined.Combined"]},{"name":"fun ComposableCallChecker()","description":"androidx.compose.compiler.plugins.kotlin.ComposableCallChecker.ComposableCallChecker","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-composable-call-checker/-composable-call-checker.html","searchKeys":["ComposableCallChecker","fun ComposableCallChecker()","androidx.compose.compiler.plugins.kotlin.ComposableCallChecker.ComposableCallChecker"]},{"name":"fun ComposableDeclarationChecker()","description":"androidx.compose.compiler.plugins.kotlin.ComposableDeclarationChecker.ComposableDeclarationChecker","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-composable-declaration-checker/-composable-declaration-checker.html","searchKeys":["ComposableDeclarationChecker","fun ComposableDeclarationChecker()","androidx.compose.compiler.plugins.kotlin.ComposableDeclarationChecker.ComposableDeclarationChecker"]},{"name":"fun ComposableFunInterfaceLowering(context: IrPluginContext)","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunInterfaceLowering.ComposableFunInterfaceLowering","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-fun-interface-lowering/-composable-fun-interface-lowering.html","searchKeys":["ComposableFunInterfaceLowering","fun ComposableFunInterfaceLowering(context: IrPluginContext)","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunInterfaceLowering.ComposableFunInterfaceLowering"]},{"name":"fun ComposableFunctionBodyTransformer(context: IrPluginContext, symbolRemapper: DeepCopySymbolRemapper, bindingTrace: BindingTrace, sourceInformationEnabled: Boolean, intrinsicRememberEnabled: Boolean)","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.ComposableFunctionBodyTransformer","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-composable-function-body-transformer.html","searchKeys":["ComposableFunctionBodyTransformer","fun ComposableFunctionBodyTransformer(context: IrPluginContext, symbolRemapper: DeepCopySymbolRemapper, bindingTrace: BindingTrace, sourceInformationEnabled: Boolean, intrinsicRememberEnabled: Boolean)","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.ComposableFunctionBodyTransformer"]},{"name":"fun ComposableLambdaScope()","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.ComposableLambdaScope.ComposableLambdaScope","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-composable-lambda-scope/-composable-lambda-scope.html","searchKeys":["ComposableLambdaScope","fun ComposableLambdaScope()","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.ComposableLambdaScope.ComposableLambdaScope"]},{"name":"fun ComposableSymbolRemapper()","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableSymbolRemapper.ComposableSymbolRemapper","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-symbol-remapper/-composable-symbol-remapper.html","searchKeys":["ComposableSymbolRemapper","fun ComposableSymbolRemapper()","androidx.compose.compiler.plugins.kotlin.lower.ComposableSymbolRemapper.ComposableSymbolRemapper"]},{"name":"fun ComposeCommandLineProcessor()","description":"androidx.compose.compiler.plugins.kotlin.ComposeCommandLineProcessor.ComposeCommandLineProcessor","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-command-line-processor/-compose-command-line-processor.html","searchKeys":["ComposeCommandLineProcessor","fun ComposeCommandLineProcessor()","androidx.compose.compiler.plugins.kotlin.ComposeCommandLineProcessor.ComposeCommandLineProcessor"]},{"name":"fun ComposeComponentRegistrar()","description":"androidx.compose.compiler.plugins.kotlin.ComposeComponentRegistrar.ComposeComponentRegistrar","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-component-registrar/-compose-component-registrar.html","searchKeys":["ComposeComponentRegistrar","fun ComposeComponentRegistrar()","androidx.compose.compiler.plugins.kotlin.ComposeComponentRegistrar.ComposeComponentRegistrar"]},{"name":"fun ComposeDiagnosticSuppressor()","description":"androidx.compose.compiler.plugins.kotlin.ComposeDiagnosticSuppressor.ComposeDiagnosticSuppressor","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-diagnostic-suppressor/-compose-diagnostic-suppressor.html","searchKeys":["ComposeDiagnosticSuppressor","fun ComposeDiagnosticSuppressor()","androidx.compose.compiler.plugins.kotlin.ComposeDiagnosticSuppressor.ComposeDiagnosticSuppressor"]},{"name":"fun ComposeErrorMessages()","description":"androidx.compose.compiler.plugins.kotlin.ComposeErrorMessages.ComposeErrorMessages","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-error-messages/-compose-error-messages.html","searchKeys":["ComposeErrorMessages","fun ComposeErrorMessages()","androidx.compose.compiler.plugins.kotlin.ComposeErrorMessages.ComposeErrorMessages"]},{"name":"fun ComposeIrGenerationExtension(liveLiteralsEnabled: Boolean = false, liveLiteralsV2Enabled: Boolean = false, sourceInformationEnabled: Boolean = true, intrinsicRememberEnabled: Boolean = true, decoysEnabled: Boolean = false)","description":"androidx.compose.compiler.plugins.kotlin.ComposeIrGenerationExtension.ComposeIrGenerationExtension","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-ir-generation-extension/-compose-ir-generation-extension.html","searchKeys":["ComposeIrGenerationExtension","fun ComposeIrGenerationExtension(liveLiteralsEnabled: Boolean = false, liveLiteralsV2Enabled: Boolean = false, sourceInformationEnabled: Boolean = true, intrinsicRememberEnabled: Boolean = true, decoysEnabled: Boolean = false)","androidx.compose.compiler.plugins.kotlin.ComposeIrGenerationExtension.ComposeIrGenerationExtension"]},{"name":"fun ComposeTypeResolutionInterceptorExtension()","description":"androidx.compose.compiler.plugins.kotlin.ComposeTypeResolutionInterceptorExtension.ComposeTypeResolutionInterceptorExtension","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-type-resolution-interceptor-extension/-compose-type-resolution-interceptor-extension.html","searchKeys":["ComposeTypeResolutionInterceptorExtension","fun ComposeTypeResolutionInterceptorExtension()","androidx.compose.compiler.plugins.kotlin.ComposeTypeResolutionInterceptorExtension.ComposeTypeResolutionInterceptorExtension"]},{"name":"fun ComposerIntrinsicTransformer(context: IrPluginContext, decoysEnabled: Boolean)","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposerIntrinsicTransformer.ComposerIntrinsicTransformer","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composer-intrinsic-transformer/-composer-intrinsic-transformer.html","searchKeys":["ComposerIntrinsicTransformer","fun ComposerIntrinsicTransformer(context: IrPluginContext, decoysEnabled: Boolean)","androidx.compose.compiler.plugins.kotlin.lower.ComposerIntrinsicTransformer.ComposerIntrinsicTransformer"]},{"name":"fun ComposerLambdaMemoization(context: IrPluginContext, symbolRemapper: DeepCopySymbolRemapper, bindingTrace: BindingTrace)","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposerLambdaMemoization.ComposerLambdaMemoization","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composer-lambda-memoization/-composer-lambda-memoization.html","searchKeys":["ComposerLambdaMemoization","fun ComposerLambdaMemoization(context: IrPluginContext, symbolRemapper: DeepCopySymbolRemapper, bindingTrace: BindingTrace)","androidx.compose.compiler.plugins.kotlin.lower.ComposerLambdaMemoization.ComposerLambdaMemoization"]},{"name":"fun ComposerParamTransformer(context: IrPluginContext, symbolRemapper: DeepCopySymbolRemapper, bindingTrace: BindingTrace, decoysEnabled: Boolean)","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposerParamTransformer.ComposerParamTransformer","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composer-param-transformer/-composer-param-transformer.html","searchKeys":["ComposerParamTransformer","fun ComposerParamTransformer(context: IrPluginContext, symbolRemapper: DeepCopySymbolRemapper, bindingTrace: BindingTrace, decoysEnabled: Boolean)","androidx.compose.compiler.plugins.kotlin.lower.ComposerParamTransformer.ComposerParamTransformer"]},{"name":"fun ComposerTypeRemapper(context: IrPluginContext, symbolRemapper: SymbolRemapper, typeTranslator: TypeTranslator, composerType: IrType)","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposerTypeRemapper.ComposerTypeRemapper","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composer-type-remapper/-composer-type-remapper.html","searchKeys":["ComposerTypeRemapper","fun ComposerTypeRemapper(context: IrPluginContext, symbolRemapper: SymbolRemapper, typeTranslator: TypeTranslator, composerType: IrType)","androidx.compose.compiler.plugins.kotlin.lower.ComposerTypeRemapper.ComposerTypeRemapper"]},{"name":"fun CreateDecoysTransformer(pluginContext: IrPluginContext, symbolRemapper: DeepCopySymbolRemapper, bindingTrace: BindingTrace, signatureBuilder: IdSignatureSerializer)","description":"androidx.compose.compiler.plugins.kotlin.lower.decoys.CreateDecoysTransformer.CreateDecoysTransformer","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower.decoys/-create-decoys-transformer/-create-decoys-transformer.html","searchKeys":["CreateDecoysTransformer","fun CreateDecoysTransformer(pluginContext: IrPluginContext, symbolRemapper: DeepCopySymbolRemapper, bindingTrace: BindingTrace, signatureBuilder: IdSignatureSerializer)","androidx.compose.compiler.plugins.kotlin.lower.decoys.CreateDecoysTransformer.CreateDecoysTransformer"]},{"name":"fun DeepCopyIrTreeWithSymbolsPreservingMetadata(context: IrPluginContext, symbolRemapper: DeepCopySymbolRemapper, typeRemapper: TypeRemapper, typeTranslator: TypeTranslator, symbolRenamer: SymbolRenamer = SymbolRenamer.DEFAULT)","description":"androidx.compose.compiler.plugins.kotlin.lower.DeepCopyIrTreeWithSymbolsPreservingMetadata.DeepCopyIrTreeWithSymbolsPreservingMetadata","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-deep-copy-ir-tree-with-symbols-preserving-metadata/-deep-copy-ir-tree-with-symbols-preserving-metadata.html","searchKeys":["DeepCopyIrTreeWithSymbolsPreservingMetadata","fun DeepCopyIrTreeWithSymbolsPreservingMetadata(context: IrPluginContext, symbolRemapper: DeepCopySymbolRemapper, typeRemapper: TypeRemapper, typeTranslator: TypeTranslator, symbolRenamer: SymbolRenamer = SymbolRenamer.DEFAULT)","androidx.compose.compiler.plugins.kotlin.lower.DeepCopyIrTreeWithSymbolsPreservingMetadata.DeepCopyIrTreeWithSymbolsPreservingMetadata"]},{"name":"fun DurableKeyVisitor(keys: MutableSet<String> = mutableSetOf())","description":"androidx.compose.compiler.plugins.kotlin.lower.DurableKeyVisitor.DurableKeyVisitor","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-durable-key-visitor/-durable-key-visitor.html","searchKeys":["DurableKeyVisitor","fun DurableKeyVisitor(keys: MutableSet<String> = mutableSetOf())","androidx.compose.compiler.plugins.kotlin.lower.DurableKeyVisitor.DurableKeyVisitor"]},{"name":"fun FieldScope(name: Name)","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.FieldScope.FieldScope","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-field-scope/-field-scope.html","searchKeys":["FieldScope","fun FieldScope(name: Name)","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.FieldScope.FieldScope"]},{"name":"fun FileScope(declaration: IrFile)","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.FileScope.FileScope","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-file-scope/-file-scope.html","searchKeys":["FileScope","fun FileScope(declaration: IrFile)","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.FileScope.FileScope"]},{"name":"fun FunctionDescriptor.allowsComposableCalls(): Boolean","description":"androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.allowsComposableCalls","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-abstract-compose-lowering/allows-composable-calls.html","searchKeys":["allowsComposableCalls","fun FunctionDescriptor.allowsComposableCalls(): Boolean","androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.allowsComposableCalls"]},{"name":"fun FunctionDescriptor.allowsComposableCalls(bindingContext: BindingContext): Boolean","description":"androidx.compose.compiler.plugins.kotlin.allowsComposableCalls","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/allows-composable-calls.html","searchKeys":["allowsComposableCalls","fun FunctionDescriptor.allowsComposableCalls(bindingContext: BindingContext): Boolean","androidx.compose.compiler.plugins.kotlin.allowsComposableCalls"]},{"name":"fun FunctionReferenceBuilder(irFunctionExpression: IrFunctionExpression, functionSuperClass: IrClassSymbol, superType: IrType, currentDeclarationParent: IrDeclarationParent, generatorContext: IrGeneratorContext, currentScopeOwnerSymbol: IrSymbol, irBuiltIns: IrBuiltIns)","description":"androidx.compose.compiler.plugins.kotlin.lower.FunctionReferenceBuilder.FunctionReferenceBuilder","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-function-reference-builder/-function-reference-builder.html","searchKeys":["FunctionReferenceBuilder","fun FunctionReferenceBuilder(irFunctionExpression: IrFunctionExpression, functionSuperClass: IrClassSymbol, superType: IrType, currentDeclarationParent: IrDeclarationParent, generatorContext: IrGeneratorContext, currentScopeOwnerSymbol: IrSymbol, irBuiltIns: IrBuiltIns)","androidx.compose.compiler.plugins.kotlin.lower.FunctionReferenceBuilder.FunctionReferenceBuilder"]},{"name":"fun FunctionScope(function: IrFunction, transformer: ComposableFunctionBodyTransformer)","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.FunctionScope.FunctionScope","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-function-scope/-function-scope.html","searchKeys":["FunctionScope","fun FunctionScope(function: IrFunction, transformer: ComposableFunctionBodyTransformer)","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.FunctionScope.FunctionScope"]},{"name":"fun IncompatibleComposeRuntimeVersionException(message: String)","description":"androidx.compose.compiler.plugins.kotlin.IncompatibleComposeRuntimeVersionException.IncompatibleComposeRuntimeVersionException","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-incompatible-compose-runtime-version-exception/-incompatible-compose-runtime-version-exception.html","searchKeys":["IncompatibleComposeRuntimeVersionException","fun IncompatibleComposeRuntimeVersionException(message: String)","androidx.compose.compiler.plugins.kotlin.IncompatibleComposeRuntimeVersionException.IncompatibleComposeRuntimeVersionException"]},{"name":"fun InlineLambdaInfo(argument: IrFunctionExpression, callee: IrFunction, parameter: IrValueParameter, scope: IrDeclaration)","description":"androidx.compose.compiler.plugins.kotlin.lower.InlineLambdaInfo.InlineLambdaInfo","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-inline-lambda-info/-inline-lambda-info.html","searchKeys":["InlineLambdaInfo","fun InlineLambdaInfo(argument: IrFunctionExpression, callee: IrFunction, parameter: IrValueParameter, scope: IrDeclaration)","androidx.compose.compiler.plugins.kotlin.lower.InlineLambdaInfo.InlineLambdaInfo"]},{"name":"fun IrAnnotationContainer.hasAnnotationSafe(fqName: FqName): Boolean","description":"androidx.compose.compiler.plugins.kotlin.lower.hasAnnotationSafe","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/has-annotation-safe.html","searchKeys":["hasAnnotationSafe","fun IrAnnotationContainer.hasAnnotationSafe(fqName: FqName): Boolean","androidx.compose.compiler.plugins.kotlin.lower.hasAnnotationSafe"]},{"name":"fun IrAnnotationContainer.hasComposableAnnotation(): Boolean","description":"androidx.compose.compiler.plugins.kotlin.hasComposableAnnotation","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/has-composable-annotation.html","searchKeys":["hasComposableAnnotation","fun IrAnnotationContainer.hasComposableAnnotation(): Boolean","androidx.compose.compiler.plugins.kotlin.hasComposableAnnotation"]},{"name":"fun IrAnnotationContainer.hasComposableAnnotation(): Boolean","description":"androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.hasComposableAnnotation","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-abstract-compose-lowering/has-composable-annotation.html","searchKeys":["hasComposableAnnotation","fun IrAnnotationContainer.hasComposableAnnotation(): Boolean","androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.hasComposableAnnotation"]},{"name":"fun IrAnnotationContainer.hasStableAnnotation(): Boolean","description":"androidx.compose.compiler.plugins.kotlin.analysis.StabilityInferencer.hasStableAnnotation","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.analysis/-stability-inferencer/has-stable-annotation.html","searchKeys":["hasStableAnnotation","fun IrAnnotationContainer.hasStableAnnotation(): Boolean","androidx.compose.compiler.plugins.kotlin.analysis.StabilityInferencer.hasStableAnnotation"]},{"name":"fun IrAnnotationContainer.hasStableAnnotation(): Boolean","description":"androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.hasStableAnnotation","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-abstract-compose-lowering/has-stable-annotation.html","searchKeys":["hasStableAnnotation","fun IrAnnotationContainer.hasStableAnnotation(): Boolean","androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.hasStableAnnotation"]},{"name":"fun IrAnnotationContainer.hasStableMarker(): Boolean","description":"androidx.compose.compiler.plugins.kotlin.analysis.StabilityInferencer.hasStableMarker","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.analysis/-stability-inferencer/has-stable-marker.html","searchKeys":["hasStableMarker","fun IrAnnotationContainer.hasStableMarker(): Boolean","androidx.compose.compiler.plugins.kotlin.analysis.StabilityInferencer.hasStableMarker"]},{"name":"fun IrAnnotationContainer.hasStableMarker(): Boolean","description":"androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.hasStableMarker","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-abstract-compose-lowering/has-stable-marker.html","searchKeys":["hasStableMarker","fun IrAnnotationContainer.hasStableMarker(): Boolean","androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.hasStableMarker"]},{"name":"fun IrAnnotationContainer.stabilityParamBitmask(): Int?","description":"androidx.compose.compiler.plugins.kotlin.analysis.StabilityInferencer.stabilityParamBitmask","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.analysis/-stability-inferencer/stability-param-bitmask.html","searchKeys":["stabilityParamBitmask","fun IrAnnotationContainer.stabilityParamBitmask(): Int?","androidx.compose.compiler.plugins.kotlin.analysis.StabilityInferencer.stabilityParamBitmask"]},{"name":"fun IrCall.isComposableSingletonGetter(): Boolean","description":"androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.isComposableSingletonGetter","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-abstract-compose-lowering/is-composable-singleton-getter.html","searchKeys":["isComposableSingletonGetter","fun IrCall.isComposableSingletonGetter(): Boolean","androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.isComposableSingletonGetter"]},{"name":"fun IrCall.isInlineParameterLambdaInvoke(): Boolean","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposerParamTransformer.isInlineParameterLambdaInvoke","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composer-param-transformer/is-inline-parameter-lambda-invoke.html","searchKeys":["isInlineParameterLambdaInvoke","fun IrCall.isInlineParameterLambdaInvoke(): Boolean","androidx.compose.compiler.plugins.kotlin.lower.ComposerParamTransformer.isInlineParameterLambdaInvoke"]},{"name":"fun IrCall.isInvoke(): Boolean","description":"androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.isInvoke","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-abstract-compose-lowering/is-invoke.html","searchKeys":["isInvoke","fun IrCall.isInvoke(): Boolean","androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.isInvoke"]},{"name":"fun IrCall.isStatic(): Boolean","description":"androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.isStatic","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-abstract-compose-lowering/is-static.html","searchKeys":["isStatic","fun IrCall.isStatic(): Boolean","androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.isStatic"]},{"name":"fun IrCall.isSyntheticComposableCall(): Boolean","description":"androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.isSyntheticComposableCall","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-abstract-compose-lowering/is-synthetic-composable-call.html","searchKeys":["isSyntheticComposableCall","fun IrCall.isSyntheticComposableCall(): Boolean","androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.isSyntheticComposableCall"]},{"name":"fun IrCall.isTransformedComposableCall(): Boolean","description":"androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.isTransformedComposableCall","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-abstract-compose-lowering/is-transformed-composable-call.html","searchKeys":["isTransformedComposableCall","fun IrCall.isTransformedComposableCall(): Boolean","androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.isTransformedComposableCall"]},{"name":"fun IrCall.withComposerParamIfNeeded(composerParam: IrValueParameter): IrCall","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposerParamTransformer.withComposerParamIfNeeded","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composer-param-transformer/with-composer-param-if-needed.html","searchKeys":["withComposerParamIfNeeded","fun IrCall.withComposerParamIfNeeded(composerParam: IrValueParameter): IrCall","androidx.compose.compiler.plugins.kotlin.lower.ComposerParamTransformer.withComposerParamIfNeeded"]},{"name":"fun IrChangedBitMaskValueImpl(params: List<IrValueDeclaration>, count: Int)","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.IrChangedBitMaskValueImpl.IrChangedBitMaskValueImpl","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-ir-changed-bit-mask-value-impl/-ir-changed-bit-mask-value-impl.html","searchKeys":["IrChangedBitMaskValueImpl","fun IrChangedBitMaskValueImpl(params: List<IrValueDeclaration>, count: Int)","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.IrChangedBitMaskValueImpl.IrChangedBitMaskValueImpl"]},{"name":"fun IrChangedBitMaskVariableImpl(temps: List<IrVariable>, count: Int)","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.IrChangedBitMaskVariableImpl.IrChangedBitMaskVariableImpl","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-ir-changed-bit-mask-variable-impl/-ir-changed-bit-mask-variable-impl.html","searchKeys":["IrChangedBitMaskVariableImpl","fun IrChangedBitMaskVariableImpl(temps: List<IrVariable>, count: Int)","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.IrChangedBitMaskVariableImpl.IrChangedBitMaskVariableImpl"]},{"name":"fun IrClass.hasStableMarkedDescendant(): Boolean","description":"androidx.compose.compiler.plugins.kotlin.analysis.StabilityInferencer.hasStableMarkedDescendant","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.analysis/-stability-inferencer/has-stable-marked-descendant.html","searchKeys":["hasStableMarkedDescendant","fun IrClass.hasStableMarkedDescendant(): Boolean","androidx.compose.compiler.plugins.kotlin.analysis.StabilityInferencer.hasStableMarkedDescendant"]},{"name":"fun IrClass.isComposableSingletonClass(): Boolean","description":"androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.isComposableSingletonClass","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-abstract-compose-lowering/is-composable-singleton-class.html","searchKeys":["isComposableSingletonClass","fun IrClass.isComposableSingletonClass(): Boolean","androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.isComposableSingletonClass"]},{"name":"fun IrConstructorCall.isStableMarker(): Boolean","description":"androidx.compose.compiler.plugins.kotlin.analysis.StabilityInferencer.isStableMarker","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.analysis/-stability-inferencer/is-stable-marker.html","searchKeys":["isStableMarker","fun IrConstructorCall.isStableMarker(): Boolean","androidx.compose.compiler.plugins.kotlin.analysis.StabilityInferencer.isStableMarker"]},{"name":"fun IrConstructorCall.isStatic(): Boolean","description":"androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.isStatic","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-abstract-compose-lowering/is-static.html","searchKeys":["isStatic","fun IrConstructorCall.isStatic(): Boolean","androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.isStatic"]},{"name":"fun IrDeclaration.isDecoy(): Boolean","description":"androidx.compose.compiler.plugins.kotlin.lower.decoys.isDecoy","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower.decoys/is-decoy.html","searchKeys":["isDecoy","fun IrDeclaration.isDecoy(): Boolean","androidx.compose.compiler.plugins.kotlin.lower.decoys.isDecoy"]},{"name":"fun IrDefaultBitMaskValueImpl(params: List<IrValueParameter>, count: Int)","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.IrDefaultBitMaskValueImpl.IrDefaultBitMaskValueImpl","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-ir-default-bit-mask-value-impl/-ir-default-bit-mask-value-impl.html","searchKeys":["IrDefaultBitMaskValueImpl","fun IrDefaultBitMaskValueImpl(params: List<IrValueParameter>, count: Int)","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.IrDefaultBitMaskValueImpl.IrDefaultBitMaskValueImpl"]},{"name":"fun IrElement.dumpSrc(): String","description":"androidx.compose.compiler.plugins.kotlin.lower.dumpSrc","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/dump-src.html","searchKeys":["dumpSrc","fun IrElement.dumpSrc(): String","androidx.compose.compiler.plugins.kotlin.lower.dumpSrc"]},{"name":"fun IrExpression.isInlineIrExpression(): Boolean","description":"androidx.compose.compiler.plugins.kotlin.lower.isInlineIrExpression","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/is-inline-ir-expression.html","searchKeys":["isInlineIrExpression","fun IrExpression.isInlineIrExpression(): Boolean","androidx.compose.compiler.plugins.kotlin.lower.isInlineIrExpression"]},{"name":"fun IrExpression.isStatic(): Boolean","description":"androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.isStatic","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-abstract-compose-lowering/is-static.html","searchKeys":["isStatic","fun IrExpression.isStatic(): Boolean","androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.isStatic"]},{"name":"fun IrFactory.buildFunction(builder: IrFunctionBuilder): IrSimpleFunction","description":"androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.buildFunction","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-live-literal-transformer/build-function.html","searchKeys":["buildFunction","fun IrFactory.buildFunction(builder: IrFunctionBuilder): IrSimpleFunction","androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.buildFunction"]},{"name":"fun IrFunction.composerParam(): IrValueParameter?","description":"androidx.compose.compiler.plugins.kotlin.lower.composerParam","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/composer-param.html","searchKeys":["composerParam","fun IrFunction.composerParam(): IrValueParameter?","androidx.compose.compiler.plugins.kotlin.lower.composerParam"]},{"name":"fun IrFunction.isInlineFunctionCall(context: IrPluginContext): Boolean","description":"androidx.compose.compiler.plugins.kotlin.lower.isInlineFunctionCall","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/is-inline-function-call.html","searchKeys":["isInlineFunctionCall","fun IrFunction.isInlineFunctionCall(context: IrPluginContext): Boolean","androidx.compose.compiler.plugins.kotlin.lower.isInlineFunctionCall"]},{"name":"fun IrFunction.isInlinedLambda(): Boolean","description":"androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.isInlinedLambda","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-abstract-compose-lowering/is-inlined-lambda.html","searchKeys":["isInlinedLambda","fun IrFunction.isInlinedLambda(): Boolean","androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.isInlinedLambda"]},{"name":"fun IrFunctionExpression.allowsComposableCalls(): Boolean","description":"androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.allowsComposableCalls","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-abstract-compose-lowering/allows-composable-calls.html","searchKeys":["allowsComposableCalls","fun IrFunctionExpression.allowsComposableCalls(): Boolean","androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.allowsComposableCalls"]},{"name":"fun IrModuleFragment.annotateComposableFunctions(pluginContext: IrPluginContext): Collection<IrAttributeContainer>","description":"androidx.compose.compiler.plugins.kotlin.lower.annotateComposableFunctions","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/annotate-composable-functions.html","searchKeys":["annotateComposableFunctions","fun IrModuleFragment.annotateComposableFunctions(pluginContext: IrPluginContext): Collection<IrAttributeContainer>","androidx.compose.compiler.plugins.kotlin.lower.annotateComposableFunctions"]},{"name":"fun IrPluginContext.function(arity: Int): IrClassSymbol","description":"androidx.compose.compiler.plugins.kotlin.lower.function","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/function.html","searchKeys":["function","fun IrPluginContext.function(arity: Int): IrClassSymbol","androidx.compose.compiler.plugins.kotlin.lower.function"]},{"name":"fun IrSimpleType.substitutionMap(): Map<IrTypeParameterSymbol, IrTypeArgument>","description":"androidx.compose.compiler.plugins.kotlin.analysis.StabilityInferencer.substitutionMap","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.analysis/-stability-inferencer/substitution-map.html","searchKeys":["substitutionMap","fun IrSimpleType.substitutionMap(): Map<IrTypeParameterSymbol, IrTypeArgument>","androidx.compose.compiler.plugins.kotlin.analysis.StabilityInferencer.substitutionMap"]},{"name":"fun IrStatementOrigin?.isInlineIrExpression(): Boolean","description":"androidx.compose.compiler.plugins.kotlin.lower.isInlineIrExpression","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/is-inline-ir-expression.html","searchKeys":["isInlineIrExpression","fun IrStatementOrigin?.isInlineIrExpression(): Boolean","androidx.compose.compiler.plugins.kotlin.lower.isInlineIrExpression"]},{"name":"fun IrType.hasComposableAnnotation(): Boolean","description":"androidx.compose.compiler.plugins.kotlin.hasComposableAnnotation","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/has-composable-annotation.html","searchKeys":["hasComposableAnnotation","fun IrType.hasComposableAnnotation(): Boolean","androidx.compose.compiler.plugins.kotlin.hasComposableAnnotation"]},{"name":"fun IrType.isNullableUnit(): Boolean","description":"androidx.compose.compiler.plugins.kotlin.lower.isNullableUnit","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/is-nullable-unit.html","searchKeys":["isNullableUnit","fun IrType.isNullableUnit(): Boolean","androidx.compose.compiler.plugins.kotlin.lower.isNullableUnit"]},{"name":"fun IrType.isUnitOrNullableUnit(): Boolean","description":"androidx.compose.compiler.plugins.kotlin.lower.isUnitOrNullableUnit","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/is-unit-or-nullable-unit.html","searchKeys":["isUnitOrNullableUnit","fun IrType.isUnitOrNullableUnit(): Boolean","androidx.compose.compiler.plugins.kotlin.lower.isUnitOrNullableUnit"]},{"name":"fun IrType.replaceArgumentsWithStarProjections(): IrType","description":"androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.replaceArgumentsWithStarProjections","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-abstract-compose-lowering/replace-arguments-with-star-projections.html","searchKeys":["replaceArgumentsWithStarProjections","fun IrType.replaceArgumentsWithStarProjections(): IrType","androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.replaceArgumentsWithStarProjections"]},{"name":"fun IrType.unboxInlineClass(): IrType","description":"androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.unboxInlineClass","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-abstract-compose-lowering/unbox-inline-class.html","searchKeys":["unboxInlineClass","fun IrType.unboxInlineClass(): IrType","androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.unboxInlineClass"]},{"name":"fun IrType.unboxType(): IrType?","description":"androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.unboxType","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-abstract-compose-lowering/unbox-type.html","searchKeys":["unboxType","fun IrType.unboxType(): IrType?","androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.unboxType"]},{"name":"fun IrValueParameter.hasDefaultValueSafe(): Boolean","description":"androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.hasDefaultValueSafe","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-abstract-compose-lowering/has-default-value-safe.html","searchKeys":["hasDefaultValueSafe","fun IrValueParameter.hasDefaultValueSafe(): Boolean","androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.hasDefaultValueSafe"]},{"name":"fun IrValueParameter.isComposerParam(): Boolean","description":"androidx.compose.compiler.plugins.kotlin.lower.isComposerParam","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/is-composer-param.html","searchKeys":["isComposerParam","fun IrValueParameter.isComposerParam(): Boolean","androidx.compose.compiler.plugins.kotlin.lower.isComposerParam"]},{"name":"fun KlibAssignableParamTransformer(context: IrPluginContext, symbolRemapper: DeepCopySymbolRemapper, bindingTrace: BindingTrace)","description":"androidx.compose.compiler.plugins.kotlin.lower.KlibAssignableParamTransformer.KlibAssignableParamTransformer","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-klib-assignable-param-transformer/-klib-assignable-param-transformer.html","searchKeys":["KlibAssignableParamTransformer","fun KlibAssignableParamTransformer(context: IrPluginContext, symbolRemapper: DeepCopySymbolRemapper, bindingTrace: BindingTrace)","androidx.compose.compiler.plugins.kotlin.lower.KlibAssignableParamTransformer.KlibAssignableParamTransformer"]},{"name":"fun KotlinType.hasComposableAnnotation(): Boolean","description":"androidx.compose.compiler.plugins.kotlin.hasComposableAnnotation","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/has-composable-annotation.html","searchKeys":["hasComposableAnnotation","fun KotlinType.hasComposableAnnotation(): Boolean","androidx.compose.compiler.plugins.kotlin.hasComposableAnnotation"]},{"name":"fun KotlinType.isFinal(): Boolean","description":"androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.isFinal","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-abstract-compose-lowering/is-final.html","searchKeys":["isFinal","fun KotlinType.isFinal(): Boolean","androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.isFinal"]},{"name":"fun KotlinType.makeComposable(module: ModuleDescriptor): KotlinType","description":"androidx.compose.compiler.plugins.kotlin.makeComposable","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/make-composable.html","searchKeys":["makeComposable","fun KotlinType.makeComposable(module: ModuleDescriptor): KotlinType","androidx.compose.compiler.plugins.kotlin.makeComposable"]},{"name":"fun KotlinType.toIrType(): IrType","description":"androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.toIrType","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-abstract-compose-lowering/to-ir-type.html","searchKeys":["toIrType","fun KotlinType.toIrType(): IrType","androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.toIrType"]},{"name":"fun List<IrConstructorCall>.hasAnnotation(fqName: FqName): Boolean","description":"androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.hasAnnotation","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-abstract-compose-lowering/has-annotation.html","searchKeys":["hasAnnotation","fun List<IrConstructorCall>.hasAnnotation(fqName: FqName): Boolean","androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.hasAnnotation"]},{"name":"fun List<KtAnnotationEntry>.hasComposableAnnotation(bindingContext: BindingContext): Boolean","description":"androidx.compose.compiler.plugins.kotlin.hasComposableAnnotation","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/has-composable-annotation.html","searchKeys":["hasComposableAnnotation","fun List<KtAnnotationEntry>.hasComposableAnnotation(bindingContext: BindingContext): Boolean","androidx.compose.compiler.plugins.kotlin.hasComposableAnnotation"]},{"name":"fun LiveLiteralTransformer(liveLiteralsEnabled: Boolean, usePerFileEnabledFlag: Boolean, keyVisitor: DurableKeyVisitor, context: IrPluginContext, symbolRemapper: DeepCopySymbolRemapper, bindingTrace: BindingTrace)","description":"androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.LiveLiteralTransformer","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-live-literal-transformer/-live-literal-transformer.html","searchKeys":["LiveLiteralTransformer","fun LiveLiteralTransformer(liveLiteralsEnabled: Boolean, usePerFileEnabledFlag: Boolean, keyVisitor: DurableKeyVisitor, context: IrPluginContext, symbolRemapper: DeepCopySymbolRemapper, bindingTrace: BindingTrace)","androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.LiveLiteralTransformer"]},{"name":"fun LoopScope(loop: IrLoop)","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.LoopScope.LoopScope","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-loop-scope/-loop-scope.html","searchKeys":["LoopScope","fun LoopScope(loop: IrLoop)","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.LoopScope.LoopScope"]},{"name":"fun ParamMeta(stability: Stability = Stability.Unstable, isVararg: Boolean = false, isProvided: Boolean = false, isStatic: Boolean = false, isCertain: Boolean = false, maskSlot: Int = -1, maskParam: IrChangedBitMaskValue? = null)","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.ParamMeta.ParamMeta","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-param-meta/-param-meta.html","searchKeys":["ParamMeta","fun ParamMeta(stability: Stability = Stability.Unstable, isVararg: Boolean = false, isProvided: Boolean = false, isStatic: Boolean = false, isCertain: Boolean = false, maskSlot: Int = -1, maskParam: IrChangedBitMaskValue? = null)","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.ParamMeta.ParamMeta"]},{"name":"fun Parameter(parameter: IrTypeParameter)","description":"androidx.compose.compiler.plugins.kotlin.analysis.Stability.Parameter.Parameter","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.analysis/-stability/-parameter/-parameter.html","searchKeys":["Parameter","fun Parameter(parameter: IrTypeParameter)","androidx.compose.compiler.plugins.kotlin.analysis.Stability.Parameter.Parameter"]},{"name":"fun ParametersScope()","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.ParametersScope.ParametersScope","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-parameters-scope/-parameters-scope.html","searchKeys":["ParametersScope","fun ParametersScope()","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.ParametersScope.ParametersScope"]},{"name":"fun PathPartInfo(key: String)","description":"androidx.compose.compiler.plugins.kotlin.lower.PathPartInfo.PathPartInfo","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-path-part-info/-path-part-info.html","searchKeys":["PathPartInfo","fun PathPartInfo(key: String)","androidx.compose.compiler.plugins.kotlin.lower.PathPartInfo.PathPartInfo"]},{"name":"fun PropertyScope(name: Name)","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.PropertyScope.PropertyScope","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-property-scope/-property-scope.html","searchKeys":["PropertyScope","fun PropertyScope(name: Name)","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.PropertyScope.PropertyScope"]},{"name":"fun RecordDecoySignaturesTransformer(pluginContext: IrPluginContext, symbolRemapper: DeepCopySymbolRemapper, bindingTrace: BindingTrace, signatureBuilder: IdSignatureSerializer)","description":"androidx.compose.compiler.plugins.kotlin.lower.decoys.RecordDecoySignaturesTransformer.RecordDecoySignaturesTransformer","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower.decoys/-record-decoy-signatures-transformer/-record-decoy-signatures-transformer.html","searchKeys":["RecordDecoySignaturesTransformer","fun RecordDecoySignaturesTransformer(pluginContext: IrPluginContext, symbolRemapper: DeepCopySymbolRemapper, bindingTrace: BindingTrace, signatureBuilder: IdSignatureSerializer)","androidx.compose.compiler.plugins.kotlin.lower.decoys.RecordDecoySignaturesTransformer.RecordDecoySignaturesTransformer"]},{"name":"fun ResolvedCall<*>.isComposableInvocation(): Boolean","description":"androidx.compose.compiler.plugins.kotlin.isComposableInvocation","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/is-composable-invocation.html","searchKeys":["isComposableInvocation","fun ResolvedCall<*>.isComposableInvocation(): Boolean","androidx.compose.compiler.plugins.kotlin.isComposableInvocation"]},{"name":"fun ResolvedCall<*>.isReadOnlyComposableInvocation(): Boolean","description":"androidx.compose.compiler.plugins.kotlin.isReadOnlyComposableInvocation","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/is-read-only-composable-invocation.html","searchKeys":["isReadOnlyComposableInvocation","fun ResolvedCall<*>.isReadOnlyComposableInvocation(): Boolean","androidx.compose.compiler.plugins.kotlin.isReadOnlyComposableInvocation"]},{"name":"fun RootScope()","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.RootScope.RootScope","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-root-scope/-root-scope.html","searchKeys":["RootScope","fun RootScope()","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.RootScope.RootScope"]},{"name":"fun Runtime(declaration: IrClass)","description":"androidx.compose.compiler.plugins.kotlin.analysis.Stability.Runtime.Runtime","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.analysis/-stability/-runtime/-runtime.html","searchKeys":["Runtime","fun Runtime(declaration: IrClass)","androidx.compose.compiler.plugins.kotlin.analysis.Stability.Runtime.Runtime"]},{"name":"fun SourceLocation(element: IrElement)","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.SourceLocation.SourceLocation","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-source-location/-source-location.html","searchKeys":["SourceLocation","fun SourceLocation(element: IrElement)","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.SourceLocation.SourceLocation"]},{"name":"fun Stability.forEach(callback: (Stability) -> Unit)","description":"androidx.compose.compiler.plugins.kotlin.analysis.forEach","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.analysis/for-each.html","searchKeys":["forEach","fun Stability.forEach(callback: (Stability) -> Unit)","androidx.compose.compiler.plugins.kotlin.analysis.forEach"]},{"name":"fun Stability.irStableExpression(resolve: (IrTypeParameter) -> IrExpression? = { null }): IrExpression?","description":"androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.irStableExpression","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-abstract-compose-lowering/ir-stable-expression.html","searchKeys":["irStableExpression","fun Stability.irStableExpression(resolve: (IrTypeParameter) -> IrExpression? = { null }): IrExpression?","androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.irStableExpression"]},{"name":"fun Stability.isExpressible(): Boolean","description":"androidx.compose.compiler.plugins.kotlin.analysis.isExpressible","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.analysis/is-expressible.html","searchKeys":["isExpressible","fun Stability.isExpressible(): Boolean","androidx.compose.compiler.plugins.kotlin.analysis.isExpressible"]},{"name":"fun Stability.isUncertain(): Boolean","description":"androidx.compose.compiler.plugins.kotlin.analysis.isUncertain","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.analysis/is-uncertain.html","searchKeys":["isUncertain","fun Stability.isUncertain(): Boolean","androidx.compose.compiler.plugins.kotlin.analysis.isUncertain"]},{"name":"fun Stability.knownStable(): Boolean","description":"androidx.compose.compiler.plugins.kotlin.analysis.knownStable","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.analysis/known-stable.html","searchKeys":["knownStable","fun Stability.knownStable(): Boolean","androidx.compose.compiler.plugins.kotlin.analysis.knownStable"]},{"name":"fun Stability.knownUnstable(): Boolean","description":"androidx.compose.compiler.plugins.kotlin.analysis.knownUnstable","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.analysis/known-unstable.html","searchKeys":["knownUnstable","fun Stability.knownUnstable(): Boolean","androidx.compose.compiler.plugins.kotlin.analysis.knownUnstable"]},{"name":"fun Stability.normalize(): Stability","description":"androidx.compose.compiler.plugins.kotlin.analysis.normalize","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.analysis/normalize.html","searchKeys":["normalize","fun Stability.normalize(): Stability","androidx.compose.compiler.plugins.kotlin.analysis.normalize"]},{"name":"fun StabilityInferencer(context: IrPluginContext)","description":"androidx.compose.compiler.plugins.kotlin.analysis.StabilityInferencer.StabilityInferencer","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.analysis/-stability-inferencer/-stability-inferencer.html","searchKeys":["StabilityInferencer","fun StabilityInferencer(context: IrPluginContext)","androidx.compose.compiler.plugins.kotlin.analysis.StabilityInferencer.StabilityInferencer"]},{"name":"fun SubstituteDecoyCallsTransformer(pluginContext: IrPluginContext, symbolRemapper: DeepCopySymbolRemapper, bindingTrace: BindingTrace, signatureBuilder: IdSignatureSerializer)","description":"androidx.compose.compiler.plugins.kotlin.lower.decoys.SubstituteDecoyCallsTransformer.SubstituteDecoyCallsTransformer","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower.decoys/-substitute-decoy-calls-transformer/-substitute-decoy-calls-transformer.html","searchKeys":["SubstituteDecoyCallsTransformer","fun SubstituteDecoyCallsTransformer(pluginContext: IrPluginContext, symbolRemapper: DeepCopySymbolRemapper, bindingTrace: BindingTrace, signatureBuilder: IdSignatureSerializer)","androidx.compose.compiler.plugins.kotlin.lower.decoys.SubstituteDecoyCallsTransformer.SubstituteDecoyCallsTransformer"]},{"name":"fun Unknown(declaration: IrClass)","description":"androidx.compose.compiler.plugins.kotlin.analysis.Stability.Unknown.Unknown","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.analysis/-stability/-unknown/-unknown.html","searchKeys":["Unknown","fun Unknown(declaration: IrClass)","androidx.compose.compiler.plugins.kotlin.analysis.Stability.Unknown.Unknown"]},{"name":"fun ValidatedAssignment(validationType: ValidationType, validationCall: ResolvedCall<*>?, uncheckedValidationCall: ResolvedCall<*>?, assignment: ResolvedCall<*>?, assignmentLambda: FunctionDescriptor?, type: KotlinType, name: String, descriptor: DeclarationDescriptor)","description":"androidx.compose.compiler.plugins.kotlin.ValidatedAssignment.ValidatedAssignment","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-validated-assignment/-validated-assignment.html","searchKeys":["ValidatedAssignment","fun ValidatedAssignment(validationType: ValidationType, validationCall: ResolvedCall<*>?, uncheckedValidationCall: ResolvedCall<*>?, assignment: ResolvedCall<*>?, assignmentLambda: FunctionDescriptor?, type: KotlinType, name: String, descriptor: DeclarationDescriptor)","androidx.compose.compiler.plugins.kotlin.ValidatedAssignment.ValidatedAssignment"]},{"name":"fun ValueParameterDescriptor.isComposerParam(): Boolean","description":"androidx.compose.compiler.plugins.kotlin.lower.isComposerParam","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/is-composer-param.html","searchKeys":["isComposerParam","fun ValueParameterDescriptor.isComposerParam(): Boolean","androidx.compose.compiler.plugins.kotlin.lower.isComposerParam"]},{"name":"fun VersionChecker(context: IrPluginContext)","description":"androidx.compose.compiler.plugins.kotlin.VersionChecker.VersionChecker","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-version-checker/-version-checker.html","searchKeys":["VersionChecker","fun VersionChecker(context: IrPluginContext)","androidx.compose.compiler.plugins.kotlin.VersionChecker.VersionChecker"]},{"name":"fun WeakBindingTrace()","description":"androidx.compose.compiler.plugins.kotlin.WeakBindingTrace.WeakBindingTrace","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-weak-binding-trace/-weak-binding-trace.html","searchKeys":["WeakBindingTrace","fun WeakBindingTrace()","androidx.compose.compiler.plugins.kotlin.WeakBindingTrace.WeakBindingTrace"]},{"name":"fun WhenScope()","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.WhenScope.WhenScope","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-when-scope/-when-scope.html","searchKeys":["WhenScope","fun WhenScope()","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.WhenScope.WhenScope"]},{"name":"fun addProvisionalSourceLocations(locations: List<ComposableFunctionBodyTransformer.Scope.SourceLocation>)","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.BlockScope.addProvisionalSourceLocations","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-block-scope/add-provisional-source-locations.html","searchKeys":["addProvisionalSourceLocations","fun addProvisionalSourceLocations(locations: List<ComposableFunctionBodyTransformer.Scope.SourceLocation>)","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.BlockScope.addProvisionalSourceLocations"]},{"name":"fun bitsForSlot(bits: Int, slot: Int): Int","description":"androidx.compose.compiler.plugins.kotlin.lower.bitsForSlot","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/bits-for-slot.html","searchKeys":["bitsForSlot","fun bitsForSlot(bits: Int, slot: Int): Int","androidx.compose.compiler.plugins.kotlin.lower.bitsForSlot"]},{"name":"fun bitsForSlot(slot: Int): Int","description":"androidx.compose.compiler.plugins.kotlin.lower.ParamState.bitsForSlot","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-param-state/bits-for-slot.html","searchKeys":["bitsForSlot","fun bitsForSlot(slot: Int): Int","androidx.compose.compiler.plugins.kotlin.lower.ParamState.bitsForSlot"]},{"name":"fun bitsForSlot(slot: Int): Int","description":"androidx.compose.compiler.plugins.kotlin.lower.StabilityBits.bitsForSlot","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-stability-bits/bits-for-slot.html","searchKeys":["bitsForSlot","fun bitsForSlot(slot: Int): Int","androidx.compose.compiler.plugins.kotlin.lower.StabilityBits.bitsForSlot"]},{"name":"fun build(): IrExpression","description":"androidx.compose.compiler.plugins.kotlin.lower.FunctionReferenceBuilder.build","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-function-reference-builder/build.html","searchKeys":["build","fun build(): IrExpression","androidx.compose.compiler.plugins.kotlin.lower.FunctionReferenceBuilder.build"]},{"name":"fun buildPath(prefix: String, pathSeparator: String = \"/\", siblingSeparator: String = \":\"): Pair<String, Boolean>","description":"androidx.compose.compiler.plugins.kotlin.lower.DurableKeyVisitor.buildPath","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-durable-key-visitor/build-path.html","searchKeys":["buildPath","fun buildPath(prefix: String, pathSeparator: String = \"/\", siblingSeparator: String = \":\"): Pair<String, Boolean>","androidx.compose.compiler.plugins.kotlin.lower.DurableKeyVisitor.buildPath"]},{"name":"fun changedParamCount(realValueParams: Int, thisParams: Int): Int","description":"androidx.compose.compiler.plugins.kotlin.lower.changedParamCount","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/changed-param-count.html","searchKeys":["changedParamCount","fun changedParamCount(realValueParams: Int, thisParams: Int): Int","androidx.compose.compiler.plugins.kotlin.lower.changedParamCount"]},{"name":"fun changedParamCountFromTotal(totalParamsIncludingThisParams: Int): Int","description":"androidx.compose.compiler.plugins.kotlin.lower.changedParamCountFromTotal","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/changed-param-count-from-total.html","searchKeys":["changedParamCountFromTotal","fun changedParamCountFromTotal(totalParamsIncludingThisParams: Int): Int","androidx.compose.compiler.plugins.kotlin.lower.changedParamCountFromTotal"]},{"name":"fun check()","description":"androidx.compose.compiler.plugins.kotlin.VersionChecker.check","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-version-checker/check.html","searchKeys":["check","fun check()","androidx.compose.compiler.plugins.kotlin.VersionChecker.check"]},{"name":"fun checkInlineLambdaCall(resolvedCall: ResolvedCall<*>, reportOn: PsiElement, context: CallCheckerContext)","description":"androidx.compose.compiler.plugins.kotlin.ComposableCallChecker.checkInlineLambdaCall","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-composable-call-checker/check-inline-lambda-call.html","searchKeys":["checkInlineLambdaCall","fun checkInlineLambdaCall(resolvedCall: ResolvedCall<*>, reportOn: PsiElement, context: CallCheckerContext)","androidx.compose.compiler.plugins.kotlin.ComposableCallChecker.checkInlineLambdaCall"]},{"name":"fun composeSyntheticParamCount(realValueParams: Int, thisParams: Int = 0, hasDefaults: Boolean = false): Int","description":"androidx.compose.compiler.plugins.kotlin.lower.composeSyntheticParamCount","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/compose-synthetic-param-count.html","searchKeys":["composeSyntheticParamCount","fun composeSyntheticParamCount(realValueParams: Int, thisParams: Int = 0, hasDefaults: Boolean = false): Int","androidx.compose.compiler.plugins.kotlin.lower.composeSyntheticParamCount"]},{"name":"fun defaultIndexForSlotIndex(index: Int): Int","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.FunctionScope.defaultIndexForSlotIndex","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-function-scope/default-index-for-slot-index.html","searchKeys":["defaultIndexForSlotIndex","fun defaultIndexForSlotIndex(index: Int): Int","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.FunctionScope.defaultIndexForSlotIndex"]},{"name":"fun defaultParamCount(realValueParams: Int): Int","description":"androidx.compose.compiler.plugins.kotlin.lower.defaultParamCount","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/default-param-count.html","searchKeys":["defaultParamCount","fun defaultParamCount(realValueParams: Int): Int","androidx.compose.compiler.plugins.kotlin.lower.defaultParamCount"]},{"name":"fun defaultParameterType(param: IrValueParameter): IrType","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposerParamTransformer.defaultParameterType","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composer-param-transformer/default-parameter-type.html","searchKeys":["defaultParameterType","fun defaultParameterType(param: IrValueParameter): IrType","androidx.compose.compiler.plugins.kotlin.lower.ComposerParamTransformer.defaultParameterType"]},{"name":"fun defaultsBitIndex(index: Int): Int","description":"androidx.compose.compiler.plugins.kotlin.lower.defaultsBitIndex","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/defaults-bit-index.html","searchKeys":["defaultsBitIndex","fun defaultsBitIndex(index: Int): Int","androidx.compose.compiler.plugins.kotlin.lower.defaultsBitIndex"]},{"name":"fun defaultsParamIndex(index: Int): Int","description":"androidx.compose.compiler.plugins.kotlin.lower.defaultsParamIndex","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/defaults-param-index.html","searchKeys":["defaultsParamIndex","fun defaultsParamIndex(index: Int): Int","androidx.compose.compiler.plugins.kotlin.lower.defaultsParamIndex"]},{"name":"fun fqNameFor(cname: String): FqName","description":"androidx.compose.compiler.plugins.kotlin.ComposeFqNames.fqNameFor","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-fq-names/fq-name-for.html","searchKeys":["fqNameFor","fun fqNameFor(cname: String): FqName","androidx.compose.compiler.plugins.kotlin.ComposeFqNames.fqNameFor"]},{"name":"fun getInternalClass(name: String): IrClassSymbol","description":"androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.getInternalClass","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-abstract-compose-lowering/get-internal-class.html","searchKeys":["getInternalClass","fun getInternalClass(name: String): IrClassSymbol","androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.getInternalClass"]},{"name":"fun getInternalFunction(name: String): IrFunctionSymbol","description":"androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.getInternalFunction","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-abstract-compose-lowering/get-internal-function.html","searchKeys":["getInternalFunction","fun getInternalFunction(name: String): IrFunctionSymbol","androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.getInternalFunction"]},{"name":"fun getInternalProperty(name: String): IrFunctionSymbol","description":"androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.getInternalProperty","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-abstract-compose-lowering/get-internal-property.html","searchKeys":["getInternalProperty","fun getInternalProperty(name: String): IrFunctionSymbol","androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.getInternalProperty"]},{"name":"fun getNameForTemporary(nameHint: String?): String","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.FunctionScope.getNameForTemporary","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-function-scope/get-name-for-temporary.html","searchKeys":["getNameForTemporary","fun getNameForTemporary(nameHint: String?): String","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.FunctionScope.getNameForTemporary"]},{"name":"fun getTopLevelClass(fqName: FqName): IrClassSymbol","description":"androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.getTopLevelClass","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-abstract-compose-lowering/get-top-level-class.html","searchKeys":["getTopLevelClass","fun getTopLevelClass(fqName: FqName): IrClassSymbol","androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.getTopLevelClass"]},{"name":"fun getTopLevelFunction(fqName: FqName): IrFunctionSymbol","description":"androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.getTopLevelFunction","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-abstract-compose-lowering/get-top-level-function.html","searchKeys":["getTopLevelFunction","fun getTopLevelFunction(fqName: FqName): IrFunctionSymbol","androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.getTopLevelFunction"]},{"name":"fun getTopLevelFunctions(fqName: FqName): List<IrSimpleFunctionSymbol>","description":"androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.getTopLevelFunctions","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-abstract-compose-lowering/get-top-level-functions.html","searchKeys":["getTopLevelFunctions","fun getTopLevelFunctions(fqName: FqName): List<IrSimpleFunctionSymbol>","androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.getTopLevelFunctions"]},{"name":"fun getTopLevelPropertyGetter(fqName: FqName): IrFunctionSymbol","description":"androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.getTopLevelPropertyGetter","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-abstract-compose-lowering/get-top-level-property-getter.html","searchKeys":["getTopLevelPropertyGetter","fun getTopLevelPropertyGetter(fqName: FqName): IrFunctionSymbol","androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.getTopLevelPropertyGetter"]},{"name":"fun internalFqNameFor(cname: String): FqName","description":"androidx.compose.compiler.plugins.kotlin.ComposeFqNames.internalFqNameFor","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-fq-names/internal-fq-name-for.html","searchKeys":["internalFqNameFor","fun internalFqNameFor(cname: String): FqName","androidx.compose.compiler.plugins.kotlin.ComposeFqNames.internalFqNameFor"]},{"name":"fun irTypeParameterStability(param: IrTypeParameter): IrExpression?","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.irTypeParameterStability","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/ir-type-parameter-stability.html","searchKeys":["irTypeParameterStability","fun irTypeParameterStability(param: IrTypeParameter): IrExpression?","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.irTypeParameterStability"]},{"name":"fun makeComposableAnnotation(module: ModuleDescriptor): AnnotationDescriptor","description":"androidx.compose.compiler.plugins.kotlin.ComposeFqNames.makeComposableAnnotation","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-fq-names/make-composable-annotation.html","searchKeys":["makeComposableAnnotation","fun makeComposableAnnotation(module: ModuleDescriptor): AnnotationDescriptor","androidx.compose.compiler.plugins.kotlin.ComposeFqNames.makeComposableAnnotation"]},{"name":"fun makeStabilityField(): IrField","description":"androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.makeStabilityField","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-abstract-compose-lowering/make-stability-field.html","searchKeys":["makeStabilityField","fun makeStabilityField(): IrField","androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.makeStabilityField"]},{"name":"fun markCapturedComposableCall()","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.CaptureScope.markCapturedComposableCall","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-capture-scope/mark-captured-composable-call.html","searchKeys":["markCapturedComposableCall","fun markCapturedComposableCall()","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.CaptureScope.markCapturedComposableCall"]},{"name":"fun markCoalescableGroup(scope: ComposableFunctionBodyTransformer.Scope.BlockScope, realizeGroup: () -> Unit, makeEnd: () -> IrExpression)","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.BlockScope.markCoalescableGroup","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-block-scope/mark-coalescable-group.html","searchKeys":["markCoalescableGroup","fun markCoalescableGroup(scope: ComposableFunctionBodyTransformer.Scope.BlockScope, realizeGroup: () -> Unit, makeEnd: () -> IrExpression)","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.BlockScope.markCoalescableGroup"]},{"name":"fun markJump(extraEndLocation: (IrExpression) -> Unit)","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.BlockScope.markJump","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-block-scope/mark-jump.html","searchKeys":["markJump","fun markJump(extraEndLocation: (IrExpression) -> Unit)","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.BlockScope.markJump"]},{"name":"fun markJump(jump: IrBreakContinue, extraEndLocation: (IrExpression) -> Unit)","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.LoopScope.markJump","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-loop-scope/mark-jump.html","searchKeys":["markJump","fun markJump(jump: IrBreakContinue, extraEndLocation: (IrExpression) -> Unit)","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.LoopScope.markJump"]},{"name":"fun markReturn(extraEndLocation: (IrExpression) -> Unit)","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.BlockScope.markReturn","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-block-scope/mark-return.html","searchKeys":["markReturn","fun markReturn(extraEndLocation: (IrExpression) -> Unit)","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.BlockScope.markReturn"]},{"name":"fun markUsed()","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.SourceLocation.markUsed","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-source-location/mark-used.html","searchKeys":["markUsed","fun markUsed()","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.SourceLocation.markUsed"]},{"name":"fun paramMetaOf(arg: IrExpression, isProvided: Boolean): ComposableFunctionBodyTransformer.ParamMeta","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.paramMetaOf","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/param-meta-of.html","searchKeys":["paramMetaOf","fun paramMetaOf(arg: IrExpression, isProvided: Boolean): ComposableFunctionBodyTransformer.ParamMeta","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.paramMetaOf"]},{"name":"fun print(builder: StringBuilder, pathSeparator: String = \"/\", siblingSeparator: String = \":\")","description":"androidx.compose.compiler.plugins.kotlin.lower.PathPartInfo.print","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-path-part-info/print.html","searchKeys":["print","fun print(builder: StringBuilder, pathSeparator: String = \"/\", siblingSeparator: String = \":\")","androidx.compose.compiler.plugins.kotlin.lower.PathPartInfo.print"]},{"name":"fun realizeCoalescableGroup()","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.BlockScope.realizeCoalescableGroup","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-block-scope/realize-coalescable-group.html","searchKeys":["realizeCoalescableGroup","fun realizeCoalescableGroup()","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.BlockScope.realizeCoalescableGroup"]},{"name":"fun realizeGroup(makeEnd: () -> IrExpression?)","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.BlockScope.realizeGroup","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-block-scope/realize-group.html","searchKeys":["realizeGroup","fun realizeGroup(makeEnd: () -> IrExpression?)","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.BlockScope.realizeGroup"]},{"name":"fun recordComposableCall(withGroups: Boolean)","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.BlockScope.recordComposableCall","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-block-scope/record-composable-call.html","searchKeys":["recordComposableCall","fun recordComposableCall(withGroups: Boolean)","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.BlockScope.recordComposableCall"]},{"name":"fun recordSourceLocation(call: IrElement, location: ComposableFunctionBodyTransformer.Scope.SourceLocation?): ComposableFunctionBodyTransformer.Scope.SourceLocation?","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.BlockScope.recordSourceLocation","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-block-scope/record-source-location.html","searchKeys":["recordSourceLocation","fun recordSourceLocation(call: IrElement, location: ComposableFunctionBodyTransformer.Scope.SourceLocation?): ComposableFunctionBodyTransformer.Scope.SourceLocation?","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.BlockScope.recordSourceLocation"]},{"name":"fun referenceConstructor(symbol: IrConstructorSymbol): IrConstructorSymbol","description":"androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.referenceConstructor","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-abstract-compose-lowering/reference-constructor.html","searchKeys":["referenceConstructor","fun referenceConstructor(symbol: IrConstructorSymbol): IrConstructorSymbol","androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.referenceConstructor"]},{"name":"fun referenceFunction(symbol: IrFunctionSymbol): IrFunctionSymbol","description":"androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.referenceFunction","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-abstract-compose-lowering/reference-function.html","searchKeys":["referenceFunction","fun referenceFunction(symbol: IrFunctionSymbol): IrFunctionSymbol","androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.referenceFunction"]},{"name":"fun referenceSimpleFunction(symbol: IrSimpleFunctionSymbol): IrSimpleFunctionSymbol","description":"androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.referenceSimpleFunction","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-abstract-compose-lowering/reference-simple-function.html","searchKeys":["referenceSimpleFunction","fun referenceSimpleFunction(symbol: IrSimpleFunctionSymbol): IrSimpleFunctionSymbol","androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.referenceSimpleFunction"]},{"name":"fun registerExtension(project: Project, extension: DiagnosticSuppressor)","description":"androidx.compose.compiler.plugins.kotlin.ComposeDiagnosticSuppressor.Companion.registerExtension","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-diagnostic-suppressor/-companion/register-extension.html","searchKeys":["registerExtension","fun registerExtension(project: Project, extension: DiagnosticSuppressor)","androidx.compose.compiler.plugins.kotlin.ComposeDiagnosticSuppressor.Companion.registerExtension"]},{"name":"fun registerProjectExtensions(project: Project, configuration: CompilerConfiguration)","description":"androidx.compose.compiler.plugins.kotlin.ComposeComponentRegistrar.Companion.registerProjectExtensions","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-component-registrar/-companion/register-project-extensions.html","searchKeys":["registerProjectExtensions","fun registerProjectExtensions(project: Project, configuration: CompilerConfiguration)","androidx.compose.compiler.plugins.kotlin.ComposeComponentRegistrar.Companion.registerProjectExtensions"]},{"name":"fun stabilityOf(argument: IrTypeArgument, substitutions: Map<IrTypeParameterSymbol, IrTypeArgument> = emptyMap(), currentlyAnalyzing: Set<IrClassifierSymbol> = emptySet()): Stability","description":"androidx.compose.compiler.plugins.kotlin.analysis.StabilityInferencer.stabilityOf","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.analysis/-stability-inferencer/stability-of.html","searchKeys":["stabilityOf","fun stabilityOf(argument: IrTypeArgument, substitutions: Map<IrTypeParameterSymbol, IrTypeArgument> = emptyMap(), currentlyAnalyzing: Set<IrClassifierSymbol> = emptySet()): Stability","androidx.compose.compiler.plugins.kotlin.analysis.StabilityInferencer.stabilityOf"]},{"name":"fun stabilityOf(classifier: IrClassifierSymbol, substitutions: Map<IrTypeParameterSymbol, IrTypeArgument> = emptyMap(), currentlyAnalyzing: Set<IrClassifierSymbol> = emptySet()): Stability","description":"androidx.compose.compiler.plugins.kotlin.analysis.StabilityInferencer.stabilityOf","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.analysis/-stability-inferencer/stability-of.html","searchKeys":["stabilityOf","fun stabilityOf(classifier: IrClassifierSymbol, substitutions: Map<IrTypeParameterSymbol, IrTypeArgument> = emptyMap(), currentlyAnalyzing: Set<IrClassifierSymbol> = emptySet()): Stability","androidx.compose.compiler.plugins.kotlin.analysis.StabilityInferencer.stabilityOf"]},{"name":"fun stabilityOf(declaration: IrClass, substitutions: Map<IrTypeParameterSymbol, IrTypeArgument> = emptyMap(), currentlyAnalyzing: Set<IrClassifierSymbol> = emptySet()): Stability","description":"androidx.compose.compiler.plugins.kotlin.analysis.StabilityInferencer.stabilityOf","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.analysis/-stability-inferencer/stability-of.html","searchKeys":["stabilityOf","fun stabilityOf(declaration: IrClass, substitutions: Map<IrTypeParameterSymbol, IrTypeArgument> = emptyMap(), currentlyAnalyzing: Set<IrClassifierSymbol> = emptySet()): Stability","androidx.compose.compiler.plugins.kotlin.analysis.StabilityInferencer.stabilityOf"]},{"name":"fun stabilityOf(expr: IrCall): Stability","description":"androidx.compose.compiler.plugins.kotlin.analysis.StabilityInferencer.stabilityOf","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.analysis/-stability-inferencer/stability-of.html","searchKeys":["stabilityOf","fun stabilityOf(expr: IrCall): Stability","androidx.compose.compiler.plugins.kotlin.analysis.StabilityInferencer.stabilityOf"]},{"name":"fun stabilityOf(expr: IrExpression): Stability","description":"androidx.compose.compiler.plugins.kotlin.analysis.StabilityInferencer.stabilityOf","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.analysis/-stability-inferencer/stability-of.html","searchKeys":["stabilityOf","fun stabilityOf(expr: IrExpression): Stability","androidx.compose.compiler.plugins.kotlin.analysis.StabilityInferencer.stabilityOf"]},{"name":"fun stabilityOf(expr: IrExpression): Stability","description":"androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.stabilityOf","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-abstract-compose-lowering/stability-of.html","searchKeys":["stabilityOf","fun stabilityOf(expr: IrExpression): Stability","androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.stabilityOf"]},{"name":"fun stabilityOf(type: IrType): Stability","description":"androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.stabilityOf","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-abstract-compose-lowering/stability-of.html","searchKeys":["stabilityOf","fun stabilityOf(type: IrType): Stability","androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.stabilityOf"]},{"name":"fun stabilityOf(type: IrType, substitutions: Map<IrTypeParameterSymbol, IrTypeArgument> = emptyMap(), currentlyAnalyzing: Set<IrClassifierSymbol> = emptySet()): Stability","description":"androidx.compose.compiler.plugins.kotlin.analysis.StabilityInferencer.stabilityOf","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.analysis/-stability-inferencer/stability-of.html","searchKeys":["stabilityOf","fun stabilityOf(type: IrType, substitutions: Map<IrTypeParameterSymbol, IrTypeArgument> = emptyMap(), currentlyAnalyzing: Set<IrClassifierSymbol> = emptySet()): Stability","androidx.compose.compiler.plugins.kotlin.analysis.StabilityInferencer.stabilityOf"]},{"name":"inline fun <A, B, C> forEachWith(a: List<A>, b: List<B>, c: List<C>, fn: (A, B, C) -> Unit)","description":"androidx.compose.compiler.plugins.kotlin.lower.forEachWith","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/for-each-with.html","searchKeys":["forEachWith","inline fun <A, B, C> forEachWith(a: List<A>, b: List<B>, c: List<C>, fn: (A, B, C) -> Unit)","androidx.compose.compiler.plugins.kotlin.lower.forEachWith"]},{"name":"inline fun <T : IrElement> T.copyWithNewTypeParams(source: IrFunction, target: IrFunction): T","description":"androidx.compose.compiler.plugins.kotlin.lower.decoys.copyWithNewTypeParams","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower.decoys/copy-with-new-type-params.html","searchKeys":["copyWithNewTypeParams","inline fun <T : IrElement> T.copyWithNewTypeParams(source: IrFunction, target: IrFunction): T","androidx.compose.compiler.plugins.kotlin.lower.decoys.copyWithNewTypeParams"]},{"name":"inline fun IrProperty.addSetter(builder: IrFunctionBuilder.() -> Unit = {}): IrSimpleFunction","description":"androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.addSetter","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-live-literal-transformer/add-setter.html","searchKeys":["addSetter","inline fun IrProperty.addSetter(builder: IrFunctionBuilder.() -> Unit = {}): IrSimpleFunction","androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.addSetter"]},{"name":"inner class IrChangedBitMaskVariableImpl(temps: List<IrVariable>, count: Int) : ComposableFunctionBodyTransformer.IrChangedBitMaskValueImpl, IrChangedBitMaskVariable","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.IrChangedBitMaskVariableImpl","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-ir-changed-bit-mask-variable-impl/index.html","searchKeys":["IrChangedBitMaskVariableImpl","inner class IrChangedBitMaskVariableImpl(temps: List<IrVariable>, count: Int) : ComposableFunctionBodyTransformer.IrChangedBitMaskValueImpl, IrChangedBitMaskVariable","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.IrChangedBitMaskVariableImpl"]},{"name":"inner class IrDefaultBitMaskValueImpl(params: List<IrValueParameter>, count: Int) : IrDefaultBitMaskValue","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.IrDefaultBitMaskValueImpl","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-ir-default-bit-mask-value-impl/index.html","searchKeys":["IrDefaultBitMaskValueImpl","inner class IrDefaultBitMaskValueImpl(params: List<IrValueParameter>, count: Int) : IrDefaultBitMaskValue","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.IrDefaultBitMaskValueImpl"]},{"name":"interface IrChangedBitMaskValue","description":"androidx.compose.compiler.plugins.kotlin.lower.IrChangedBitMaskValue","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-ir-changed-bit-mask-value/index.html","searchKeys":["IrChangedBitMaskValue","interface IrChangedBitMaskValue","androidx.compose.compiler.plugins.kotlin.lower.IrChangedBitMaskValue"]},{"name":"interface IrChangedBitMaskVariable : IrChangedBitMaskValue","description":"androidx.compose.compiler.plugins.kotlin.lower.IrChangedBitMaskVariable","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-ir-changed-bit-mask-variable/index.html","searchKeys":["IrChangedBitMaskVariable","interface IrChangedBitMaskVariable : IrChangedBitMaskValue","androidx.compose.compiler.plugins.kotlin.lower.IrChangedBitMaskVariable"]},{"name":"interface IrDefaultBitMaskValue","description":"androidx.compose.compiler.plugins.kotlin.lower.IrDefaultBitMaskValue","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-ir-default-bit-mask-value/index.html","searchKeys":["IrDefaultBitMaskValue","interface IrDefaultBitMaskValue","androidx.compose.compiler.plugins.kotlin.lower.IrDefaultBitMaskValue"]},{"name":"interface ModuleLoweringPass","description":"androidx.compose.compiler.plugins.kotlin.lower.ModuleLoweringPass","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-module-lowering-pass/index.html","searchKeys":["ModuleLoweringPass","interface ModuleLoweringPass","androidx.compose.compiler.plugins.kotlin.lower.ModuleLoweringPass"]},{"name":"lateinit var deepCopy: IrElementTransformerVoid","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposerTypeRemapper.deepCopy","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composer-type-remapper/deep-copy.html","searchKeys":["deepCopy","lateinit var deepCopy: IrElementTransformerVoid","androidx.compose.compiler.plugins.kotlin.lower.ComposerTypeRemapper.deepCopy"]},{"name":"object COMPOSE_STATEMENT_ORIGIN : IrStatementOriginImpl","description":"androidx.compose.compiler.plugins.kotlin.lower.COMPOSE_STATEMENT_ORIGIN","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-c-o-m-p-o-s-e_-s-t-a-t-e-m-e-n-t_-o-r-i-g-i-n/index.html","searchKeys":["COMPOSE_STATEMENT_ORIGIN","object COMPOSE_STATEMENT_ORIGIN : IrStatementOriginImpl","androidx.compose.compiler.plugins.kotlin.lower.COMPOSE_STATEMENT_ORIGIN"]},{"name":"object Companion","description":"androidx.compose.compiler.plugins.kotlin.ComposeCommandLineProcessor.Companion","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-command-line-processor/-companion/index.html","searchKeys":["Companion","object Companion","androidx.compose.compiler.plugins.kotlin.ComposeCommandLineProcessor.Companion"]},{"name":"object Companion","description":"androidx.compose.compiler.plugins.kotlin.ComposeComponentRegistrar.Companion","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-component-registrar/-companion/index.html","searchKeys":["Companion","object Companion","androidx.compose.compiler.plugins.kotlin.ComposeComponentRegistrar.Companion"]},{"name":"object Companion","description":"androidx.compose.compiler.plugins.kotlin.ComposeDiagnosticSuppressor.Companion","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-diagnostic-suppressor/-companion/index.html","searchKeys":["Companion","object Companion","androidx.compose.compiler.plugins.kotlin.ComposeDiagnosticSuppressor.Companion"]},{"name":"object Companion","description":"androidx.compose.compiler.plugins.kotlin.VersionChecker.Companion","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-version-checker/-companion/index.html","searchKeys":["Companion","object Companion","androidx.compose.compiler.plugins.kotlin.VersionChecker.Companion"]},{"name":"object Companion","description":"androidx.compose.compiler.plugins.kotlin.analysis.Stability.Companion","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.analysis/-stability/-companion/index.html","searchKeys":["Companion","object Companion","androidx.compose.compiler.plugins.kotlin.analysis.Stability.Companion"]},{"name":"object Companion","description":"androidx.compose.compiler.plugins.kotlin.lower.PathPartInfo.Companion","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-path-part-info/-companion/index.html","searchKeys":["Companion","object Companion","androidx.compose.compiler.plugins.kotlin.lower.PathPartInfo.Companion"]},{"name":"object Companion","description":"androidx.compose.compiler.plugins.kotlin.lower.decoys.CreateDecoysTransformer.Companion","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower.decoys/-create-decoys-transformer/-companion/index.html","searchKeys":["Companion","object Companion","androidx.compose.compiler.plugins.kotlin.lower.decoys.CreateDecoysTransformer.Companion"]},{"name":"object ComposeConfiguration","description":"androidx.compose.compiler.plugins.kotlin.ComposeConfiguration","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-configuration/index.html","searchKeys":["ComposeConfiguration","object ComposeConfiguration","androidx.compose.compiler.plugins.kotlin.ComposeConfiguration"]},{"name":"object ComposeErrors","description":"androidx.compose.compiler.plugins.kotlin.ComposeErrors","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-errors/index.html","searchKeys":["ComposeErrors","object ComposeErrors","androidx.compose.compiler.plugins.kotlin.ComposeErrors"]},{"name":"object ComposeFlags","description":"androidx.compose.compiler.plugins.kotlin.ComposeFlags","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-flags/index.html","searchKeys":["ComposeFlags","object ComposeFlags","androidx.compose.compiler.plugins.kotlin.ComposeFlags"]},{"name":"object ComposeFqNames","description":"androidx.compose.compiler.plugins.kotlin.ComposeFqNames","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-fq-names/index.html","searchKeys":["ComposeFqNames","object ComposeFqNames","androidx.compose.compiler.plugins.kotlin.ComposeFqNames"]},{"name":"object ComposeWritableSlices","description":"androidx.compose.compiler.plugins.kotlin.analysis.ComposeWritableSlices","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.analysis/-compose-writable-slices/index.html","searchKeys":["ComposeWritableSlices","object ComposeWritableSlices","androidx.compose.compiler.plugins.kotlin.analysis.ComposeWritableSlices"]},{"name":"object DecoyFqNames","description":"androidx.compose.compiler.plugins.kotlin.lower.decoys.DecoyFqNames","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower.decoys/-decoy-fq-names/index.html","searchKeys":["DecoyFqNames","object DecoyFqNames","androidx.compose.compiler.plugins.kotlin.lower.decoys.DecoyFqNames"]},{"name":"object KtxNameConventions","description":"androidx.compose.compiler.plugins.kotlin.KtxNameConventions","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-ktx-name-conventions/index.html","searchKeys":["KtxNameConventions","object KtxNameConventions","androidx.compose.compiler.plugins.kotlin.KtxNameConventions"]},{"name":"open class ComposableCallChecker : CallChecker, AdditionalTypeChecker, StorageComponentContainerContributor","description":"androidx.compose.compiler.plugins.kotlin.ComposableCallChecker","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-composable-call-checker/index.html","searchKeys":["ComposableCallChecker","open class ComposableCallChecker : CallChecker, AdditionalTypeChecker, StorageComponentContainerContributor","androidx.compose.compiler.plugins.kotlin.ComposableCallChecker"]},{"name":"open class ComposeDiagnosticSuppressor : DiagnosticSuppressor","description":"androidx.compose.compiler.plugins.kotlin.ComposeDiagnosticSuppressor","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-diagnostic-suppressor/index.html","searchKeys":["ComposeDiagnosticSuppressor","open class ComposeDiagnosticSuppressor : DiagnosticSuppressor","androidx.compose.compiler.plugins.kotlin.ComposeDiagnosticSuppressor"]},{"name":"open class ComposeTypeResolutionInterceptorExtension : TypeResolutionInterceptorExtension","description":"androidx.compose.compiler.plugins.kotlin.ComposeTypeResolutionInterceptorExtension","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-type-resolution-interceptor-extension/index.html","searchKeys":["ComposeTypeResolutionInterceptorExtension","open class ComposeTypeResolutionInterceptorExtension : TypeResolutionInterceptorExtension","androidx.compose.compiler.plugins.kotlin.ComposeTypeResolutionInterceptorExtension"]},{"name":"open class LiveLiteralTransformer(liveLiteralsEnabled: Boolean, usePerFileEnabledFlag: Boolean, keyVisitor: DurableKeyVisitor, context: IrPluginContext, symbolRemapper: DeepCopySymbolRemapper, bindingTrace: BindingTrace) : AbstractComposeLowering, ModuleLoweringPass","description":"androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-live-literal-transformer/index.html","searchKeys":["LiveLiteralTransformer","open class LiveLiteralTransformer(liveLiteralsEnabled: Boolean, usePerFileEnabledFlag: Boolean, keyVisitor: DurableKeyVisitor, context: IrPluginContext, symbolRemapper: DeepCopySymbolRemapper, bindingTrace: BindingTrace) : AbstractComposeLowering, ModuleLoweringPass","androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer"]},{"name":"open class SourceLocation(element: IrElement)","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.SourceLocation","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-source-location/index.html","searchKeys":["SourceLocation","open class SourceLocation(element: IrElement)","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.SourceLocation"]},{"name":"open fun calculateHasSourceInformation(sourceInformationEnabled: Boolean): Boolean","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.BlockScope.calculateHasSourceInformation","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-block-scope/calculate-has-source-information.html","searchKeys":["calculateHasSourceInformation","open fun calculateHasSourceInformation(sourceInformationEnabled: Boolean): Boolean","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.BlockScope.calculateHasSourceInformation"]},{"name":"open fun calculateSourceInfo(sourceInformationEnabled: Boolean): String?","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.BlockScope.calculateSourceInfo","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-block-scope/calculate-source-info.html","searchKeys":["calculateSourceInfo","open fun calculateSourceInfo(sourceInformationEnabled: Boolean): String?","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.BlockScope.calculateSourceInfo"]},{"name":"open fun makeKeySet(): MutableSet<String>","description":"androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.makeKeySet","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-live-literal-transformer/make-key-set.html","searchKeys":["makeKeySet","open fun makeKeySet(): MutableSet<String>","androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.makeKeySet"]},{"name":"open fun realizeEndCalls(makeEnd: () -> IrExpression)","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.BlockScope.realizeEndCalls","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-block-scope/realize-end-calls.html","searchKeys":["realizeEndCalls","open fun realizeEndCalls(makeEnd: () -> IrExpression)","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.BlockScope.realizeEndCalls"]},{"name":"open fun sourceLocationOf(call: IrElement): ComposableFunctionBodyTransformer.Scope.SourceLocation","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.BlockScope.sourceLocationOf","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-block-scope/source-location-of.html","searchKeys":["sourceLocationOf","open fun sourceLocationOf(call: IrElement): ComposableFunctionBodyTransformer.Scope.SourceLocation","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.BlockScope.sourceLocationOf"]},{"name":"open inner class IrChangedBitMaskValueImpl(params: List<IrValueDeclaration>, count: Int) : IrChangedBitMaskValue","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.IrChangedBitMaskValueImpl","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-ir-changed-bit-mask-value-impl/index.html","searchKeys":["IrChangedBitMaskValueImpl","open inner class IrChangedBitMaskValueImpl(params: List<IrValueDeclaration>, count: Int) : IrChangedBitMaskValue","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.IrChangedBitMaskValueImpl"]},{"name":"open override fun <T> visitConst(expression: IrConst<T>): IrExpression","description":"androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.visitConst","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-live-literal-transformer/visit-const.html","searchKeys":["visitConst","open override fun <T> visitConst(expression: IrConst<T>): IrExpression","androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.visitConst"]},{"name":"open override fun afterClass(descriptor: ClassDescriptor, proto: ProtoBuf.Class.Builder, versionRequirementTable: MutableVersionRequirementTable, childSerializer: DescriptorSerializer, extension: SerializerExtension)","description":"androidx.compose.compiler.plugins.kotlin.lower.ClassStabilityFieldSerializationPlugin.afterClass","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-class-stability-field-serialization-plugin/after-class.html","searchKeys":["afterClass","open override fun afterClass(descriptor: ClassDescriptor, proto: ProtoBuf.Class.Builder, versionRequirementTable: MutableVersionRequirementTable, childSerializer: DescriptorSerializer, extension: SerializerExtension)","androidx.compose.compiler.plugins.kotlin.lower.ClassStabilityFieldSerializationPlugin.afterClass"]},{"name":"open override fun asStatements(): List<IrStatement>","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.IrChangedBitMaskVariableImpl.asStatements","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-ir-changed-bit-mask-variable-impl/as-statements.html","searchKeys":["asStatements","open override fun asStatements(): List<IrStatement>","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.IrChangedBitMaskVariableImpl.asStatements"]},{"name":"open override fun calculateHasSourceInformation(sourceInformationEnabled: Boolean): Boolean","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.ComposableLambdaScope.calculateHasSourceInformation","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-composable-lambda-scope/calculate-has-source-information.html","searchKeys":["calculateHasSourceInformation","open override fun calculateHasSourceInformation(sourceInformationEnabled: Boolean): Boolean","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.ComposableLambdaScope.calculateHasSourceInformation"]},{"name":"open override fun calculateHasSourceInformation(sourceInformationEnabled: Boolean): Boolean","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.FunctionScope.calculateHasSourceInformation","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-function-scope/calculate-has-source-information.html","searchKeys":["calculateHasSourceInformation","open override fun calculateHasSourceInformation(sourceInformationEnabled: Boolean): Boolean","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.FunctionScope.calculateHasSourceInformation"]},{"name":"open override fun calculateSourceInfo(sourceInformationEnabled: Boolean): String?","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.ComposableLambdaScope.calculateSourceInfo","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-composable-lambda-scope/calculate-source-info.html","searchKeys":["calculateSourceInfo","open override fun calculateSourceInfo(sourceInformationEnabled: Boolean): String?","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.ComposableLambdaScope.calculateSourceInfo"]},{"name":"open override fun calculateSourceInfo(sourceInformationEnabled: Boolean): String?","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.FunctionScope.calculateSourceInfo","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-function-scope/calculate-source-info.html","searchKeys":["calculateSourceInfo","open override fun calculateSourceInfo(sourceInformationEnabled: Boolean): String?","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.FunctionScope.calculateSourceInfo"]},{"name":"open override fun check(declaration: KtDeclaration, descriptor: DeclarationDescriptor, context: DeclarationCheckerContext)","description":"androidx.compose.compiler.plugins.kotlin.ComposableDeclarationChecker.check","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-composable-declaration-checker/check.html","searchKeys":["check","open override fun check(declaration: KtDeclaration, descriptor: DeclarationDescriptor, context: DeclarationCheckerContext)","androidx.compose.compiler.plugins.kotlin.ComposableDeclarationChecker.check"]},{"name":"open override fun check(resolvedCall: ResolvedCall<*>, reportOn: PsiElement, context: CallCheckerContext)","description":"androidx.compose.compiler.plugins.kotlin.ComposableCallChecker.check","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-composable-call-checker/check.html","searchKeys":["check","open override fun check(resolvedCall: ResolvedCall<*>, reportOn: PsiElement, context: CallCheckerContext)","androidx.compose.compiler.plugins.kotlin.ComposableCallChecker.check"]},{"name":"open override fun checkType(expression: KtExpression, expressionType: KotlinType, expressionTypeWithSmartCast: KotlinType, c: ResolutionContext<*>)","description":"androidx.compose.compiler.plugins.kotlin.ComposableCallChecker.checkType","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-composable-call-checker/check-type.html","searchKeys":["checkType","open override fun checkType(expression: KtExpression, expressionType: KotlinType, expressionTypeWithSmartCast: KotlinType, c: ResolutionContext<*>)","androidx.compose.compiler.plugins.kotlin.ComposableCallChecker.checkType"]},{"name":"open override fun enterScope(irTypeParametersContainer: IrTypeParametersContainer)","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposerTypeRemapper.enterScope","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composer-type-remapper/enter-scope.html","searchKeys":["enterScope","open override fun enterScope(irTypeParametersContainer: IrTypeParametersContainer)","androidx.compose.compiler.plugins.kotlin.lower.ComposerTypeRemapper.enterScope"]},{"name":"open override fun generate(moduleFragment: IrModuleFragment, pluginContext: IrPluginContext)","description":"androidx.compose.compiler.plugins.kotlin.ComposeIrGenerationExtension.generate","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-ir-generation-extension/generate.html","searchKeys":["generate","open override fun generate(moduleFragment: IrModuleFragment, pluginContext: IrPluginContext)","androidx.compose.compiler.plugins.kotlin.ComposeIrGenerationExtension.generate"]},{"name":"open override fun getMap(): DiagnosticFactoryToRendererMap","description":"androidx.compose.compiler.plugins.kotlin.ComposeErrorMessages.getMap","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-error-messages/get-map.html","searchKeys":["getMap","open override fun getMap(): DiagnosticFactoryToRendererMap","androidx.compose.compiler.plugins.kotlin.ComposeErrorMessages.getMap"]},{"name":"open override fun interceptFunctionLiteralDescriptor(expression: KtLambdaExpression, context: ExpressionTypingContext, descriptor: AnonymousFunctionDescriptor): AnonymousFunctionDescriptor","description":"androidx.compose.compiler.plugins.kotlin.ComposeTypeResolutionInterceptorExtension.interceptFunctionLiteralDescriptor","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-type-resolution-interceptor-extension/intercept-function-literal-descriptor.html","searchKeys":["interceptFunctionLiteralDescriptor","open override fun interceptFunctionLiteralDescriptor(expression: KtLambdaExpression, context: ExpressionTypingContext, descriptor: AnonymousFunctionDescriptor): AnonymousFunctionDescriptor","androidx.compose.compiler.plugins.kotlin.ComposeTypeResolutionInterceptorExtension.interceptFunctionLiteralDescriptor"]},{"name":"open override fun interceptType(element: KtElement, context: ExpressionTypingContext, resultType: KotlinType): KotlinType","description":"androidx.compose.compiler.plugins.kotlin.ComposeTypeResolutionInterceptorExtension.interceptType","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-type-resolution-interceptor-extension/intercept-type.html","searchKeys":["interceptType","open override fun interceptType(element: KtElement, context: ExpressionTypingContext, resultType: KotlinType): KotlinType","androidx.compose.compiler.plugins.kotlin.ComposeTypeResolutionInterceptorExtension.interceptType"]},{"name":"open override fun irCopyToTemporary(nameHint: String?, isVar: Boolean, exactName: Boolean): IrChangedBitMaskVariable","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.IrChangedBitMaskValueImpl.irCopyToTemporary","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-ir-changed-bit-mask-value-impl/ir-copy-to-temporary.html","searchKeys":["irCopyToTemporary","open override fun irCopyToTemporary(nameHint: String?, isVar: Boolean, exactName: Boolean): IrChangedBitMaskVariable","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.IrChangedBitMaskValueImpl.irCopyToTemporary"]},{"name":"open override fun irHasAnyProvidedAndUnstable(unstable: BooleanArray): IrExpression","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.IrDefaultBitMaskValueImpl.irHasAnyProvidedAndUnstable","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-ir-default-bit-mask-value-impl/ir-has-any-provided-and-unstable.html","searchKeys":["irHasAnyProvidedAndUnstable","open override fun irHasAnyProvidedAndUnstable(unstable: BooleanArray): IrExpression","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.IrDefaultBitMaskValueImpl.irHasAnyProvidedAndUnstable"]},{"name":"open override fun irHasDifferences(usedParams: BooleanArray): IrExpression","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.IrChangedBitMaskValueImpl.irHasDifferences","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-ir-changed-bit-mask-value-impl/ir-has-differences.html","searchKeys":["irHasDifferences","open override fun irHasDifferences(usedParams: BooleanArray): IrExpression","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.IrChangedBitMaskValueImpl.irHasDifferences"]},{"name":"open override fun irIsolateBitAtIndex(index: Int): IrExpression","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.IrDefaultBitMaskValueImpl.irIsolateBitAtIndex","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-ir-default-bit-mask-value-impl/ir-isolate-bit-at-index.html","searchKeys":["irIsolateBitAtIndex","open override fun irIsolateBitAtIndex(index: Int): IrExpression","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.IrDefaultBitMaskValueImpl.irIsolateBitAtIndex"]},{"name":"open override fun irIsolateBitsAtSlot(slot: Int, includeStableBit: Boolean): IrExpression","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.IrChangedBitMaskValueImpl.irIsolateBitsAtSlot","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-ir-changed-bit-mask-value-impl/ir-isolate-bits-at-slot.html","searchKeys":["irIsolateBitsAtSlot","open override fun irIsolateBitsAtSlot(slot: Int, includeStableBit: Boolean): IrExpression","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.IrChangedBitMaskValueImpl.irIsolateBitsAtSlot"]},{"name":"open override fun irLowBit(): IrExpression","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.IrChangedBitMaskValueImpl.irLowBit","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-ir-changed-bit-mask-value-impl/ir-low-bit.html","searchKeys":["irLowBit","open override fun irLowBit(): IrExpression","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.IrChangedBitMaskValueImpl.irLowBit"]},{"name":"open override fun irOrSetBitsAtSlot(slot: Int, value: IrExpression): IrExpression","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.IrChangedBitMaskVariableImpl.irOrSetBitsAtSlot","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-ir-changed-bit-mask-variable-impl/ir-or-set-bits-at-slot.html","searchKeys":["irOrSetBitsAtSlot","open override fun irOrSetBitsAtSlot(slot: Int, value: IrExpression): IrExpression","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.IrChangedBitMaskVariableImpl.irOrSetBitsAtSlot"]},{"name":"open override fun irSetSlotUncertain(slot: Int): IrExpression","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.IrChangedBitMaskVariableImpl.irSetSlotUncertain","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-ir-changed-bit-mask-variable-impl/ir-set-slot-uncertain.html","searchKeys":["irSetSlotUncertain","open override fun irSetSlotUncertain(slot: Int): IrExpression","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.IrChangedBitMaskVariableImpl.irSetSlotUncertain"]},{"name":"open override fun irShiftBits(fromSlot: Int, toSlot: Int): IrExpression","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.IrChangedBitMaskValueImpl.irShiftBits","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-ir-changed-bit-mask-value-impl/ir-shift-bits.html","searchKeys":["irShiftBits","open override fun irShiftBits(fromSlot: Int, toSlot: Int): IrExpression","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.IrChangedBitMaskValueImpl.irShiftBits"]},{"name":"open override fun irSlotAnd(slot: Int, bits: Int): IrExpression","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.IrChangedBitMaskValueImpl.irSlotAnd","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-ir-changed-bit-mask-value-impl/ir-slot-and.html","searchKeys":["irSlotAnd","open override fun irSlotAnd(slot: Int, bits: Int): IrExpression","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.IrChangedBitMaskValueImpl.irSlotAnd"]},{"name":"open override fun isSuppressed(diagnostic: Diagnostic): Boolean","description":"androidx.compose.compiler.plugins.kotlin.ComposeDiagnosticSuppressor.isSuppressed","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-diagnostic-suppressor/is-suppressed.html","searchKeys":["isSuppressed","open override fun isSuppressed(diagnostic: Diagnostic): Boolean","androidx.compose.compiler.plugins.kotlin.ComposeDiagnosticSuppressor.isSuppressed"]},{"name":"open override fun isSuppressed(diagnostic: Diagnostic, bindingContext: BindingContext?): Boolean","description":"androidx.compose.compiler.plugins.kotlin.ComposeDiagnosticSuppressor.isSuppressed","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-diagnostic-suppressor/is-suppressed.html","searchKeys":["isSuppressed","open override fun isSuppressed(diagnostic: Diagnostic, bindingContext: BindingContext?): Boolean","androidx.compose.compiler.plugins.kotlin.ComposeDiagnosticSuppressor.isSuppressed"]},{"name":"open override fun leaveScope()","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposerTypeRemapper.leaveScope","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composer-type-remapper/leave-scope.html","searchKeys":["leaveScope","open override fun leaveScope()","androidx.compose.compiler.plugins.kotlin.lower.ComposerTypeRemapper.leaveScope"]},{"name":"open override fun lower(irClass: IrClass)","description":"androidx.compose.compiler.plugins.kotlin.lower.ClassStabilityTransformer.lower","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-class-stability-transformer/lower.html","searchKeys":["lower","open override fun lower(irClass: IrClass)","androidx.compose.compiler.plugins.kotlin.lower.ClassStabilityTransformer.lower"]},{"name":"open override fun lower(irFile: IrFile)","description":"androidx.compose.compiler.plugins.kotlin.lower.ClassStabilityTransformer.lower","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-class-stability-transformer/lower.html","searchKeys":["lower","open override fun lower(irFile: IrFile)","androidx.compose.compiler.plugins.kotlin.lower.ClassStabilityTransformer.lower"]},{"name":"open override fun lower(irFile: IrFile)","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.lower","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/lower.html","searchKeys":["lower","open override fun lower(irFile: IrFile)","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.lower"]},{"name":"open override fun lower(irFile: IrFile)","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposerIntrinsicTransformer.lower","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composer-intrinsic-transformer/lower.html","searchKeys":["lower","open override fun lower(irFile: IrFile)","androidx.compose.compiler.plugins.kotlin.lower.ComposerIntrinsicTransformer.lower"]},{"name":"open override fun lower(module: IrModuleFragment)","description":"androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.lower","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-abstract-compose-lowering/lower.html","searchKeys":["lower","open override fun lower(module: IrModuleFragment)","androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.lower"]},{"name":"open override fun lower(module: IrModuleFragment)","description":"androidx.compose.compiler.plugins.kotlin.lower.ClassStabilityTransformer.lower","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-class-stability-transformer/lower.html","searchKeys":["lower","open override fun lower(module: IrModuleFragment)","androidx.compose.compiler.plugins.kotlin.lower.ClassStabilityTransformer.lower"]},{"name":"open override fun lower(module: IrModuleFragment)","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunInterfaceLowering.lower","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-fun-interface-lowering/lower.html","searchKeys":["lower","open override fun lower(module: IrModuleFragment)","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunInterfaceLowering.lower"]},{"name":"open override fun lower(module: IrModuleFragment)","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.lower","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/lower.html","searchKeys":["lower","open override fun lower(module: IrModuleFragment)","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.lower"]},{"name":"open override fun lower(module: IrModuleFragment)","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposerIntrinsicTransformer.lower","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composer-intrinsic-transformer/lower.html","searchKeys":["lower","open override fun lower(module: IrModuleFragment)","androidx.compose.compiler.plugins.kotlin.lower.ComposerIntrinsicTransformer.lower"]},{"name":"open override fun lower(module: IrModuleFragment)","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposerLambdaMemoization.lower","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composer-lambda-memoization/lower.html","searchKeys":["lower","open override fun lower(module: IrModuleFragment)","androidx.compose.compiler.plugins.kotlin.lower.ComposerLambdaMemoization.lower"]},{"name":"open override fun lower(module: IrModuleFragment)","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposerParamTransformer.lower","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composer-param-transformer/lower.html","searchKeys":["lower","open override fun lower(module: IrModuleFragment)","androidx.compose.compiler.plugins.kotlin.lower.ComposerParamTransformer.lower"]},{"name":"open override fun lower(module: IrModuleFragment)","description":"androidx.compose.compiler.plugins.kotlin.lower.KlibAssignableParamTransformer.lower","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-klib-assignable-param-transformer/lower.html","searchKeys":["lower","open override fun lower(module: IrModuleFragment)","androidx.compose.compiler.plugins.kotlin.lower.KlibAssignableParamTransformer.lower"]},{"name":"open override fun lower(module: IrModuleFragment)","description":"androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.lower","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-live-literal-transformer/lower.html","searchKeys":["lower","open override fun lower(module: IrModuleFragment)","androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.lower"]},{"name":"open override fun lower(module: IrModuleFragment)","description":"androidx.compose.compiler.plugins.kotlin.lower.decoys.CreateDecoysTransformer.lower","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower.decoys/-create-decoys-transformer/lower.html","searchKeys":["lower","open override fun lower(module: IrModuleFragment)","androidx.compose.compiler.plugins.kotlin.lower.decoys.CreateDecoysTransformer.lower"]},{"name":"open override fun lower(module: IrModuleFragment)","description":"androidx.compose.compiler.plugins.kotlin.lower.decoys.RecordDecoySignaturesTransformer.lower","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower.decoys/-record-decoy-signatures-transformer/lower.html","searchKeys":["lower","open override fun lower(module: IrModuleFragment)","androidx.compose.compiler.plugins.kotlin.lower.decoys.RecordDecoySignaturesTransformer.lower"]},{"name":"open override fun lower(module: IrModuleFragment)","description":"androidx.compose.compiler.plugins.kotlin.lower.decoys.SubstituteDecoyCallsTransformer.lower","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower.decoys/-substitute-decoy-calls-transformer/lower.html","searchKeys":["lower","open override fun lower(module: IrModuleFragment)","androidx.compose.compiler.plugins.kotlin.lower.decoys.SubstituteDecoyCallsTransformer.lower"]},{"name":"open override fun processOption(option: AbstractCliOption, value: String, configuration: CompilerConfiguration)","description":"androidx.compose.compiler.plugins.kotlin.ComposeCommandLineProcessor.processOption","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-command-line-processor/process-option.html","searchKeys":["processOption","open override fun processOption(option: AbstractCliOption, value: String, configuration: CompilerConfiguration)","androidx.compose.compiler.plugins.kotlin.ComposeCommandLineProcessor.processOption"]},{"name":"open override fun putAsValueArgumentIn(fn: IrFunctionAccessExpression, startIndex: Int)","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.IrDefaultBitMaskValueImpl.putAsValueArgumentIn","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-ir-default-bit-mask-value-impl/put-as-value-argument-in.html","searchKeys":["putAsValueArgumentIn","open override fun putAsValueArgumentIn(fn: IrFunctionAccessExpression, startIndex: Int)","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.IrDefaultBitMaskValueImpl.putAsValueArgumentIn"]},{"name":"open override fun putAsValueArgumentInWithLowBit(fn: IrFunctionAccessExpression, startIndex: Int, lowBit: Boolean)","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.IrChangedBitMaskValueImpl.putAsValueArgumentInWithLowBit","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-ir-changed-bit-mask-value-impl/put-as-value-argument-in-with-low-bit.html","searchKeys":["putAsValueArgumentInWithLowBit","open override fun putAsValueArgumentInWithLowBit(fn: IrFunctionAccessExpression, startIndex: Int, lowBit: Boolean)","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.IrChangedBitMaskValueImpl.putAsValueArgumentInWithLowBit"]},{"name":"open override fun realizeEndCalls(makeEnd: () -> IrExpression)","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.LoopScope.realizeEndCalls","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-loop-scope/realize-end-calls.html","searchKeys":["realizeEndCalls","open override fun realizeEndCalls(makeEnd: () -> IrExpression)","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.LoopScope.realizeEndCalls"]},{"name":"open override fun registerModuleComponents(container: StorageComponentContainer, platform: TargetPlatform, moduleDescriptor: ModuleDescriptor)","description":"androidx.compose.compiler.plugins.kotlin.ComposableCallChecker.registerModuleComponents","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-composable-call-checker/register-module-components.html","searchKeys":["registerModuleComponents","open override fun registerModuleComponents(container: StorageComponentContainer, platform: TargetPlatform, moduleDescriptor: ModuleDescriptor)","androidx.compose.compiler.plugins.kotlin.ComposableCallChecker.registerModuleComponents"]},{"name":"open override fun registerModuleComponents(container: StorageComponentContainer, platform: TargetPlatform, moduleDescriptor: ModuleDescriptor)","description":"androidx.compose.compiler.plugins.kotlin.ComposableDeclarationChecker.registerModuleComponents","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-composable-declaration-checker/register-module-components.html","searchKeys":["registerModuleComponents","open override fun registerModuleComponents(container: StorageComponentContainer, platform: TargetPlatform, moduleDescriptor: ModuleDescriptor)","androidx.compose.compiler.plugins.kotlin.ComposableDeclarationChecker.registerModuleComponents"]},{"name":"open override fun registerProjectComponents(project: MockProject, configuration: CompilerConfiguration)","description":"androidx.compose.compiler.plugins.kotlin.ComposeComponentRegistrar.registerProjectComponents","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-component-registrar/register-project-components.html","searchKeys":["registerProjectComponents","open override fun registerProjectComponents(project: MockProject, configuration: CompilerConfiguration)","androidx.compose.compiler.plugins.kotlin.ComposeComponentRegistrar.registerProjectComponents"]},{"name":"open override fun remapType(type: IrType): IrType","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposerTypeRemapper.remapType","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composer-type-remapper/remap-type.html","searchKeys":["remapType","open override fun remapType(type: IrType): IrType","androidx.compose.compiler.plugins.kotlin.lower.ComposerTypeRemapper.remapType"]},{"name":"open override fun sourceLocationOf(call: IrElement): ComposableFunctionBodyTransformer.Scope.SourceLocation","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.CaptureScope.sourceLocationOf","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-capture-scope/source-location-of.html","searchKeys":["sourceLocationOf","open override fun sourceLocationOf(call: IrElement): ComposableFunctionBodyTransformer.Scope.SourceLocation","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.CaptureScope.sourceLocationOf"]},{"name":"open override fun sourceLocationOf(call: IrElement): ComposableFunctionBodyTransformer.Scope.SourceLocation","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.FunctionScope.sourceLocationOf","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-function-scope/source-location-of.html","searchKeys":["sourceLocationOf","open override fun sourceLocationOf(call: IrElement): ComposableFunctionBodyTransformer.Scope.SourceLocation","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.FunctionScope.sourceLocationOf"]},{"name":"open override fun sourceLocationOf(call: IrElement): ComposableFunctionBodyTransformer.Scope.SourceLocation","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.LoopScope.sourceLocationOf","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-loop-scope/source-location-of.html","searchKeys":["sourceLocationOf","open override fun sourceLocationOf(call: IrElement): ComposableFunctionBodyTransformer.Scope.SourceLocation","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.LoopScope.sourceLocationOf"]},{"name":"open override fun toString(): String","description":"androidx.compose.compiler.plugins.kotlin.analysis.Stability.Certain.toString","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.analysis/-stability/-certain/to-string.html","searchKeys":["toString","open override fun toString(): String","androidx.compose.compiler.plugins.kotlin.analysis.Stability.Certain.toString"]},{"name":"open override fun toString(): String","description":"androidx.compose.compiler.plugins.kotlin.analysis.Stability.Combined.toString","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.analysis/-stability/-combined/to-string.html","searchKeys":["toString","open override fun toString(): String","androidx.compose.compiler.plugins.kotlin.analysis.Stability.Combined.toString"]},{"name":"open override fun toString(): String","description":"androidx.compose.compiler.plugins.kotlin.analysis.Stability.Parameter.toString","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.analysis/-stability/-parameter/to-string.html","searchKeys":["toString","open override fun toString(): String","androidx.compose.compiler.plugins.kotlin.analysis.Stability.Parameter.toString"]},{"name":"open override fun toString(): String","description":"androidx.compose.compiler.plugins.kotlin.analysis.Stability.Runtime.toString","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.analysis/-stability/-runtime/to-string.html","searchKeys":["toString","open override fun toString(): String","androidx.compose.compiler.plugins.kotlin.analysis.Stability.Runtime.toString"]},{"name":"open override fun toString(): String","description":"androidx.compose.compiler.plugins.kotlin.analysis.Stability.Unknown.toString","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.analysis/-stability/-unknown/to-string.html","searchKeys":["toString","open override fun toString(): String","androidx.compose.compiler.plugins.kotlin.analysis.Stability.Unknown.toString"]},{"name":"open override fun toString(): String","description":"androidx.compose.compiler.plugins.kotlin.lower.PathPartInfo.toString","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-path-part-info/to-string.html","searchKeys":["toString","open override fun toString(): String","androidx.compose.compiler.plugins.kotlin.lower.PathPartInfo.toString"]},{"name":"open override fun visitBlock(expression: IrBlock): IrExpression","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.visitBlock","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/visit-block.html","searchKeys":["visitBlock","open override fun visitBlock(expression: IrBlock): IrExpression","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.visitBlock"]},{"name":"open override fun visitBlock(expression: IrBlock): IrExpression","description":"androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.visitBlock","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-live-literal-transformer/visit-block.html","searchKeys":["visitBlock","open override fun visitBlock(expression: IrBlock): IrExpression","androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.visitBlock"]},{"name":"open override fun visitBlockBody(body: IrBlockBody): IrBody","description":"androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.visitBlockBody","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-live-literal-transformer/visit-block-body.html","searchKeys":["visitBlockBody","open override fun visitBlockBody(body: IrBlockBody): IrBody","androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.visitBlockBody"]},{"name":"open override fun visitBranch(branch: IrBranch): IrBranch","description":"androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.visitBranch","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-live-literal-transformer/visit-branch.html","searchKeys":["visitBranch","open override fun visitBranch(branch: IrBranch): IrBranch","androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.visitBranch"]},{"name":"open override fun visitBreakContinue(jump: IrBreakContinue): IrExpression","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.visitBreakContinue","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/visit-break-continue.html","searchKeys":["visitBreakContinue","open override fun visitBreakContinue(jump: IrBreakContinue): IrExpression","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.visitBreakContinue"]},{"name":"open override fun visitCall(expression: IrCall): IrCall","description":"androidx.compose.compiler.plugins.kotlin.lower.DeepCopyIrTreeWithSymbolsPreservingMetadata.visitCall","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-deep-copy-ir-tree-with-symbols-preserving-metadata/visit-call.html","searchKeys":["visitCall","open override fun visitCall(expression: IrCall): IrCall","androidx.compose.compiler.plugins.kotlin.lower.DeepCopyIrTreeWithSymbolsPreservingMetadata.visitCall"]},{"name":"open override fun visitCall(expression: IrCall): IrExpression","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.visitCall","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/visit-call.html","searchKeys":["visitCall","open override fun visitCall(expression: IrCall): IrExpression","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.visitCall"]},{"name":"open override fun visitCall(expression: IrCall): IrExpression","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposerIntrinsicTransformer.visitCall","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composer-intrinsic-transformer/visit-call.html","searchKeys":["visitCall","open override fun visitCall(expression: IrCall): IrExpression","androidx.compose.compiler.plugins.kotlin.lower.ComposerIntrinsicTransformer.visitCall"]},{"name":"open override fun visitCall(expression: IrCall): IrExpression","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposerLambdaMemoization.visitCall","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composer-lambda-memoization/visit-call.html","searchKeys":["visitCall","open override fun visitCall(expression: IrCall): IrExpression","androidx.compose.compiler.plugins.kotlin.lower.ComposerLambdaMemoization.visitCall"]},{"name":"open override fun visitCall(expression: IrCall): IrExpression","description":"androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.visitCall","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-live-literal-transformer/visit-call.html","searchKeys":["visitCall","open override fun visitCall(expression: IrCall): IrExpression","androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.visitCall"]},{"name":"open override fun visitCall(expression: IrCall): IrExpression","description":"androidx.compose.compiler.plugins.kotlin.lower.decoys.SubstituteDecoyCallsTransformer.visitCall","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower.decoys/-substitute-decoy-calls-transformer/visit-call.html","searchKeys":["visitCall","open override fun visitCall(expression: IrCall): IrExpression","androidx.compose.compiler.plugins.kotlin.lower.decoys.SubstituteDecoyCallsTransformer.visitCall"]},{"name":"open override fun visitClass(declaration: IrClass): IrClass","description":"androidx.compose.compiler.plugins.kotlin.lower.DeepCopyIrTreeWithSymbolsPreservingMetadata.visitClass","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-deep-copy-ir-tree-with-symbols-preserving-metadata/visit-class.html","searchKeys":["visitClass","open override fun visitClass(declaration: IrClass): IrClass","androidx.compose.compiler.plugins.kotlin.lower.DeepCopyIrTreeWithSymbolsPreservingMetadata.visitClass"]},{"name":"open override fun visitClass(declaration: IrClass): IrStatement","description":"androidx.compose.compiler.plugins.kotlin.lower.ClassStabilityTransformer.visitClass","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-class-stability-transformer/visit-class.html","searchKeys":["visitClass","open override fun visitClass(declaration: IrClass): IrStatement","androidx.compose.compiler.plugins.kotlin.lower.ClassStabilityTransformer.visitClass"]},{"name":"open override fun visitClass(declaration: IrClass): IrStatement","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.visitClass","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/visit-class.html","searchKeys":["visitClass","open override fun visitClass(declaration: IrClass): IrStatement","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.visitClass"]},{"name":"open override fun visitClass(declaration: IrClass): IrStatement","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposerLambdaMemoization.visitClass","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composer-lambda-memoization/visit-class.html","searchKeys":["visitClass","open override fun visitClass(declaration: IrClass): IrStatement","androidx.compose.compiler.plugins.kotlin.lower.ComposerLambdaMemoization.visitClass"]},{"name":"open override fun visitClass(declaration: IrClass): IrStatement","description":"androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.visitClass","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-live-literal-transformer/visit-class.html","searchKeys":["visitClass","open override fun visitClass(declaration: IrClass): IrStatement","androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.visitClass"]},{"name":"open override fun visitComposite(expression: IrComposite): IrExpression","description":"androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.visitComposite","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-live-literal-transformer/visit-composite.html","searchKeys":["visitComposite","open override fun visitComposite(expression: IrComposite): IrExpression","androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.visitComposite"]},{"name":"open override fun visitConstructor(declaration: IrConstructor): IrConstructor","description":"androidx.compose.compiler.plugins.kotlin.lower.DeepCopyIrTreeWithSymbolsPreservingMetadata.visitConstructor","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-deep-copy-ir-tree-with-symbols-preserving-metadata/visit-constructor.html","searchKeys":["visitConstructor","open override fun visitConstructor(declaration: IrConstructor): IrConstructor","androidx.compose.compiler.plugins.kotlin.lower.DeepCopyIrTreeWithSymbolsPreservingMetadata.visitConstructor"]},{"name":"open override fun visitConstructor(declaration: IrConstructor): IrStatement","description":"androidx.compose.compiler.plugins.kotlin.lower.decoys.CreateDecoysTransformer.visitConstructor","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower.decoys/-create-decoys-transformer/visit-constructor.html","searchKeys":["visitConstructor","open override fun visitConstructor(declaration: IrConstructor): IrStatement","androidx.compose.compiler.plugins.kotlin.lower.decoys.CreateDecoysTransformer.visitConstructor"]},{"name":"open override fun visitConstructorCall(expression: IrConstructorCall): IrConstructorCall","description":"androidx.compose.compiler.plugins.kotlin.lower.DeepCopyIrTreeWithSymbolsPreservingMetadata.visitConstructorCall","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-deep-copy-ir-tree-with-symbols-preserving-metadata/visit-constructor-call.html","searchKeys":["visitConstructorCall","open override fun visitConstructorCall(expression: IrConstructorCall): IrConstructorCall","androidx.compose.compiler.plugins.kotlin.lower.DeepCopyIrTreeWithSymbolsPreservingMetadata.visitConstructorCall"]},{"name":"open override fun visitConstructorCall(expression: IrConstructorCall): IrExpression","description":"androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.visitConstructorCall","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-live-literal-transformer/visit-constructor-call.html","searchKeys":["visitConstructorCall","open override fun visitConstructorCall(expression: IrConstructorCall): IrExpression","androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.visitConstructorCall"]},{"name":"open override fun visitConstructorCall(expression: IrConstructorCall): IrExpression","description":"androidx.compose.compiler.plugins.kotlin.lower.decoys.SubstituteDecoyCallsTransformer.visitConstructorCall","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower.decoys/-substitute-decoy-calls-transformer/visit-constructor-call.html","searchKeys":["visitConstructorCall","open override fun visitConstructorCall(expression: IrConstructorCall): IrExpression","androidx.compose.compiler.plugins.kotlin.lower.decoys.SubstituteDecoyCallsTransformer.visitConstructorCall"]},{"name":"open override fun visitDeclaration(declaration: IrDeclarationBase): IrStatement","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.visitDeclaration","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/visit-declaration.html","searchKeys":["visitDeclaration","open override fun visitDeclaration(declaration: IrDeclarationBase): IrStatement","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.visitDeclaration"]},{"name":"open override fun visitDeclaration(declaration: IrDeclarationBase): IrStatement","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposerLambdaMemoization.visitDeclaration","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composer-lambda-memoization/visit-declaration.html","searchKeys":["visitDeclaration","open override fun visitDeclaration(declaration: IrDeclarationBase): IrStatement","androidx.compose.compiler.plugins.kotlin.lower.ComposerLambdaMemoization.visitDeclaration"]},{"name":"open override fun visitDelegatingConstructorCall(expression: IrDelegatingConstructorCall): IrExpression","description":"androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.visitDelegatingConstructorCall","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-live-literal-transformer/visit-delegating-constructor-call.html","searchKeys":["visitDelegatingConstructorCall","open override fun visitDelegatingConstructorCall(expression: IrDelegatingConstructorCall): IrExpression","androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.visitDelegatingConstructorCall"]},{"name":"open override fun visitDelegatingConstructorCall(expression: IrDelegatingConstructorCall): IrExpression","description":"androidx.compose.compiler.plugins.kotlin.lower.decoys.SubstituteDecoyCallsTransformer.visitDelegatingConstructorCall","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower.decoys/-substitute-decoy-calls-transformer/visit-delegating-constructor-call.html","searchKeys":["visitDelegatingConstructorCall","open override fun visitDelegatingConstructorCall(expression: IrDelegatingConstructorCall): IrExpression","androidx.compose.compiler.plugins.kotlin.lower.decoys.SubstituteDecoyCallsTransformer.visitDelegatingConstructorCall"]},{"name":"open override fun visitDoWhileLoop(loop: IrDoWhileLoop): IrExpression","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.visitDoWhileLoop","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/visit-do-while-loop.html","searchKeys":["visitDoWhileLoop","open override fun visitDoWhileLoop(loop: IrDoWhileLoop): IrExpression","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.visitDoWhileLoop"]},{"name":"open override fun visitElseBranch(branch: IrElseBranch): IrElseBranch","description":"androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.visitElseBranch","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-live-literal-transformer/visit-else-branch.html","searchKeys":["visitElseBranch","open override fun visitElseBranch(branch: IrElseBranch): IrElseBranch","androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.visitElseBranch"]},{"name":"open override fun visitEnumConstructorCall(expression: IrEnumConstructorCall): IrExpression","description":"androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.visitEnumConstructorCall","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-live-literal-transformer/visit-enum-constructor-call.html","searchKeys":["visitEnumConstructorCall","open override fun visitEnumConstructorCall(expression: IrEnumConstructorCall): IrExpression","androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.visitEnumConstructorCall"]},{"name":"open override fun visitEnumEntry(declaration: IrEnumEntry): IrStatement","description":"androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.visitEnumEntry","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-live-literal-transformer/visit-enum-entry.html","searchKeys":["visitEnumEntry","open override fun visitEnumEntry(declaration: IrEnumEntry): IrStatement","androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.visitEnumEntry"]},{"name":"open override fun visitField(declaration: IrField): IrField","description":"androidx.compose.compiler.plugins.kotlin.lower.DeepCopyIrTreeWithSymbolsPreservingMetadata.visitField","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-deep-copy-ir-tree-with-symbols-preserving-metadata/visit-field.html","searchKeys":["visitField","open override fun visitField(declaration: IrField): IrField","androidx.compose.compiler.plugins.kotlin.lower.DeepCopyIrTreeWithSymbolsPreservingMetadata.visitField"]},{"name":"open override fun visitField(declaration: IrField): IrStatement","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.visitField","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/visit-field.html","searchKeys":["visitField","open override fun visitField(declaration: IrField): IrStatement","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.visitField"]},{"name":"open override fun visitFile(declaration: IrFile): IrFile","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.visitFile","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/visit-file.html","searchKeys":["visitFile","open override fun visitFile(declaration: IrFile): IrFile","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.visitFile"]},{"name":"open override fun visitFile(declaration: IrFile): IrFile","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposerLambdaMemoization.visitFile","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composer-lambda-memoization/visit-file.html","searchKeys":["visitFile","open override fun visitFile(declaration: IrFile): IrFile","androidx.compose.compiler.plugins.kotlin.lower.ComposerLambdaMemoization.visitFile"]},{"name":"open override fun visitFile(declaration: IrFile): IrFile","description":"androidx.compose.compiler.plugins.kotlin.lower.DeepCopyIrTreeWithSymbolsPreservingMetadata.visitFile","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-deep-copy-ir-tree-with-symbols-preserving-metadata/visit-file.html","searchKeys":["visitFile","open override fun visitFile(declaration: IrFile): IrFile","androidx.compose.compiler.plugins.kotlin.lower.DeepCopyIrTreeWithSymbolsPreservingMetadata.visitFile"]},{"name":"open override fun visitFile(declaration: IrFile): IrFile","description":"androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.visitFile","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-live-literal-transformer/visit-file.html","searchKeys":["visitFile","open override fun visitFile(declaration: IrFile): IrFile","androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.visitFile"]},{"name":"open override fun visitFunction(declaration: IrFunction): IrStatement","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.visitFunction","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/visit-function.html","searchKeys":["visitFunction","open override fun visitFunction(declaration: IrFunction): IrStatement","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.visitFunction"]},{"name":"open override fun visitFunction(declaration: IrFunction): IrStatement","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposerLambdaMemoization.visitFunction","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composer-lambda-memoization/visit-function.html","searchKeys":["visitFunction","open override fun visitFunction(declaration: IrFunction): IrStatement","androidx.compose.compiler.plugins.kotlin.lower.ComposerLambdaMemoization.visitFunction"]},{"name":"open override fun visitFunction(declaration: IrFunction): IrStatement","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposerParamTransformer.visitFunction","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composer-param-transformer/visit-function.html","searchKeys":["visitFunction","open override fun visitFunction(declaration: IrFunction): IrStatement","androidx.compose.compiler.plugins.kotlin.lower.ComposerParamTransformer.visitFunction"]},{"name":"open override fun visitFunction(declaration: IrFunction): IrStatement","description":"androidx.compose.compiler.plugins.kotlin.lower.DeepCopyIrTreeWithSymbolsPreservingMetadata.visitFunction","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-deep-copy-ir-tree-with-symbols-preserving-metadata/visit-function.html","searchKeys":["visitFunction","open override fun visitFunction(declaration: IrFunction): IrStatement","androidx.compose.compiler.plugins.kotlin.lower.DeepCopyIrTreeWithSymbolsPreservingMetadata.visitFunction"]},{"name":"open override fun visitFunction(declaration: IrFunction): IrStatement","description":"androidx.compose.compiler.plugins.kotlin.lower.KlibAssignableParamTransformer.visitFunction","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-klib-assignable-param-transformer/visit-function.html","searchKeys":["visitFunction","open override fun visitFunction(declaration: IrFunction): IrStatement","androidx.compose.compiler.plugins.kotlin.lower.KlibAssignableParamTransformer.visitFunction"]},{"name":"open override fun visitFunction(declaration: IrFunction): IrStatement","description":"androidx.compose.compiler.plugins.kotlin.lower.decoys.RecordDecoySignaturesTransformer.visitFunction","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower.decoys/-record-decoy-signatures-transformer/visit-function.html","searchKeys":["visitFunction","open override fun visitFunction(declaration: IrFunction): IrStatement","androidx.compose.compiler.plugins.kotlin.lower.decoys.RecordDecoySignaturesTransformer.visitFunction"]},{"name":"open override fun visitFunctionExpression(expression: IrFunctionExpression): IrExpression","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposerLambdaMemoization.visitFunctionExpression","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composer-lambda-memoization/visit-function-expression.html","searchKeys":["visitFunctionExpression","open override fun visitFunctionExpression(expression: IrFunctionExpression): IrExpression","androidx.compose.compiler.plugins.kotlin.lower.ComposerLambdaMemoization.visitFunctionExpression"]},{"name":"open override fun visitFunctionReference(expression: IrFunctionReference): IrExpression","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposerLambdaMemoization.visitFunctionReference","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composer-lambda-memoization/visit-function-reference.html","searchKeys":["visitFunctionReference","open override fun visitFunctionReference(expression: IrFunctionReference): IrExpression","androidx.compose.compiler.plugins.kotlin.lower.ComposerLambdaMemoization.visitFunctionReference"]},{"name":"open override fun visitFunctionReference(expression: IrFunctionReference): IrExpression","description":"androidx.compose.compiler.plugins.kotlin.lower.decoys.SubstituteDecoyCallsTransformer.visitFunctionReference","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower.decoys/-substitute-decoy-calls-transformer/visit-function-reference.html","searchKeys":["visitFunctionReference","open override fun visitFunctionReference(expression: IrFunctionReference): IrExpression","androidx.compose.compiler.plugins.kotlin.lower.decoys.SubstituteDecoyCallsTransformer.visitFunctionReference"]},{"name":"open override fun visitGetValue(expression: IrGetValue): IrExpression","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.visitGetValue","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/visit-get-value.html","searchKeys":["visitGetValue","open override fun visitGetValue(expression: IrGetValue): IrExpression","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.visitGetValue"]},{"name":"open override fun visitLoop(loop: IrLoop): IrExpression","description":"androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.visitLoop","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-live-literal-transformer/visit-loop.html","searchKeys":["visitLoop","open override fun visitLoop(loop: IrLoop): IrExpression","androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.visitLoop"]},{"name":"open override fun visitProperty(declaration: IrProperty): IrProperty","description":"androidx.compose.compiler.plugins.kotlin.lower.DeepCopyIrTreeWithSymbolsPreservingMetadata.visitProperty","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-deep-copy-ir-tree-with-symbols-preserving-metadata/visit-property.html","searchKeys":["visitProperty","open override fun visitProperty(declaration: IrProperty): IrProperty","androidx.compose.compiler.plugins.kotlin.lower.DeepCopyIrTreeWithSymbolsPreservingMetadata.visitProperty"]},{"name":"open override fun visitProperty(declaration: IrProperty): IrStatement","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.visitProperty","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/visit-property.html","searchKeys":["visitProperty","open override fun visitProperty(declaration: IrProperty): IrStatement","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.visitProperty"]},{"name":"open override fun visitProperty(declaration: IrProperty): IrStatement","description":"androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.visitProperty","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-live-literal-transformer/visit-property.html","searchKeys":["visitProperty","open override fun visitProperty(declaration: IrProperty): IrStatement","androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.visitProperty"]},{"name":"open override fun visitReturn(expression: IrReturn): IrExpression","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.visitReturn","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/visit-return.html","searchKeys":["visitReturn","open override fun visitReturn(expression: IrReturn): IrExpression","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.visitReturn"]},{"name":"open override fun visitSetField(expression: IrSetField): IrExpression","description":"androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.visitSetField","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-live-literal-transformer/visit-set-field.html","searchKeys":["visitSetField","open override fun visitSetField(expression: IrSetField): IrExpression","androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.visitSetField"]},{"name":"open override fun visitSetValue(expression: IrSetValue): IrExpression","description":"androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.visitSetValue","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-live-literal-transformer/visit-set-value.html","searchKeys":["visitSetValue","open override fun visitSetValue(expression: IrSetValue): IrExpression","androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.visitSetValue"]},{"name":"open override fun visitSimpleFunction(declaration: IrSimpleFunction): IrSimpleFunction","description":"androidx.compose.compiler.plugins.kotlin.lower.DeepCopyIrTreeWithSymbolsPreservingMetadata.visitSimpleFunction","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-deep-copy-ir-tree-with-symbols-preserving-metadata/visit-simple-function.html","searchKeys":["visitSimpleFunction","open override fun visitSimpleFunction(declaration: IrSimpleFunction): IrSimpleFunction","androidx.compose.compiler.plugins.kotlin.lower.DeepCopyIrTreeWithSymbolsPreservingMetadata.visitSimpleFunction"]},{"name":"open override fun visitSimpleFunction(declaration: IrSimpleFunction): IrStatement","description":"androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.visitSimpleFunction","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-live-literal-transformer/visit-simple-function.html","searchKeys":["visitSimpleFunction","open override fun visitSimpleFunction(declaration: IrSimpleFunction): IrStatement","androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.visitSimpleFunction"]},{"name":"open override fun visitSimpleFunction(declaration: IrSimpleFunction): IrStatement","description":"androidx.compose.compiler.plugins.kotlin.lower.decoys.CreateDecoysTransformer.visitSimpleFunction","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower.decoys/-create-decoys-transformer/visit-simple-function.html","searchKeys":["visitSimpleFunction","open override fun visitSimpleFunction(declaration: IrSimpleFunction): IrStatement","androidx.compose.compiler.plugins.kotlin.lower.decoys.CreateDecoysTransformer.visitSimpleFunction"]},{"name":"open override fun visitSimpleFunction(declaration: IrSimpleFunction): IrStatement","description":"androidx.compose.compiler.plugins.kotlin.lower.decoys.SubstituteDecoyCallsTransformer.visitSimpleFunction","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower.decoys/-substitute-decoy-calls-transformer/visit-simple-function.html","searchKeys":["visitSimpleFunction","open override fun visitSimpleFunction(declaration: IrSimpleFunction): IrStatement","androidx.compose.compiler.plugins.kotlin.lower.decoys.SubstituteDecoyCallsTransformer.visitSimpleFunction"]},{"name":"open override fun visitStringConcatenation(expression: IrStringConcatenation): IrExpression","description":"androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.visitStringConcatenation","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-live-literal-transformer/visit-string-concatenation.html","searchKeys":["visitStringConcatenation","open override fun visitStringConcatenation(expression: IrStringConcatenation): IrExpression","androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.visitStringConcatenation"]},{"name":"open override fun visitTry(aTry: IrTry): IrExpression","description":"androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.visitTry","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-live-literal-transformer/visit-try.html","searchKeys":["visitTry","open override fun visitTry(aTry: IrTry): IrExpression","androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.visitTry"]},{"name":"open override fun visitTypeOperator(expression: IrTypeOperatorCall): IrExpression","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunInterfaceLowering.visitTypeOperator","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-fun-interface-lowering/visit-type-operator.html","searchKeys":["visitTypeOperator","open override fun visitTypeOperator(expression: IrTypeOperatorCall): IrExpression","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunInterfaceLowering.visitTypeOperator"]},{"name":"open override fun visitValueAccess(expression: IrValueAccessExpression): IrExpression","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposerLambdaMemoization.visitValueAccess","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composer-lambda-memoization/visit-value-access.html","searchKeys":["visitValueAccess","open override fun visitValueAccess(expression: IrValueAccessExpression): IrExpression","androidx.compose.compiler.plugins.kotlin.lower.ComposerLambdaMemoization.visitValueAccess"]},{"name":"open override fun visitValueParameter(declaration: IrValueParameter): IrStatement","description":"androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.visitValueParameter","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-live-literal-transformer/visit-value-parameter.html","searchKeys":["visitValueParameter","open override fun visitValueParameter(declaration: IrValueParameter): IrStatement","androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.visitValueParameter"]},{"name":"open override fun visitVararg(expression: IrVararg): IrExpression","description":"androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.visitVararg","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-live-literal-transformer/visit-vararg.html","searchKeys":["visitVararg","open override fun visitVararg(expression: IrVararg): IrExpression","androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.visitVararg"]},{"name":"open override fun visitVariable(declaration: IrVariable): IrStatement","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposerLambdaMemoization.visitVariable","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composer-lambda-memoization/visit-variable.html","searchKeys":["visitVariable","open override fun visitVariable(declaration: IrVariable): IrStatement","androidx.compose.compiler.plugins.kotlin.lower.ComposerLambdaMemoization.visitVariable"]},{"name":"open override fun visitVariable(declaration: IrVariable): IrStatement","description":"androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.visitVariable","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-live-literal-transformer/visit-variable.html","searchKeys":["visitVariable","open override fun visitVariable(declaration: IrVariable): IrStatement","androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.visitVariable"]},{"name":"open override fun visitWhen(expression: IrWhen): IrExpression","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.visitWhen","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/visit-when.html","searchKeys":["visitWhen","open override fun visitWhen(expression: IrWhen): IrExpression","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.visitWhen"]},{"name":"open override fun visitWhen(expression: IrWhen): IrExpression","description":"androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.visitWhen","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-live-literal-transformer/visit-when.html","searchKeys":["visitWhen","open override fun visitWhen(expression: IrWhen): IrExpression","androidx.compose.compiler.plugins.kotlin.lower.LiveLiteralTransformer.visitWhen"]},{"name":"open override fun visitWhileLoop(loop: IrWhileLoop): IrExpression","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.visitWhileLoop","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/visit-while-loop.html","searchKeys":["visitWhileLoop","open override fun visitWhileLoop(loop: IrWhileLoop): IrExpression","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.visitWhileLoop"]},{"name":"open override val fileScope: ComposableFunctionBodyTransformer.Scope.FileScope?","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.FileScope.fileScope","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-file-scope/file-scope.html","searchKeys":["fileScope","open override val fileScope: ComposableFunctionBodyTransformer.Scope.FileScope?","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.FileScope.fileScope"]},{"name":"open override val functionScope: ComposableFunctionBodyTransformer.Scope.FunctionScope?","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.FunctionScope.functionScope","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-function-scope/function-scope.html","searchKeys":["functionScope","open override val functionScope: ComposableFunctionBodyTransformer.Scope.FunctionScope?","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.FunctionScope.functionScope"]},{"name":"open override val isInComposable: Boolean","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.BlockScope.isInComposable","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-block-scope/is-in-composable.html","searchKeys":["isInComposable","open override val isInComposable: Boolean","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.BlockScope.isInComposable"]},{"name":"open override val isInComposable: Boolean","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.FunctionScope.isInComposable","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-function-scope/is-in-composable.html","searchKeys":["isInComposable","open override val isInComposable: Boolean","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.FunctionScope.isInComposable"]},{"name":"open override val message: String","description":"androidx.compose.compiler.plugins.kotlin.IncompatibleComposeRuntimeVersionException.message","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-incompatible-compose-runtime-version-exception/message.html","searchKeys":["message","open override val message: String","androidx.compose.compiler.plugins.kotlin.IncompatibleComposeRuntimeVersionException.message"]},{"name":"open override val nearestComposer: IrValueParameter?","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.FunctionScope.nearestComposer","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-function-scope/nearest-composer.html","searchKeys":["nearestComposer","open override val nearestComposer: IrValueParameter?","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.FunctionScope.nearestComposer"]},{"name":"open override val pluginId: String","description":"androidx.compose.compiler.plugins.kotlin.ComposeCommandLineProcessor.pluginId","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-command-line-processor/plugin-id.html","searchKeys":["pluginId","open override val pluginId: String","androidx.compose.compiler.plugins.kotlin.ComposeCommandLineProcessor.pluginId"]},{"name":"open override val pluginOptions: List<CliOption>","description":"androidx.compose.compiler.plugins.kotlin.ComposeCommandLineProcessor.pluginOptions","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-command-line-processor/plugin-options.html","searchKeys":["pluginOptions","open override val pluginOptions: List<CliOption>","androidx.compose.compiler.plugins.kotlin.ComposeCommandLineProcessor.pluginOptions"]},{"name":"open override val signatureBuilder: IdSignatureSerializer","description":"androidx.compose.compiler.plugins.kotlin.lower.decoys.CreateDecoysTransformer.signatureBuilder","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower.decoys/-create-decoys-transformer/signature-builder.html","searchKeys":["signatureBuilder","open override val signatureBuilder: IdSignatureSerializer","androidx.compose.compiler.plugins.kotlin.lower.decoys.CreateDecoysTransformer.signatureBuilder"]},{"name":"open override val signatureBuilder: IdSignatureSerializer","description":"androidx.compose.compiler.plugins.kotlin.lower.decoys.RecordDecoySignaturesTransformer.signatureBuilder","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower.decoys/-record-decoy-signatures-transformer/signature-builder.html","searchKeys":["signatureBuilder","open override val signatureBuilder: IdSignatureSerializer","androidx.compose.compiler.plugins.kotlin.lower.decoys.RecordDecoySignaturesTransformer.signatureBuilder"]},{"name":"open override val signatureBuilder: IdSignatureSerializer","description":"androidx.compose.compiler.plugins.kotlin.lower.decoys.SubstituteDecoyCallsTransformer.signatureBuilder","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower.decoys/-substitute-decoy-calls-transformer/signature-builder.html","searchKeys":["signatureBuilder","open override val signatureBuilder: IdSignatureSerializer","androidx.compose.compiler.plugins.kotlin.lower.decoys.SubstituteDecoyCallsTransformer.signatureBuilder"]},{"name":"open override var used: Boolean = false","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.IrChangedBitMaskValueImpl.used","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-ir-changed-bit-mask-value-impl/used.html","searchKeys":["used","open override var used: Boolean = false","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.IrChangedBitMaskValueImpl.used"]},{"name":"open val fileScope: ComposableFunctionBodyTransformer.Scope.FileScope?","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.fileScope","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/file-scope.html","searchKeys":["fileScope","open val fileScope: ComposableFunctionBodyTransformer.Scope.FileScope?","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.fileScope"]},{"name":"open val functionScope: ComposableFunctionBodyTransformer.Scope.FunctionScope?","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.functionScope","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/function-scope.html","searchKeys":["functionScope","open val functionScope: ComposableFunctionBodyTransformer.Scope.FunctionScope?","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.functionScope"]},{"name":"open val isInComposable: Boolean","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.isInComposable","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/is-in-composable.html","searchKeys":["isInComposable","open val isInComposable: Boolean","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.isInComposable"]},{"name":"open val nearestComposer: IrValueParameter?","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.nearestComposer","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/nearest-composer.html","searchKeys":["nearestComposer","open val nearestComposer: IrValueParameter?","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.nearestComposer"]},{"name":"open val repeatable: Boolean","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.SourceLocation.repeatable","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-source-location/repeatable.html","searchKeys":["repeatable","open val repeatable: Boolean","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.SourceLocation.repeatable"]},{"name":"operator fun <K : IrAttributeContainer, V> get(slice: ReadOnlySlice<K, V>, key: K): V?","description":"androidx.compose.compiler.plugins.kotlin.WeakBindingTrace.get","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-weak-binding-trace/get.html","searchKeys":["get","operator fun <K : IrAttributeContainer, V> get(slice: ReadOnlySlice<K, V>, key: K): V?","androidx.compose.compiler.plugins.kotlin.WeakBindingTrace.get"]},{"name":"operator fun plus(other: List<Stability>): Stability","description":"androidx.compose.compiler.plugins.kotlin.analysis.Stability.plus","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.analysis/-stability/plus.html","searchKeys":["plus","operator fun plus(other: List<Stability>): Stability","androidx.compose.compiler.plugins.kotlin.analysis.Stability.plus"]},{"name":"operator fun plus(other: Stability): Stability","description":"androidx.compose.compiler.plugins.kotlin.analysis.Stability.plus","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.analysis/-stability/plus.html","searchKeys":["plus","operator fun plus(other: Stability): Stability","androidx.compose.compiler.plugins.kotlin.analysis.Stability.plus"]},{"name":"sealed class Scope","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/index.html","searchKeys":["Scope","sealed class Scope","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope"]},{"name":"sealed class Stability","description":"androidx.compose.compiler.plugins.kotlin.analysis.Stability","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.analysis/-stability/index.html","searchKeys":["Stability","sealed class Stability","androidx.compose.compiler.plugins.kotlin.analysis.Stability"]},{"name":"val AnnotationDescriptor.isComposableAnnotation: Boolean","description":"androidx.compose.compiler.plugins.kotlin.isComposableAnnotation","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/is-composable-annotation.html","searchKeys":["isComposableAnnotation","val AnnotationDescriptor.isComposableAnnotation: Boolean","androidx.compose.compiler.plugins.kotlin.isComposableAnnotation"]},{"name":"val CAPTURED_COMPOSABLE_INVOCATION: DiagnosticFactory2<PsiElement, DeclarationDescriptor, DeclarationDescriptor>","description":"androidx.compose.compiler.plugins.kotlin.ComposeErrors.CAPTURED_COMPOSABLE_INVOCATION","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-errors/-c-a-p-t-u-r-e-d_-c-o-m-p-o-s-a-b-l-e_-i-n-v-o-c-a-t-i-o-n.html","searchKeys":["CAPTURED_COMPOSABLE_INVOCATION","val CAPTURED_COMPOSABLE_INVOCATION: DiagnosticFactory2<PsiElement, DeclarationDescriptor, DeclarationDescriptor>","androidx.compose.compiler.plugins.kotlin.ComposeErrors.CAPTURED_COMPOSABLE_INVOCATION"]},{"name":"val CHANGED_PARAMETER: Name","description":"androidx.compose.compiler.plugins.kotlin.KtxNameConventions.CHANGED_PARAMETER","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-ktx-name-conventions/-c-h-a-n-g-e-d_-p-a-r-a-m-e-t-e-r.html","searchKeys":["CHANGED_PARAMETER","val CHANGED_PARAMETER: Name","androidx.compose.compiler.plugins.kotlin.KtxNameConventions.CHANGED_PARAMETER"]},{"name":"val COMPOSABLE_EXPECTED: DiagnosticFactory0<PsiElement>","description":"androidx.compose.compiler.plugins.kotlin.ComposeErrors.COMPOSABLE_EXPECTED","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-errors/-c-o-m-p-o-s-a-b-l-e_-e-x-p-e-c-t-e-d.html","searchKeys":["COMPOSABLE_EXPECTED","val COMPOSABLE_EXPECTED: DiagnosticFactory0<PsiElement>","androidx.compose.compiler.plugins.kotlin.ComposeErrors.COMPOSABLE_EXPECTED"]},{"name":"val COMPOSABLE_FUNCTION_REFERENCE: DiagnosticFactory0<KtCallableReferenceExpression>","description":"androidx.compose.compiler.plugins.kotlin.ComposeErrors.COMPOSABLE_FUNCTION_REFERENCE","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-errors/-c-o-m-p-o-s-a-b-l-e_-f-u-n-c-t-i-o-n_-r-e-f-e-r-e-n-c-e.html","searchKeys":["COMPOSABLE_FUNCTION_REFERENCE","val COMPOSABLE_FUNCTION_REFERENCE: DiagnosticFactory0<KtCallableReferenceExpression>","androidx.compose.compiler.plugins.kotlin.ComposeErrors.COMPOSABLE_FUNCTION_REFERENCE"]},{"name":"val COMPOSABLE_FUN_MAIN: DiagnosticFactory0<PsiElement>","description":"androidx.compose.compiler.plugins.kotlin.ComposeErrors.COMPOSABLE_FUN_MAIN","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-errors/-c-o-m-p-o-s-a-b-l-e_-f-u-n_-m-a-i-n.html","searchKeys":["COMPOSABLE_FUN_MAIN","val COMPOSABLE_FUN_MAIN: DiagnosticFactory0<PsiElement>","androidx.compose.compiler.plugins.kotlin.ComposeErrors.COMPOSABLE_FUN_MAIN"]},{"name":"val COMPOSABLE_INVOCATION: DiagnosticFactory0<PsiElement>","description":"androidx.compose.compiler.plugins.kotlin.ComposeErrors.COMPOSABLE_INVOCATION","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-errors/-c-o-m-p-o-s-a-b-l-e_-i-n-v-o-c-a-t-i-o-n.html","searchKeys":["COMPOSABLE_INVOCATION","val COMPOSABLE_INVOCATION: DiagnosticFactory0<PsiElement>","androidx.compose.compiler.plugins.kotlin.ComposeErrors.COMPOSABLE_INVOCATION"]},{"name":"val COMPOSABLE_PROPERTY_BACKING_FIELD: DiagnosticFactory0<PsiElement>","description":"androidx.compose.compiler.plugins.kotlin.ComposeErrors.COMPOSABLE_PROPERTY_BACKING_FIELD","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-errors/-c-o-m-p-o-s-a-b-l-e_-p-r-o-p-e-r-t-y_-b-a-c-k-i-n-g_-f-i-e-l-d.html","searchKeys":["COMPOSABLE_PROPERTY_BACKING_FIELD","val COMPOSABLE_PROPERTY_BACKING_FIELD: DiagnosticFactory0<PsiElement>","androidx.compose.compiler.plugins.kotlin.ComposeErrors.COMPOSABLE_PROPERTY_BACKING_FIELD"]},{"name":"val COMPOSABLE_SUSPEND_FUN: DiagnosticFactory0<PsiElement>","description":"androidx.compose.compiler.plugins.kotlin.ComposeErrors.COMPOSABLE_SUSPEND_FUN","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-errors/-c-o-m-p-o-s-a-b-l-e_-s-u-s-p-e-n-d_-f-u-n.html","searchKeys":["COMPOSABLE_SUSPEND_FUN","val COMPOSABLE_SUSPEND_FUN: DiagnosticFactory0<PsiElement>","androidx.compose.compiler.plugins.kotlin.ComposeErrors.COMPOSABLE_SUSPEND_FUN"]},{"name":"val COMPOSABLE_VAR: DiagnosticFactory0<PsiElement>","description":"androidx.compose.compiler.plugins.kotlin.ComposeErrors.COMPOSABLE_VAR","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-errors/-c-o-m-p-o-s-a-b-l-e_-v-a-r.html","searchKeys":["COMPOSABLE_VAR","val COMPOSABLE_VAR: DiagnosticFactory0<PsiElement>","androidx.compose.compiler.plugins.kotlin.ComposeErrors.COMPOSABLE_VAR"]},{"name":"val COMPOSER: Name","description":"androidx.compose.compiler.plugins.kotlin.KtxNameConventions.COMPOSER","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-ktx-name-conventions/-c-o-m-p-o-s-e-r.html","searchKeys":["COMPOSER","val COMPOSER: Name","androidx.compose.compiler.plugins.kotlin.KtxNameConventions.COMPOSER"]},{"name":"val COMPOSER_PARAMETER: Name","description":"androidx.compose.compiler.plugins.kotlin.KtxNameConventions.COMPOSER_PARAMETER","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-ktx-name-conventions/-c-o-m-p-o-s-e-r_-p-a-r-a-m-e-t-e-r.html","searchKeys":["COMPOSER_PARAMETER","val COMPOSER_PARAMETER: Name","androidx.compose.compiler.plugins.kotlin.KtxNameConventions.COMPOSER_PARAMETER"]},{"name":"val Composable: FqName","description":"androidx.compose.compiler.plugins.kotlin.ComposeFqNames.Composable","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-fq-names/-composable.html","searchKeys":["Composable","val Composable: FqName","androidx.compose.compiler.plugins.kotlin.ComposeFqNames.Composable"]},{"name":"val ComposeVersion: FqName","description":"androidx.compose.compiler.plugins.kotlin.ComposeFqNames.ComposeVersion","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-fq-names/-compose-version.html","searchKeys":["ComposeVersion","val ComposeVersion: FqName","androidx.compose.compiler.plugins.kotlin.ComposeFqNames.ComposeVersion"]},{"name":"val Composer: FqName","description":"androidx.compose.compiler.plugins.kotlin.ComposeFqNames.Composer","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-fq-names/-composer.html","searchKeys":["Composer","val Composer: FqName","androidx.compose.compiler.plugins.kotlin.ComposeFqNames.Composer"]},{"name":"val CurrentComposerIntrinsic: FqName","description":"androidx.compose.compiler.plugins.kotlin.ComposeFqNames.CurrentComposerIntrinsic","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-fq-names/-current-composer-intrinsic.html","searchKeys":["CurrentComposerIntrinsic","val CurrentComposerIntrinsic: FqName","androidx.compose.compiler.plugins.kotlin.ComposeFqNames.CurrentComposerIntrinsic"]},{"name":"val CurrentComposerIntrinsic: FqName","description":"androidx.compose.compiler.plugins.kotlin.lower.decoys.DecoyFqNames.CurrentComposerIntrinsic","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower.decoys/-decoy-fq-names/-current-composer-intrinsic.html","searchKeys":["CurrentComposerIntrinsic","val CurrentComposerIntrinsic: FqName","androidx.compose.compiler.plugins.kotlin.lower.decoys.DecoyFqNames.CurrentComposerIntrinsic"]},{"name":"val DECOYS_ENABLED_KEY: CompilerConfigurationKey<Boolean>","description":"androidx.compose.compiler.plugins.kotlin.ComposeConfiguration.DECOYS_ENABLED_KEY","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-configuration/-d-e-c-o-y-s_-e-n-a-b-l-e-d_-k-e-y.html","searchKeys":["DECOYS_ENABLED_KEY","val DECOYS_ENABLED_KEY: CompilerConfigurationKey<Boolean>","androidx.compose.compiler.plugins.kotlin.ComposeConfiguration.DECOYS_ENABLED_KEY"]},{"name":"val DECOYS_ENABLED_OPTION: CliOption","description":"androidx.compose.compiler.plugins.kotlin.ComposeCommandLineProcessor.Companion.DECOYS_ENABLED_OPTION","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-command-line-processor/-companion/-d-e-c-o-y-s_-e-n-a-b-l-e-d_-o-p-t-i-o-n.html","searchKeys":["DECOYS_ENABLED_OPTION","val DECOYS_ENABLED_OPTION: CliOption","androidx.compose.compiler.plugins.kotlin.ComposeCommandLineProcessor.Companion.DECOYS_ENABLED_OPTION"]},{"name":"val DEFAULT_PARAMETER: Name","description":"androidx.compose.compiler.plugins.kotlin.KtxNameConventions.DEFAULT_PARAMETER","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-ktx-name-conventions/-d-e-f-a-u-l-t_-p-a-r-a-m-e-t-e-r.html","searchKeys":["DEFAULT_PARAMETER","val DEFAULT_PARAMETER: Name","androidx.compose.compiler.plugins.kotlin.KtxNameConventions.DEFAULT_PARAMETER"]},{"name":"val DeclarationDescriptorWithSource.endOffset: Int?","description":"androidx.compose.compiler.plugins.kotlin.lower.endOffset","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/end-offset.html","searchKeys":["endOffset","val DeclarationDescriptorWithSource.endOffset: Int?","androidx.compose.compiler.plugins.kotlin.lower.endOffset"]},{"name":"val DeclarationDescriptorWithSource.startOffset: Int?","description":"androidx.compose.compiler.plugins.kotlin.lower.startOffset","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/start-offset.html","searchKeys":["startOffset","val DeclarationDescriptorWithSource.startOffset: Int?","androidx.compose.compiler.plugins.kotlin.lower.startOffset"]},{"name":"val Decoy: FqName","description":"androidx.compose.compiler.plugins.kotlin.lower.decoys.DecoyFqNames.Decoy","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower.decoys/-decoy-fq-names/-decoy.html","searchKeys":["Decoy","val Decoy: FqName","androidx.compose.compiler.plugins.kotlin.lower.decoys.DecoyFqNames.Decoy"]},{"name":"val DecoyImplementation: FqName","description":"androidx.compose.compiler.plugins.kotlin.lower.decoys.DecoyFqNames.DecoyImplementation","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower.decoys/-decoy-fq-names/-decoy-implementation.html","searchKeys":["DecoyImplementation","val DecoyImplementation: FqName","androidx.compose.compiler.plugins.kotlin.lower.decoys.DecoyFqNames.DecoyImplementation"]},{"name":"val DisallowComposableCalls: FqName","description":"androidx.compose.compiler.plugins.kotlin.ComposeFqNames.DisallowComposableCalls","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-fq-names/-disallow-composable-calls.html","searchKeys":["DisallowComposableCalls","val DisallowComposableCalls: FqName","androidx.compose.compiler.plugins.kotlin.ComposeFqNames.DisallowComposableCalls"]},{"name":"val ENDRESTARTGROUP: Name","description":"androidx.compose.compiler.plugins.kotlin.KtxNameConventions.ENDRESTARTGROUP","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-ktx-name-conventions/-e-n-d-r-e-s-t-a-r-t-g-r-o-u-p.html","searchKeys":["ENDRESTARTGROUP","val ENDRESTARTGROUP: Name","androidx.compose.compiler.plugins.kotlin.KtxNameConventions.ENDRESTARTGROUP"]},{"name":"val ExplicitGroupsComposable: FqName","description":"androidx.compose.compiler.plugins.kotlin.ComposeFqNames.ExplicitGroupsComposable","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-fq-names/-explicit-groups-composable.html","searchKeys":["ExplicitGroupsComposable","val ExplicitGroupsComposable: FqName","androidx.compose.compiler.plugins.kotlin.ComposeFqNames.ExplicitGroupsComposable"]},{"name":"val GenerationState.irTrace: WeakBindingTrace","description":"androidx.compose.compiler.plugins.kotlin.irTrace","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/ir-trace.html","searchKeys":["irTrace","val GenerationState.irTrace: WeakBindingTrace","androidx.compose.compiler.plugins.kotlin.irTrace"]},{"name":"val GeneratorContext.irTrace: WeakBindingTrace","description":"androidx.compose.compiler.plugins.kotlin.irTrace","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/ir-trace.html","searchKeys":["irTrace","val GeneratorContext.irTrace: WeakBindingTrace","androidx.compose.compiler.plugins.kotlin.irTrace"]},{"name":"val ILLEGAL_TRY_CATCH_AROUND_COMPOSABLE: DiagnosticFactory0<PsiElement>","description":"androidx.compose.compiler.plugins.kotlin.ComposeErrors.ILLEGAL_TRY_CATCH_AROUND_COMPOSABLE","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-errors/-i-l-l-e-g-a-l_-t-r-y_-c-a-t-c-h_-a-r-o-u-n-d_-c-o-m-p-o-s-a-b-l-e.html","searchKeys":["ILLEGAL_TRY_CATCH_AROUND_COMPOSABLE","val ILLEGAL_TRY_CATCH_AROUND_COMPOSABLE: DiagnosticFactory0<PsiElement>","androidx.compose.compiler.plugins.kotlin.ComposeErrors.ILLEGAL_TRY_CATCH_AROUND_COMPOSABLE"]},{"name":"val INFERRED_COMPOSABLE_DESCRIPTOR: WritableSlice<FunctionDescriptor, Boolean>","description":"androidx.compose.compiler.plugins.kotlin.analysis.ComposeWritableSlices.INFERRED_COMPOSABLE_DESCRIPTOR","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.analysis/-compose-writable-slices/-i-n-f-e-r-r-e-d_-c-o-m-p-o-s-a-b-l-e_-d-e-s-c-r-i-p-t-o-r.html","searchKeys":["INFERRED_COMPOSABLE_DESCRIPTOR","val INFERRED_COMPOSABLE_DESCRIPTOR: WritableSlice<FunctionDescriptor, Boolean>","androidx.compose.compiler.plugins.kotlin.analysis.ComposeWritableSlices.INFERRED_COMPOSABLE_DESCRIPTOR"]},{"name":"val INFERRED_COMPOSABLE_LITERAL: WritableSlice<KtLambdaExpression, Boolean>","description":"androidx.compose.compiler.plugins.kotlin.analysis.ComposeWritableSlices.INFERRED_COMPOSABLE_LITERAL","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.analysis/-compose-writable-slices/-i-n-f-e-r-r-e-d_-c-o-m-p-o-s-a-b-l-e_-l-i-t-e-r-a-l.html","searchKeys":["INFERRED_COMPOSABLE_LITERAL","val INFERRED_COMPOSABLE_LITERAL: WritableSlice<KtLambdaExpression, Boolean>","androidx.compose.compiler.plugins.kotlin.analysis.ComposeWritableSlices.INFERRED_COMPOSABLE_LITERAL"]},{"name":"val INTRINSIC_REMEMBER_OPTIMIZATION_ENABLED_KEY: CompilerConfigurationKey<Boolean>","description":"androidx.compose.compiler.plugins.kotlin.ComposeConfiguration.INTRINSIC_REMEMBER_OPTIMIZATION_ENABLED_KEY","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-configuration/-i-n-t-r-i-n-s-i-c_-r-e-m-e-m-b-e-r_-o-p-t-i-m-i-z-a-t-i-o-n_-e-n-a-b-l-e-d_-k-e-y.html","searchKeys":["INTRINSIC_REMEMBER_OPTIMIZATION_ENABLED_KEY","val INTRINSIC_REMEMBER_OPTIMIZATION_ENABLED_KEY: CompilerConfigurationKey<Boolean>","androidx.compose.compiler.plugins.kotlin.ComposeConfiguration.INTRINSIC_REMEMBER_OPTIMIZATION_ENABLED_KEY"]},{"name":"val INTRINSIC_REMEMBER_OPTIMIZATION_ENABLED_OPTION: CliOption","description":"androidx.compose.compiler.plugins.kotlin.ComposeCommandLineProcessor.Companion.INTRINSIC_REMEMBER_OPTIMIZATION_ENABLED_OPTION","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-command-line-processor/-companion/-i-n-t-r-i-n-s-i-c_-r-e-m-e-m-b-e-r_-o-p-t-i-m-i-z-a-t-i-o-n_-e-n-a-b-l-e-d_-o-p-t-i-o-n.html","searchKeys":["INTRINSIC_REMEMBER_OPTIMIZATION_ENABLED_OPTION","val INTRINSIC_REMEMBER_OPTIMIZATION_ENABLED_OPTION: CliOption","androidx.compose.compiler.plugins.kotlin.ComposeCommandLineProcessor.Companion.INTRINSIC_REMEMBER_OPTIMIZATION_ENABLED_OPTION"]},{"name":"val IS_COMPOSABLE_CALL: WritableSlice<IrAttributeContainer, Boolean>","description":"androidx.compose.compiler.plugins.kotlin.analysis.ComposeWritableSlices.IS_COMPOSABLE_CALL","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.analysis/-compose-writable-slices/-i-s_-c-o-m-p-o-s-a-b-l-e_-c-a-l-l.html","searchKeys":["IS_COMPOSABLE_CALL","val IS_COMPOSABLE_CALL: WritableSlice<IrAttributeContainer, Boolean>","androidx.compose.compiler.plugins.kotlin.analysis.ComposeWritableSlices.IS_COMPOSABLE_CALL"]},{"name":"val IS_COMPOSABLE_SINGLETON: WritableSlice<IrAttributeContainer, Boolean>","description":"androidx.compose.compiler.plugins.kotlin.analysis.ComposeWritableSlices.IS_COMPOSABLE_SINGLETON","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.analysis/-compose-writable-slices/-i-s_-c-o-m-p-o-s-a-b-l-e_-s-i-n-g-l-e-t-o-n.html","searchKeys":["IS_COMPOSABLE_SINGLETON","val IS_COMPOSABLE_SINGLETON: WritableSlice<IrAttributeContainer, Boolean>","androidx.compose.compiler.plugins.kotlin.analysis.ComposeWritableSlices.IS_COMPOSABLE_SINGLETON"]},{"name":"val IS_COMPOSABLE_SINGLETON_CLASS: WritableSlice<IrAttributeContainer, Boolean>","description":"androidx.compose.compiler.plugins.kotlin.analysis.ComposeWritableSlices.IS_COMPOSABLE_SINGLETON_CLASS","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.analysis/-compose-writable-slices/-i-s_-c-o-m-p-o-s-a-b-l-e_-s-i-n-g-l-e-t-o-n_-c-l-a-s-s.html","searchKeys":["IS_COMPOSABLE_SINGLETON_CLASS","val IS_COMPOSABLE_SINGLETON_CLASS: WritableSlice<IrAttributeContainer, Boolean>","androidx.compose.compiler.plugins.kotlin.analysis.ComposeWritableSlices.IS_COMPOSABLE_SINGLETON_CLASS"]},{"name":"val IS_SYNTHETIC_COMPOSABLE_CALL: WritableSlice<IrFunctionAccessExpression, Boolean>","description":"androidx.compose.compiler.plugins.kotlin.analysis.ComposeWritableSlices.IS_SYNTHETIC_COMPOSABLE_CALL","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.analysis/-compose-writable-slices/-i-s_-s-y-n-t-h-e-t-i-c_-c-o-m-p-o-s-a-b-l-e_-c-a-l-l.html","searchKeys":["IS_SYNTHETIC_COMPOSABLE_CALL","val IS_SYNTHETIC_COMPOSABLE_CALL: WritableSlice<IrFunctionAccessExpression, Boolean>","androidx.compose.compiler.plugins.kotlin.analysis.ComposeWritableSlices.IS_SYNTHETIC_COMPOSABLE_CALL"]},{"name":"val IrConstructorCall.annotationClass: IrClassSymbol?","description":"androidx.compose.compiler.plugins.kotlin.lower.annotationClass","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/annotation-class.html","searchKeys":["annotationClass","val IrConstructorCall.annotationClass: IrClassSymbol?","androidx.compose.compiler.plugins.kotlin.lower.annotationClass"]},{"name":"val IrFunction.thisParamCount: Int","description":"androidx.compose.compiler.plugins.kotlin.lower.thisParamCount","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/this-param-count.html","searchKeys":["thisParamCount","val IrFunction.thisParamCount: Int","androidx.compose.compiler.plugins.kotlin.lower.thisParamCount"]},{"name":"val IrPluginContext.irTrace: WeakBindingTrace","description":"androidx.compose.compiler.plugins.kotlin.irTrace","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/ir-trace.html","searchKeys":["irTrace","val IrPluginContext.irTrace: WeakBindingTrace","androidx.compose.compiler.plugins.kotlin.irTrace"]},{"name":"val JOINKEY: Name","description":"androidx.compose.compiler.plugins.kotlin.KtxNameConventions.JOINKEY","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-ktx-name-conventions/-j-o-i-n-k-e-y.html","searchKeys":["JOINKEY","val JOINKEY: Name","androidx.compose.compiler.plugins.kotlin.KtxNameConventions.JOINKEY"]},{"name":"val KotlinType.isFunctionOrKFunctionType: Boolean","description":"androidx.compose.compiler.plugins.kotlin.lower.isFunctionOrKFunctionType","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/is-function-or-k-function-type.html","searchKeys":["isFunctionOrKFunctionType","val KotlinType.isFunctionOrKFunctionType: Boolean","androidx.compose.compiler.plugins.kotlin.lower.isFunctionOrKFunctionType"]},{"name":"val LAMBDA_CAPABLE_OF_COMPOSER_CAPTURE: WritableSlice<FunctionDescriptor, Boolean>","description":"androidx.compose.compiler.plugins.kotlin.analysis.ComposeWritableSlices.LAMBDA_CAPABLE_OF_COMPOSER_CAPTURE","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.analysis/-compose-writable-slices/-l-a-m-b-d-a_-c-a-p-a-b-l-e_-o-f_-c-o-m-p-o-s-e-r_-c-a-p-t-u-r-e.html","searchKeys":["LAMBDA_CAPABLE_OF_COMPOSER_CAPTURE","val LAMBDA_CAPABLE_OF_COMPOSER_CAPTURE: WritableSlice<FunctionDescriptor, Boolean>","androidx.compose.compiler.plugins.kotlin.analysis.ComposeWritableSlices.LAMBDA_CAPABLE_OF_COMPOSER_CAPTURE"]},{"name":"val LIVE_LITERALS_ENABLED_KEY: CompilerConfigurationKey<Boolean>","description":"androidx.compose.compiler.plugins.kotlin.ComposeConfiguration.LIVE_LITERALS_ENABLED_KEY","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-configuration/-l-i-v-e_-l-i-t-e-r-a-l-s_-e-n-a-b-l-e-d_-k-e-y.html","searchKeys":["LIVE_LITERALS_ENABLED_KEY","val LIVE_LITERALS_ENABLED_KEY: CompilerConfigurationKey<Boolean>","androidx.compose.compiler.plugins.kotlin.ComposeConfiguration.LIVE_LITERALS_ENABLED_KEY"]},{"name":"val LIVE_LITERALS_ENABLED_OPTION: CliOption","description":"androidx.compose.compiler.plugins.kotlin.ComposeCommandLineProcessor.Companion.LIVE_LITERALS_ENABLED_OPTION","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-command-line-processor/-companion/-l-i-v-e_-l-i-t-e-r-a-l-s_-e-n-a-b-l-e-d_-o-p-t-i-o-n.html","searchKeys":["LIVE_LITERALS_ENABLED_OPTION","val LIVE_LITERALS_ENABLED_OPTION: CliOption","androidx.compose.compiler.plugins.kotlin.ComposeCommandLineProcessor.Companion.LIVE_LITERALS_ENABLED_OPTION"]},{"name":"val LIVE_LITERALS_V2_ENABLED_KEY: CompilerConfigurationKey<Boolean>","description":"androidx.compose.compiler.plugins.kotlin.ComposeConfiguration.LIVE_LITERALS_V2_ENABLED_KEY","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-configuration/-l-i-v-e_-l-i-t-e-r-a-l-s_-v2_-e-n-a-b-l-e-d_-k-e-y.html","searchKeys":["LIVE_LITERALS_V2_ENABLED_KEY","val LIVE_LITERALS_V2_ENABLED_KEY: CompilerConfigurationKey<Boolean>","androidx.compose.compiler.plugins.kotlin.ComposeConfiguration.LIVE_LITERALS_V2_ENABLED_KEY"]},{"name":"val LIVE_LITERALS_V2_ENABLED_OPTION: CliOption","description":"androidx.compose.compiler.plugins.kotlin.ComposeCommandLineProcessor.Companion.LIVE_LITERALS_V2_ENABLED_OPTION","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-command-line-processor/-companion/-l-i-v-e_-l-i-t-e-r-a-l-s_-v2_-e-n-a-b-l-e-d_-o-p-t-i-o-n.html","searchKeys":["LIVE_LITERALS_V2_ENABLED_OPTION","val LIVE_LITERALS_V2_ENABLED_OPTION: CliOption","androidx.compose.compiler.plugins.kotlin.ComposeCommandLineProcessor.Companion.LIVE_LITERALS_V2_ENABLED_OPTION"]},{"name":"val MISSING_DISALLOW_COMPOSABLE_CALLS_ANNOTATION: DiagnosticFactory3<PsiElement, ValueParameterDescriptor, ValueParameterDescriptor, CallableDescriptor>","description":"androidx.compose.compiler.plugins.kotlin.ComposeErrors.MISSING_DISALLOW_COMPOSABLE_CALLS_ANNOTATION","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-errors/-m-i-s-s-i-n-g_-d-i-s-a-l-l-o-w_-c-o-m-p-o-s-a-b-l-e_-c-a-l-l-s_-a-n-n-o-t-a-t-i-o-n.html","searchKeys":["MISSING_DISALLOW_COMPOSABLE_CALLS_ANNOTATION","val MISSING_DISALLOW_COMPOSABLE_CALLS_ANNOTATION: DiagnosticFactory3<PsiElement, ValueParameterDescriptor, ValueParameterDescriptor, CallableDescriptor>","androidx.compose.compiler.plugins.kotlin.ComposeErrors.MISSING_DISALLOW_COMPOSABLE_CALLS_ANNOTATION"]},{"name":"val NONREADONLY_CALL_IN_READONLY_COMPOSABLE: DiagnosticFactory0<PsiElement>","description":"androidx.compose.compiler.plugins.kotlin.ComposeErrors.NONREADONLY_CALL_IN_READONLY_COMPOSABLE","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-errors/-n-o-n-r-e-a-d-o-n-l-y_-c-a-l-l_-i-n_-r-e-a-d-o-n-l-y_-c-o-m-p-o-s-a-b-l-e.html","searchKeys":["NONREADONLY_CALL_IN_READONLY_COMPOSABLE","val NONREADONLY_CALL_IN_READONLY_COMPOSABLE: DiagnosticFactory0<PsiElement>","androidx.compose.compiler.plugins.kotlin.ComposeErrors.NONREADONLY_CALL_IN_READONLY_COMPOSABLE"]},{"name":"val NonRestartableComposable: FqName","description":"androidx.compose.compiler.plugins.kotlin.ComposeFqNames.NonRestartableComposable","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-fq-names/-non-restartable-composable.html","searchKeys":["NonRestartableComposable","val NonRestartableComposable: FqName","androidx.compose.compiler.plugins.kotlin.ComposeFqNames.NonRestartableComposable"]},{"name":"val PLUGIN_ID: String","description":"androidx.compose.compiler.plugins.kotlin.ComposeCommandLineProcessor.Companion.PLUGIN_ID","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-command-line-processor/-companion/-p-l-u-g-i-n_-i-d.html","searchKeys":["PLUGIN_ID","val PLUGIN_ID: String","androidx.compose.compiler.plugins.kotlin.ComposeCommandLineProcessor.Companion.PLUGIN_ID"]},{"name":"val Package: FqName","description":"androidx.compose.compiler.plugins.kotlin.ComposeFqNames.Package","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-fq-names/-package.html","searchKeys":["Package","val Package: FqName","androidx.compose.compiler.plugins.kotlin.ComposeFqNames.Package"]},{"name":"val ROOT: PathPartInfo","description":"androidx.compose.compiler.plugins.kotlin.lower.PathPartInfo.Companion.ROOT","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-path-part-info/-companion/-r-o-o-t.html","searchKeys":["ROOT","val ROOT: PathPartInfo","androidx.compose.compiler.plugins.kotlin.lower.PathPartInfo.Companion.ROOT"]},{"name":"val ReadOnlyComposable: FqName","description":"androidx.compose.compiler.plugins.kotlin.ComposeFqNames.ReadOnlyComposable","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-fq-names/-read-only-composable.html","searchKeys":["ReadOnlyComposable","val ReadOnlyComposable: FqName","androidx.compose.compiler.plugins.kotlin.ComposeFqNames.ReadOnlyComposable"]},{"name":"val SOURCEINFORMATION: String","description":"androidx.compose.compiler.plugins.kotlin.KtxNameConventions.SOURCEINFORMATION","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-ktx-name-conventions/-s-o-u-r-c-e-i-n-f-o-r-m-a-t-i-o-n.html","searchKeys":["SOURCEINFORMATION","val SOURCEINFORMATION: String","androidx.compose.compiler.plugins.kotlin.KtxNameConventions.SOURCEINFORMATION"]},{"name":"val SOURCEINFORMATIONMARKEREND: String","description":"androidx.compose.compiler.plugins.kotlin.KtxNameConventions.SOURCEINFORMATIONMARKEREND","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-ktx-name-conventions/-s-o-u-r-c-e-i-n-f-o-r-m-a-t-i-o-n-m-a-r-k-e-r-e-n-d.html","searchKeys":["SOURCEINFORMATIONMARKEREND","val SOURCEINFORMATIONMARKEREND: String","androidx.compose.compiler.plugins.kotlin.KtxNameConventions.SOURCEINFORMATIONMARKEREND"]},{"name":"val SOURCEINFORMATIONMARKERSTART: String","description":"androidx.compose.compiler.plugins.kotlin.KtxNameConventions.SOURCEINFORMATIONMARKERSTART","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-ktx-name-conventions/-s-o-u-r-c-e-i-n-f-o-r-m-a-t-i-o-n-m-a-r-k-e-r-s-t-a-r-t.html","searchKeys":["SOURCEINFORMATIONMARKERSTART","val SOURCEINFORMATIONMARKERSTART: String","androidx.compose.compiler.plugins.kotlin.KtxNameConventions.SOURCEINFORMATIONMARKERSTART"]},{"name":"val SOURCE_INFORMATION_ENABLED_KEY: CompilerConfigurationKey<Boolean>","description":"androidx.compose.compiler.plugins.kotlin.ComposeConfiguration.SOURCE_INFORMATION_ENABLED_KEY","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-configuration/-s-o-u-r-c-e_-i-n-f-o-r-m-a-t-i-o-n_-e-n-a-b-l-e-d_-k-e-y.html","searchKeys":["SOURCE_INFORMATION_ENABLED_KEY","val SOURCE_INFORMATION_ENABLED_KEY: CompilerConfigurationKey<Boolean>","androidx.compose.compiler.plugins.kotlin.ComposeConfiguration.SOURCE_INFORMATION_ENABLED_KEY"]},{"name":"val SOURCE_INFORMATION_ENABLED_OPTION: CliOption","description":"androidx.compose.compiler.plugins.kotlin.ComposeCommandLineProcessor.Companion.SOURCE_INFORMATION_ENABLED_OPTION","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-command-line-processor/-companion/-s-o-u-r-c-e_-i-n-f-o-r-m-a-t-i-o-n_-e-n-a-b-l-e-d_-o-p-t-i-o-n.html","searchKeys":["SOURCE_INFORMATION_ENABLED_OPTION","val SOURCE_INFORMATION_ENABLED_OPTION: CliOption","androidx.compose.compiler.plugins.kotlin.ComposeCommandLineProcessor.Companion.SOURCE_INFORMATION_ENABLED_OPTION"]},{"name":"val STABILITY_FLAG: Name","description":"androidx.compose.compiler.plugins.kotlin.KtxNameConventions.STABILITY_FLAG","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-ktx-name-conventions/-s-t-a-b-i-l-i-t-y_-f-l-a-g.html","searchKeys":["STABILITY_FLAG","val STABILITY_FLAG: Name","androidx.compose.compiler.plugins.kotlin.KtxNameConventions.STABILITY_FLAG"]},{"name":"val STARTRESTARTGROUP: Name","description":"androidx.compose.compiler.plugins.kotlin.KtxNameConventions.STARTRESTARTGROUP","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-ktx-name-conventions/-s-t-a-r-t-r-e-s-t-a-r-t-g-r-o-u-p.html","searchKeys":["STARTRESTARTGROUP","val STARTRESTARTGROUP: Name","androidx.compose.compiler.plugins.kotlin.KtxNameConventions.STARTRESTARTGROUP"]},{"name":"val SUPPRESS_KOTLIN_VERSION_CHECK_ENABLED_OPTION: CliOption","description":"androidx.compose.compiler.plugins.kotlin.ComposeCommandLineProcessor.Companion.SUPPRESS_KOTLIN_VERSION_CHECK_ENABLED_OPTION","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-command-line-processor/-companion/-s-u-p-p-r-e-s-s_-k-o-t-l-i-n_-v-e-r-s-i-o-n_-c-h-e-c-k_-e-n-a-b-l-e-d_-o-p-t-i-o-n.html","searchKeys":["SUPPRESS_KOTLIN_VERSION_CHECK_ENABLED_OPTION","val SUPPRESS_KOTLIN_VERSION_CHECK_ENABLED_OPTION: CliOption","androidx.compose.compiler.plugins.kotlin.ComposeCommandLineProcessor.Companion.SUPPRESS_KOTLIN_VERSION_CHECK_ENABLED_OPTION"]},{"name":"val SUPPRESS_KOTLIN_VERSION_COMPATIBILITY_CHECK: CompilerConfigurationKey<Boolean>","description":"androidx.compose.compiler.plugins.kotlin.ComposeConfiguration.SUPPRESS_KOTLIN_VERSION_COMPATIBILITY_CHECK","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-configuration/-s-u-p-p-r-e-s-s_-k-o-t-l-i-n_-v-e-r-s-i-o-n_-c-o-m-p-a-t-i-b-i-l-i-t-y_-c-h-e-c-k.html","searchKeys":["SUPPRESS_KOTLIN_VERSION_COMPATIBILITY_CHECK","val SUPPRESS_KOTLIN_VERSION_COMPATIBILITY_CHECK: CompilerConfigurationKey<Boolean>","androidx.compose.compiler.plugins.kotlin.ComposeConfiguration.SUPPRESS_KOTLIN_VERSION_COMPATIBILITY_CHECK"]},{"name":"val StabilityInferred: FqName","description":"androidx.compose.compiler.plugins.kotlin.ComposeFqNames.StabilityInferred","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-fq-names/-stability-inferred.html","searchKeys":["StabilityInferred","val StabilityInferred: FqName","androidx.compose.compiler.plugins.kotlin.ComposeFqNames.StabilityInferred"]},{"name":"val Stable: FqName","description":"androidx.compose.compiler.plugins.kotlin.ComposeFqNames.Stable","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-fq-names/-stable.html","searchKeys":["Stable","val Stable: FqName","androidx.compose.compiler.plugins.kotlin.ComposeFqNames.Stable"]},{"name":"val Stable: Stability","description":"androidx.compose.compiler.plugins.kotlin.analysis.Stability.Companion.Stable","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.analysis/-stability/-companion/-stable.html","searchKeys":["Stable","val Stable: Stability","androidx.compose.compiler.plugins.kotlin.analysis.Stability.Companion.Stable"]},{"name":"val StableMarker: FqName","description":"androidx.compose.compiler.plugins.kotlin.ComposeFqNames.StableMarker","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-fq-names/-stable-marker.html","searchKeys":["StableMarker","val StableMarker: FqName","androidx.compose.compiler.plugins.kotlin.ComposeFqNames.StableMarker"]},{"name":"val TYPE_MISMATCH: DiagnosticFactory2<KtExpression, KotlinType, KotlinType>","description":"androidx.compose.compiler.plugins.kotlin.ComposeErrors.TYPE_MISMATCH","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-errors/-t-y-p-e_-m-i-s-m-a-t-c-h.html","searchKeys":["TYPE_MISMATCH","val TYPE_MISMATCH: DiagnosticFactory2<KtExpression, KotlinType, KotlinType>","androidx.compose.compiler.plugins.kotlin.ComposeErrors.TYPE_MISMATCH"]},{"name":"val UPDATE_SCOPE: Name","description":"androidx.compose.compiler.plugins.kotlin.KtxNameConventions.UPDATE_SCOPE","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-ktx-name-conventions/-u-p-d-a-t-e_-s-c-o-p-e.html","searchKeys":["UPDATE_SCOPE","val UPDATE_SCOPE: Name","androidx.compose.compiler.plugins.kotlin.KtxNameConventions.UPDATE_SCOPE"]},{"name":"val Unstable: Stability","description":"androidx.compose.compiler.plugins.kotlin.analysis.Stability.Companion.Unstable","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.analysis/-stability/-companion/-unstable.html","searchKeys":["Unstable","val Unstable: Stability","androidx.compose.compiler.plugins.kotlin.analysis.Stability.Companion.Unstable"]},{"name":"val allTrackedParams: List<IrValueParameter>","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.FunctionScope.allTrackedParams","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-function-scope/all-tracked-params.html","searchKeys":["allTrackedParams","val allTrackedParams: List<IrValueParameter>","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.FunctionScope.allTrackedParams"]},{"name":"val argument: IrFunctionExpression","description":"androidx.compose.compiler.plugins.kotlin.lower.InlineLambdaInfo.argument","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-inline-lambda-info/argument.html","searchKeys":["argument","val argument: IrFunctionExpression","androidx.compose.compiler.plugins.kotlin.lower.InlineLambdaInfo.argument"]},{"name":"val assignment: ResolvedCall<*>?","description":"androidx.compose.compiler.plugins.kotlin.ValidatedAssignment.assignment","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-validated-assignment/assignment.html","searchKeys":["assignment","val assignment: ResolvedCall<*>?","androidx.compose.compiler.plugins.kotlin.ValidatedAssignment.assignment"]},{"name":"val assignmentLambda: FunctionDescriptor?","description":"androidx.compose.compiler.plugins.kotlin.ValidatedAssignment.assignmentLambda","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-validated-assignment/assignment-lambda.html","searchKeys":["assignmentLambda","val assignmentLambda: FunctionDescriptor?","androidx.compose.compiler.plugins.kotlin.ValidatedAssignment.assignmentLambda"]},{"name":"val bindingTrace: BindingTrace","description":"androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.bindingTrace","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-abstract-compose-lowering/binding-trace.html","searchKeys":["bindingTrace","val bindingTrace: BindingTrace","androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.bindingTrace"]},{"name":"val bits: Int","description":"androidx.compose.compiler.plugins.kotlin.lower.ParamState.Different.bits","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-param-state/-different/bits.html","searchKeys":["bits","val bits: Int","androidx.compose.compiler.plugins.kotlin.lower.ParamState.Different.bits"]},{"name":"val bits: Int","description":"androidx.compose.compiler.plugins.kotlin.lower.ParamState.Mask.bits","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-param-state/-mask/bits.html","searchKeys":["bits","val bits: Int","androidx.compose.compiler.plugins.kotlin.lower.ParamState.Mask.bits"]},{"name":"val bits: Int","description":"androidx.compose.compiler.plugins.kotlin.lower.ParamState.Same.bits","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-param-state/-same/bits.html","searchKeys":["bits","val bits: Int","androidx.compose.compiler.plugins.kotlin.lower.ParamState.Same.bits"]},{"name":"val bits: Int","description":"androidx.compose.compiler.plugins.kotlin.lower.ParamState.Static.bits","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-param-state/-static/bits.html","searchKeys":["bits","val bits: Int","androidx.compose.compiler.plugins.kotlin.lower.ParamState.Static.bits"]},{"name":"val bits: Int","description":"androidx.compose.compiler.plugins.kotlin.lower.ParamState.Uncertain.bits","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-param-state/-uncertain/bits.html","searchKeys":["bits","val bits: Int","androidx.compose.compiler.plugins.kotlin.lower.ParamState.Uncertain.bits"]},{"name":"val bits: Int","description":"androidx.compose.compiler.plugins.kotlin.lower.ParamState.Unknown.bits","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-param-state/-unknown/bits.html","searchKeys":["bits","val bits: Int","androidx.compose.compiler.plugins.kotlin.lower.ParamState.Unknown.bits"]},{"name":"val bits: Int","description":"androidx.compose.compiler.plugins.kotlin.lower.ParamState.bits","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-param-state/bits.html","searchKeys":["bits","val bits: Int","androidx.compose.compiler.plugins.kotlin.lower.ParamState.bits"]},{"name":"val bits: Int","description":"androidx.compose.compiler.plugins.kotlin.lower.StabilityBits.STABLE.bits","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-stability-bits/-s-t-a-b-l-e/bits.html","searchKeys":["bits","val bits: Int","androidx.compose.compiler.plugins.kotlin.lower.StabilityBits.STABLE.bits"]},{"name":"val bits: Int","description":"androidx.compose.compiler.plugins.kotlin.lower.StabilityBits.UNSTABLE.bits","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-stability-bits/-u-n-s-t-a-b-l-e/bits.html","searchKeys":["bits","val bits: Int","androidx.compose.compiler.plugins.kotlin.lower.StabilityBits.UNSTABLE.bits"]},{"name":"val bits: Int","description":"androidx.compose.compiler.plugins.kotlin.lower.StabilityBits.bits","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-stability-bits/bits.html","searchKeys":["bits","val bits: Int","androidx.compose.compiler.plugins.kotlin.lower.StabilityBits.bits"]},{"name":"val callee: IrFunction","description":"androidx.compose.compiler.plugins.kotlin.lower.InlineLambdaInfo.callee","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-inline-lambda-info/callee.html","searchKeys":["callee","val callee: IrFunction","androidx.compose.compiler.plugins.kotlin.lower.InlineLambdaInfo.callee"]},{"name":"val compilerVersion: String","description":"androidx.compose.compiler.plugins.kotlin.VersionChecker.Companion.compilerVersion","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-version-checker/-companion/compiler-version.html","searchKeys":["compilerVersion","val compilerVersion: String","androidx.compose.compiler.plugins.kotlin.VersionChecker.Companion.compilerVersion"]},{"name":"val composableLambda: FqName","description":"androidx.compose.compiler.plugins.kotlin.ComposeFqNames.composableLambda","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-fq-names/composable-lambda.html","searchKeys":["composableLambda","val composableLambda: FqName","androidx.compose.compiler.plugins.kotlin.ComposeFqNames.composableLambda"]},{"name":"val composableLambdaInstance: FqName","description":"androidx.compose.compiler.plugins.kotlin.ComposeFqNames.composableLambdaInstance","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-fq-names/composable-lambda-instance.html","searchKeys":["composableLambdaInstance","val composableLambdaInstance: FqName","androidx.compose.compiler.plugins.kotlin.ComposeFqNames.composableLambdaInstance"]},{"name":"val context: IrPluginContext","description":"androidx.compose.compiler.plugins.kotlin.VersionChecker.context","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-version-checker/context.html","searchKeys":["context","val context: IrPluginContext","androidx.compose.compiler.plugins.kotlin.VersionChecker.context"]},{"name":"val context: IrPluginContext","description":"androidx.compose.compiler.plugins.kotlin.analysis.StabilityInferencer.context","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.analysis/-stability-inferencer/context.html","searchKeys":["context","val context: IrPluginContext","androidx.compose.compiler.plugins.kotlin.analysis.StabilityInferencer.context"]},{"name":"val context: IrPluginContext","description":"androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.context","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-abstract-compose-lowering/context.html","searchKeys":["context","val context: IrPluginContext","androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.context"]},{"name":"val context: IrPluginContext","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposerIntrinsicTransformer.context","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composer-intrinsic-transformer/context.html","searchKeys":["context","val context: IrPluginContext","androidx.compose.compiler.plugins.kotlin.lower.ComposerIntrinsicTransformer.context"]},{"name":"val declaration: IrClass","description":"androidx.compose.compiler.plugins.kotlin.analysis.Stability.Runtime.declaration","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.analysis/-stability/-runtime/declaration.html","searchKeys":["declaration","val declaration: IrClass","androidx.compose.compiler.plugins.kotlin.analysis.Stability.Runtime.declaration"]},{"name":"val declaration: IrClass","description":"androidx.compose.compiler.plugins.kotlin.analysis.Stability.Unknown.declaration","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.analysis/-stability/-unknown/declaration.html","searchKeys":["declaration","val declaration: IrClass","androidx.compose.compiler.plugins.kotlin.analysis.Stability.Unknown.declaration"]},{"name":"val declaration: IrFile","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.FileScope.declaration","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-file-scope/declaration.html","searchKeys":["declaration","val declaration: IrFile","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.FileScope.declaration"]},{"name":"val descriptor: DeclarationDescriptor","description":"androidx.compose.compiler.plugins.kotlin.ValidatedAssignment.descriptor","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-validated-assignment/descriptor.html","searchKeys":["descriptor","val descriptor: DeclarationDescriptor","androidx.compose.compiler.plugins.kotlin.ValidatedAssignment.descriptor"]},{"name":"val element: IrElement","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.SourceLocation.element","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-source-location/element.html","searchKeys":["element","val element: IrElement","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.SourceLocation.element"]},{"name":"val elements: List<Stability>","description":"androidx.compose.compiler.plugins.kotlin.analysis.Stability.Combined.elements","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.analysis/-stability/-combined/elements.html","searchKeys":["elements","val elements: List<Stability>","androidx.compose.compiler.plugins.kotlin.analysis.Stability.Combined.elements"]},{"name":"val function: IrFunction","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.FunctionScope.function","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-function-scope/function.html","searchKeys":["function","val function: IrFunction","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.FunctionScope.function"]},{"name":"val internal: FqName","description":"androidx.compose.compiler.plugins.kotlin.ComposeFqNames.internal","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-fq-names/internal.html","searchKeys":["internal","val internal: FqName","androidx.compose.compiler.plugins.kotlin.ComposeFqNames.internal"]},{"name":"val isComposable: Boolean","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.FunctionScope.isComposable","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-function-scope/is-composable.html","searchKeys":["isComposable","val isComposable: Boolean","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.FunctionScope.isComposable"]},{"name":"val isInlinedLambda: Boolean","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.FunctionScope.isInlinedLambda","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-function-scope/is-inlined-lambda.html","searchKeys":["isInlinedLambda","val isInlinedLambda: Boolean","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.FunctionScope.isInlinedLambda"]},{"name":"val key: FqName","description":"androidx.compose.compiler.plugins.kotlin.ComposeFqNames.key","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-fq-names/key.html","searchKeys":["key","val key: FqName","androidx.compose.compiler.plugins.kotlin.ComposeFqNames.key"]},{"name":"val key: String","description":"androidx.compose.compiler.plugins.kotlin.lower.PathPartInfo.key","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-path-part-info/key.html","searchKeys":["key","val key: String","androidx.compose.compiler.plugins.kotlin.lower.PathPartInfo.key"]},{"name":"val loop: IrLoop","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.LoopScope.loop","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-loop-scope/loop.html","searchKeys":["loop","val loop: IrLoop","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.LoopScope.loop"]},{"name":"val name: String","description":"androidx.compose.compiler.plugins.kotlin.ValidatedAssignment.name","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-validated-assignment/name.html","searchKeys":["name","val name: String","androidx.compose.compiler.plugins.kotlin.ValidatedAssignment.name"]},{"name":"val name: String","description":"androidx.compose.compiler.plugins.kotlin.ValidationType.CHANGED.name","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-validation-type/-c-h-a-n-g-e-d/name.html","searchKeys":["name","val name: String","androidx.compose.compiler.plugins.kotlin.ValidationType.CHANGED.name"]},{"name":"val name: String","description":"androidx.compose.compiler.plugins.kotlin.ValidationType.SET.name","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-validation-type/-s-e-t/name.html","searchKeys":["name","val name: String","androidx.compose.compiler.plugins.kotlin.ValidationType.SET.name"]},{"name":"val name: String","description":"androidx.compose.compiler.plugins.kotlin.ValidationType.UPDATE.name","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-validation-type/-u-p-d-a-t-e/name.html","searchKeys":["name","val name: String","androidx.compose.compiler.plugins.kotlin.ValidationType.UPDATE.name"]},{"name":"val name: String","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.name","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/name.html","searchKeys":["name","val name: String","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.name"]},{"name":"val name: String","description":"androidx.compose.compiler.plugins.kotlin.lower.ParamState.Different.name","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-param-state/-different/name.html","searchKeys":["name","val name: String","androidx.compose.compiler.plugins.kotlin.lower.ParamState.Different.name"]},{"name":"val name: String","description":"androidx.compose.compiler.plugins.kotlin.lower.ParamState.Mask.name","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-param-state/-mask/name.html","searchKeys":["name","val name: String","androidx.compose.compiler.plugins.kotlin.lower.ParamState.Mask.name"]},{"name":"val name: String","description":"androidx.compose.compiler.plugins.kotlin.lower.ParamState.Same.name","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-param-state/-same/name.html","searchKeys":["name","val name: String","androidx.compose.compiler.plugins.kotlin.lower.ParamState.Same.name"]},{"name":"val name: String","description":"androidx.compose.compiler.plugins.kotlin.lower.ParamState.Static.name","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-param-state/-static/name.html","searchKeys":["name","val name: String","androidx.compose.compiler.plugins.kotlin.lower.ParamState.Static.name"]},{"name":"val name: String","description":"androidx.compose.compiler.plugins.kotlin.lower.ParamState.Uncertain.name","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-param-state/-uncertain/name.html","searchKeys":["name","val name: String","androidx.compose.compiler.plugins.kotlin.lower.ParamState.Uncertain.name"]},{"name":"val name: String","description":"androidx.compose.compiler.plugins.kotlin.lower.ParamState.Unknown.name","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-param-state/-unknown/name.html","searchKeys":["name","val name: String","androidx.compose.compiler.plugins.kotlin.lower.ParamState.Unknown.name"]},{"name":"val name: String","description":"androidx.compose.compiler.plugins.kotlin.lower.StabilityBits.STABLE.name","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-stability-bits/-s-t-a-b-l-e/name.html","searchKeys":["name","val name: String","androidx.compose.compiler.plugins.kotlin.lower.StabilityBits.STABLE.name"]},{"name":"val name: String","description":"androidx.compose.compiler.plugins.kotlin.lower.StabilityBits.UNSTABLE.name","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-stability-bits/-u-n-s-t-a-b-l-e/name.html","searchKeys":["name","val name: String","androidx.compose.compiler.plugins.kotlin.lower.StabilityBits.UNSTABLE.name"]},{"name":"val ordinal: Int","description":"androidx.compose.compiler.plugins.kotlin.ValidationType.CHANGED.ordinal","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-validation-type/-c-h-a-n-g-e-d/ordinal.html","searchKeys":["ordinal","val ordinal: Int","androidx.compose.compiler.plugins.kotlin.ValidationType.CHANGED.ordinal"]},{"name":"val ordinal: Int","description":"androidx.compose.compiler.plugins.kotlin.ValidationType.SET.ordinal","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-validation-type/-s-e-t/ordinal.html","searchKeys":["ordinal","val ordinal: Int","androidx.compose.compiler.plugins.kotlin.ValidationType.SET.ordinal"]},{"name":"val ordinal: Int","description":"androidx.compose.compiler.plugins.kotlin.ValidationType.UPDATE.ordinal","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-validation-type/-u-p-d-a-t-e/ordinal.html","searchKeys":["ordinal","val ordinal: Int","androidx.compose.compiler.plugins.kotlin.ValidationType.UPDATE.ordinal"]},{"name":"val ordinal: Int","description":"androidx.compose.compiler.plugins.kotlin.lower.ParamState.Different.ordinal","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-param-state/-different/ordinal.html","searchKeys":["ordinal","val ordinal: Int","androidx.compose.compiler.plugins.kotlin.lower.ParamState.Different.ordinal"]},{"name":"val ordinal: Int","description":"androidx.compose.compiler.plugins.kotlin.lower.ParamState.Mask.ordinal","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-param-state/-mask/ordinal.html","searchKeys":["ordinal","val ordinal: Int","androidx.compose.compiler.plugins.kotlin.lower.ParamState.Mask.ordinal"]},{"name":"val ordinal: Int","description":"androidx.compose.compiler.plugins.kotlin.lower.ParamState.Same.ordinal","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-param-state/-same/ordinal.html","searchKeys":["ordinal","val ordinal: Int","androidx.compose.compiler.plugins.kotlin.lower.ParamState.Same.ordinal"]},{"name":"val ordinal: Int","description":"androidx.compose.compiler.plugins.kotlin.lower.ParamState.Static.ordinal","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-param-state/-static/ordinal.html","searchKeys":["ordinal","val ordinal: Int","androidx.compose.compiler.plugins.kotlin.lower.ParamState.Static.ordinal"]},{"name":"val ordinal: Int","description":"androidx.compose.compiler.plugins.kotlin.lower.ParamState.Uncertain.ordinal","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-param-state/-uncertain/ordinal.html","searchKeys":["ordinal","val ordinal: Int","androidx.compose.compiler.plugins.kotlin.lower.ParamState.Uncertain.ordinal"]},{"name":"val ordinal: Int","description":"androidx.compose.compiler.plugins.kotlin.lower.ParamState.Unknown.ordinal","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-param-state/-unknown/ordinal.html","searchKeys":["ordinal","val ordinal: Int","androidx.compose.compiler.plugins.kotlin.lower.ParamState.Unknown.ordinal"]},{"name":"val ordinal: Int","description":"androidx.compose.compiler.plugins.kotlin.lower.StabilityBits.STABLE.ordinal","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-stability-bits/-s-t-a-b-l-e/ordinal.html","searchKeys":["ordinal","val ordinal: Int","androidx.compose.compiler.plugins.kotlin.lower.StabilityBits.STABLE.ordinal"]},{"name":"val ordinal: Int","description":"androidx.compose.compiler.plugins.kotlin.lower.StabilityBits.UNSTABLE.ordinal","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-stability-bits/-u-n-s-t-a-b-l-e/ordinal.html","searchKeys":["ordinal","val ordinal: Int","androidx.compose.compiler.plugins.kotlin.lower.StabilityBits.UNSTABLE.ordinal"]},{"name":"val parameter: IrTypeParameter","description":"androidx.compose.compiler.plugins.kotlin.analysis.Stability.Parameter.parameter","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.analysis/-stability/-parameter/parameter.html","searchKeys":["parameter","val parameter: IrTypeParameter","androidx.compose.compiler.plugins.kotlin.analysis.Stability.Parameter.parameter"]},{"name":"val parameter: IrValueParameter","description":"androidx.compose.compiler.plugins.kotlin.lower.InlineLambdaInfo.parameter","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-inline-lambda-info/parameter.html","searchKeys":["parameter","val parameter: IrValueParameter","androidx.compose.compiler.plugins.kotlin.lower.InlineLambdaInfo.parameter"]},{"name":"val remember: FqName","description":"androidx.compose.compiler.plugins.kotlin.ComposeFqNames.remember","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-fq-names/remember.html","searchKeys":["remember","val remember: FqName","androidx.compose.compiler.plugins.kotlin.ComposeFqNames.remember"]},{"name":"val scope: IrDeclaration","description":"androidx.compose.compiler.plugins.kotlin.lower.InlineLambdaInfo.scope","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-inline-lambda-info/scope.html","searchKeys":["scope","val scope: IrDeclaration","androidx.compose.compiler.plugins.kotlin.lower.InlineLambdaInfo.scope"]},{"name":"val stable: Boolean","description":"androidx.compose.compiler.plugins.kotlin.analysis.Stability.Certain.stable","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.analysis/-stability/-certain/stable.html","searchKeys":["stable","val stable: Boolean","androidx.compose.compiler.plugins.kotlin.analysis.Stability.Certain.stable"]},{"name":"val symbolRemapper: DeepCopySymbolRemapper","description":"androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.symbolRemapper","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-abstract-compose-lowering/symbol-remapper.html","searchKeys":["symbolRemapper","val symbolRemapper: DeepCopySymbolRemapper","androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.symbolRemapper"]},{"name":"val type: KotlinType","description":"androidx.compose.compiler.plugins.kotlin.ValidatedAssignment.type","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-validated-assignment/type.html","searchKeys":["type","val type: KotlinType","androidx.compose.compiler.plugins.kotlin.ValidatedAssignment.type"]},{"name":"val uncheckedValidationCall: ResolvedCall<*>?","description":"androidx.compose.compiler.plugins.kotlin.ValidatedAssignment.uncheckedValidationCall","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-validated-assignment/unchecked-validation-call.html","searchKeys":["uncheckedValidationCall","val uncheckedValidationCall: ResolvedCall<*>?","androidx.compose.compiler.plugins.kotlin.ValidatedAssignment.uncheckedValidationCall"]},{"name":"val usedParams: BooleanArray","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.FunctionScope.usedParams","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-function-scope/used-params.html","searchKeys":["usedParams","val usedParams: BooleanArray","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.FunctionScope.usedParams"]},{"name":"val validationCall: ResolvedCall<*>?","description":"androidx.compose.compiler.plugins.kotlin.ValidatedAssignment.validationCall","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-validated-assignment/validation-call.html","searchKeys":["validationCall","val validationCall: ResolvedCall<*>?","androidx.compose.compiler.plugins.kotlin.ValidatedAssignment.validationCall"]},{"name":"val validationType: ValidationType","description":"androidx.compose.compiler.plugins.kotlin.ValidatedAssignment.validationType","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-validated-assignment/validation-type.html","searchKeys":["validationType","val validationType: ValidationType","androidx.compose.compiler.plugins.kotlin.ValidatedAssignment.validationType"]},{"name":"var CONFLICTING_OVERLOADS: DiagnosticFactory1<PsiElement, Collection<DeclarationDescriptor>>","description":"androidx.compose.compiler.plugins.kotlin.ComposeErrors.CONFLICTING_OVERLOADS","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-errors/-c-o-n-f-l-i-c-t-i-n-g_-o-v-e-r-l-o-a-d-s.html","searchKeys":["CONFLICTING_OVERLOADS","var CONFLICTING_OVERLOADS: DiagnosticFactory1<PsiElement, Collection<DeclarationDescriptor>>","androidx.compose.compiler.plugins.kotlin.ComposeErrors.CONFLICTING_OVERLOADS"]},{"name":"var FRAMED_COMPONENTS: Boolean = false","description":"androidx.compose.compiler.plugins.kotlin.ComposeFlags.FRAMED_COMPONENTS","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-flags/-f-r-a-m-e-d_-c-o-m-p-o-n-e-n-t-s.html","searchKeys":["FRAMED_COMPONENTS","var FRAMED_COMPONENTS: Boolean = false","androidx.compose.compiler.plugins.kotlin.ComposeFlags.FRAMED_COMPONENTS"]},{"name":"var FRAMED_MODEL_CLASSES: Boolean = true","description":"androidx.compose.compiler.plugins.kotlin.ComposeFlags.FRAMED_MODEL_CLASSES","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin/-compose-flags/-f-r-a-m-e-d_-m-o-d-e-l_-c-l-a-s-s-e-s.html","searchKeys":["FRAMED_MODEL_CLASSES","var FRAMED_MODEL_CLASSES: Boolean = true","androidx.compose.compiler.plugins.kotlin.ComposeFlags.FRAMED_MODEL_CLASSES"]},{"name":"var changedParameter: IrChangedBitMaskValue? = null","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.FunctionScope.changedParameter","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-function-scope/changed-parameter.html","searchKeys":["changedParameter","var changedParameter: IrChangedBitMaskValue? = null","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.FunctionScope.changedParameter"]},{"name":"var composerParameter: IrValueParameter? = null","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.FunctionScope.composerParameter","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-function-scope/composer-parameter.html","searchKeys":["composerParameter","var composerParameter: IrValueParameter? = null","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.FunctionScope.composerParameter"]},{"name":"var defaultParameter: IrDefaultBitMaskValue? = null","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.FunctionScope.defaultParameter","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-function-scope/default-parameter.html","searchKeys":["defaultParameter","var defaultParameter: IrDefaultBitMaskValue? = null","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.FunctionScope.defaultParameter"]},{"name":"var dirty: IrChangedBitMaskValue? = null","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.FunctionScope.dirty","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-function-scope/dirty.html","searchKeys":["dirty","var dirty: IrChangedBitMaskValue? = null","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.FunctionScope.dirty"]},{"name":"var hasCapturedComposableCall: Boolean = false","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.CaptureScope.hasCapturedComposableCall","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-capture-scope/has-captured-composable-call.html","searchKeys":["hasCapturedComposableCall","var hasCapturedComposableCall: Boolean = false","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.CaptureScope.hasCapturedComposableCall"]},{"name":"var hasComposableCalls: Boolean = false","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.BlockScope.hasComposableCalls","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-block-scope/has-composable-calls.html","searchKeys":["hasComposableCalls","var hasComposableCalls: Boolean = false","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.BlockScope.hasComposableCalls"]},{"name":"var hasComposableCallsWithGroups: Boolean = false","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.BlockScope.hasComposableCallsWithGroups","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-block-scope/has-composable-calls-with-groups.html","searchKeys":["hasComposableCallsWithGroups","var hasComposableCallsWithGroups: Boolean = false","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.BlockScope.hasComposableCallsWithGroups"]},{"name":"var hasDefaultsGroup: Boolean = false","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.BlockScope.hasDefaultsGroup","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-block-scope/has-defaults-group.html","searchKeys":["hasDefaultsGroup","var hasDefaultsGroup: Boolean = false","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.BlockScope.hasDefaultsGroup"]},{"name":"var hasJump: Boolean = false","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.BlockScope.hasJump","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-block-scope/has-jump.html","searchKeys":["hasJump","var hasJump: Boolean = false","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.BlockScope.hasJump"]},{"name":"var hasReturn: Boolean = false","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.BlockScope.hasReturn","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-block-scope/has-return.html","searchKeys":["hasReturn","var hasReturn: Boolean = false","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.BlockScope.hasReturn"]},{"name":"var inlinedFunctions: Set<InlineLambdaInfo>","description":"androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.inlinedFunctions","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-abstract-compose-lowering/inlined-functions.html","searchKeys":["inlinedFunctions","var inlinedFunctions: Set<InlineLambdaInfo>","androidx.compose.compiler.plugins.kotlin.lower.AbstractComposeLowering.inlinedFunctions"]},{"name":"var isCertain: Boolean = false","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.ParamMeta.isCertain","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-param-meta/is-certain.html","searchKeys":["isCertain","var isCertain: Boolean = false","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.ParamMeta.isCertain"]},{"name":"var isProvided: Boolean = false","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.ParamMeta.isProvided","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-param-meta/is-provided.html","searchKeys":["isProvided","var isProvided: Boolean = false","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.ParamMeta.isProvided"]},{"name":"var isStatic: Boolean = false","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.ParamMeta.isStatic","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-param-meta/is-static.html","searchKeys":["isStatic","var isStatic: Boolean = false","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.ParamMeta.isStatic"]},{"name":"var isVararg: Boolean = false","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.ParamMeta.isVararg","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-param-meta/is-vararg.html","searchKeys":["isVararg","var isVararg: Boolean = false","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.ParamMeta.isVararg"]},{"name":"var level: Int = 0","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.level","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/level.html","searchKeys":["level","var level: Int = 0","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.level"]},{"name":"var maskParam: IrChangedBitMaskValue? = null","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.ParamMeta.maskParam","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-param-meta/mask-param.html","searchKeys":["maskParam","var maskParam: IrChangedBitMaskValue? = null","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.ParamMeta.maskParam"]},{"name":"var maskSlot: Int","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.ParamMeta.maskSlot","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-param-meta/mask-slot.html","searchKeys":["maskSlot","var maskSlot: Int","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.ParamMeta.maskSlot"]},{"name":"var needsGroupPerIteration: Boolean = false","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.LoopScope.needsGroupPerIteration","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-loop-scope/needs-group-per-iteration.html","searchKeys":["needsGroupPerIteration","var needsGroupPerIteration: Boolean = false","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.LoopScope.needsGroupPerIteration"]},{"name":"var parent: ComposableFunctionBodyTransformer.Scope? = null","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.parent","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/parent.html","searchKeys":["parent","var parent: ComposableFunctionBodyTransformer.Scope? = null","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.parent"]},{"name":"var parent: PathPartInfo? = null","description":"androidx.compose.compiler.plugins.kotlin.lower.PathPartInfo.parent","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-path-part-info/parent.html","searchKeys":["parent","var parent: PathPartInfo? = null","androidx.compose.compiler.plugins.kotlin.lower.PathPartInfo.parent"]},{"name":"var prev: PathPartInfo? = null","description":"androidx.compose.compiler.plugins.kotlin.lower.PathPartInfo.prev","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-path-part-info/prev.html","searchKeys":["prev","var prev: PathPartInfo? = null","androidx.compose.compiler.plugins.kotlin.lower.PathPartInfo.prev"]},{"name":"var realValueParamCount: Int = 0","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.FunctionScope.realValueParamCount","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-function-scope/real-value-param-count.html","searchKeys":["realValueParamCount","var realValueParamCount: Int = 0","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.FunctionScope.realValueParamCount"]},{"name":"var slotCount: Int = 0","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.FunctionScope.slotCount","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-function-scope/slot-count.html","searchKeys":["slotCount","var slotCount: Int = 0","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.FunctionScope.slotCount"]},{"name":"var stability: Stability","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.ParamMeta.stability","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-param-meta/stability.html","searchKeys":["stability","var stability: Stability","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.ParamMeta.stability"]},{"name":"var used: Boolean = false","description":"androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.SourceLocation.used","location":"compose/compiler-hosted/compiler-hosted/androidx.compose.compiler.plugins.kotlin.lower/-composable-function-body-transformer/-scope/-source-location/used.html","searchKeys":["used","var used: Boolean = false","androidx.compose.compiler.plugins.kotlin.lower.ComposableFunctionBodyTransformer.Scope.SourceLocation.used"]},{"name":"abstract val defaultExpression: String?","description":"app.cash.treehouse.schema.parser.Trait.defaultExpression","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-trait/default-expression.html","searchKeys":["defaultExpression","abstract val defaultExpression: String?","app.cash.treehouse.schema.parser.Trait.defaultExpression"]},{"name":"abstract val name: String","description":"app.cash.treehouse.schema.parser.Trait.name","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-trait/name.html","searchKeys":["name","abstract val name: String","app.cash.treehouse.schema.parser.Trait.name"]},{"name":"abstract val tag: Int","description":"app.cash.treehouse.schema.parser.Trait.tag","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-trait/tag.html","searchKeys":["tag","abstract val tag: Int","app.cash.treehouse.schema.parser.Trait.tag"]},{"name":"data class Children(tag: Int, name: String) : Trait","description":"app.cash.treehouse.schema.parser.Children","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-children/index.html","searchKeys":["Children","data class Children(tag: Int, name: String) : Trait","app.cash.treehouse.schema.parser.Children"]},{"name":"data class Event(tag: Int, name: String, defaultExpression: String?) : Trait","description":"app.cash.treehouse.schema.parser.Event","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-event/index.html","searchKeys":["Event","data class Event(tag: Int, name: String, defaultExpression: String?) : Trait","app.cash.treehouse.schema.parser.Event"]},{"name":"data class Property(tag: Int, name: String, type: KType, defaultExpression: String?) : Trait","description":"app.cash.treehouse.schema.parser.Property","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-property/index.html","searchKeys":["Property","data class Property(tag: Int, name: String, type: KType, defaultExpression: String?) : Trait","app.cash.treehouse.schema.parser.Property"]},{"name":"data class Schema(name: String, package: String, widgets: List<Widget>)","description":"app.cash.treehouse.schema.parser.Schema","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-schema/index.html","searchKeys":["Schema","data class Schema(name: String, package: String, widgets: List<Widget>)","app.cash.treehouse.schema.parser.Schema"]},{"name":"data class Widget(tag: Int, type: KClass<*>, traits: List<Trait>)","description":"app.cash.treehouse.schema.parser.Widget","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-widget/index.html","searchKeys":["Widget","data class Widget(tag: Int, type: KClass<*>, traits: List<Trait>)","app.cash.treehouse.schema.parser.Widget"]},{"name":"fun Children(tag: Int, name: String)","description":"app.cash.treehouse.schema.parser.Children.Children","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-children/-children.html","searchKeys":["Children","fun Children(tag: Int, name: String)","app.cash.treehouse.schema.parser.Children.Children"]},{"name":"fun Event(tag: Int, name: String, defaultExpression: String?)","description":"app.cash.treehouse.schema.parser.Event.Event","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-event/-event.html","searchKeys":["Event","fun Event(tag: Int, name: String, defaultExpression: String?)","app.cash.treehouse.schema.parser.Event.Event"]},{"name":"fun Property(tag: Int, name: String, type: KType, defaultExpression: String?)","description":"app.cash.treehouse.schema.parser.Property.Property","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-property/-property.html","searchKeys":["Property","fun Property(tag: Int, name: String, type: KType, defaultExpression: String?)","app.cash.treehouse.schema.parser.Property.Property"]},{"name":"fun Schema(name: String, package: String, widgets: List<Widget>)","description":"app.cash.treehouse.schema.parser.Schema.Schema","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-schema/-schema.html","searchKeys":["Schema","fun Schema(name: String, package: String, widgets: List<Widget>)","app.cash.treehouse.schema.parser.Schema.Schema"]},{"name":"fun Widget(tag: Int, type: KClass<*>, traits: List<Trait>)","description":"app.cash.treehouse.schema.parser.Widget.Widget","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-widget/-widget.html","searchKeys":["Widget","fun Widget(tag: Int, type: KClass<*>, traits: List<Trait>)","app.cash.treehouse.schema.parser.Widget.Widget"]},{"name":"fun parseSchema(schemaType: KClass<*>): Schema","description":"app.cash.treehouse.schema.parser.parseSchema","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/parse-schema.html","searchKeys":["parseSchema","fun parseSchema(schemaType: KClass<*>): Schema","app.cash.treehouse.schema.parser.parseSchema"]},{"name":"open override val defaultExpression: String?","description":"app.cash.treehouse.schema.parser.Children.defaultExpression","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-children/default-expression.html","searchKeys":["defaultExpression","open override val defaultExpression: String?","app.cash.treehouse.schema.parser.Children.defaultExpression"]},{"name":"open override val defaultExpression: String?","description":"app.cash.treehouse.schema.parser.Event.defaultExpression","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-event/default-expression.html","searchKeys":["defaultExpression","open override val defaultExpression: String?","app.cash.treehouse.schema.parser.Event.defaultExpression"]},{"name":"open override val defaultExpression: String?","description":"app.cash.treehouse.schema.parser.Property.defaultExpression","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-property/default-expression.html","searchKeys":["defaultExpression","open override val defaultExpression: String?","app.cash.treehouse.schema.parser.Property.defaultExpression"]},{"name":"open override val name: String","description":"app.cash.treehouse.schema.parser.Children.name","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-children/name.html","searchKeys":["name","open override val name: String","app.cash.treehouse.schema.parser.Children.name"]},{"name":"open override val name: String","description":"app.cash.treehouse.schema.parser.Event.name","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-event/name.html","searchKeys":["name","open override val name: String","app.cash.treehouse.schema.parser.Event.name"]},{"name":"open override val name: String","description":"app.cash.treehouse.schema.parser.Property.name","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-property/name.html","searchKeys":["name","open override val name: String","app.cash.treehouse.schema.parser.Property.name"]},{"name":"open override val tag: Int","description":"app.cash.treehouse.schema.parser.Children.tag","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-children/tag.html","searchKeys":["tag","open override val tag: Int","app.cash.treehouse.schema.parser.Children.tag"]},{"name":"open override val tag: Int","description":"app.cash.treehouse.schema.parser.Event.tag","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-event/tag.html","searchKeys":["tag","open override val tag: Int","app.cash.treehouse.schema.parser.Event.tag"]},{"name":"open override val tag: Int","description":"app.cash.treehouse.schema.parser.Property.tag","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-property/tag.html","searchKeys":["tag","open override val tag: Int","app.cash.treehouse.schema.parser.Property.tag"]},{"name":"sealed class Trait","description":"app.cash.treehouse.schema.parser.Trait","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-trait/index.html","searchKeys":["Trait","sealed class Trait","app.cash.treehouse.schema.parser.Trait"]},{"name":"val name: String","description":"app.cash.treehouse.schema.parser.Schema.name","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-schema/name.html","searchKeys":["name","val name: String","app.cash.treehouse.schema.parser.Schema.name"]},{"name":"val package: String","description":"app.cash.treehouse.schema.parser.Schema.package","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-schema/package.html","searchKeys":["package","val package: String","app.cash.treehouse.schema.parser.Schema.package"]},{"name":"val tag: Int","description":"app.cash.treehouse.schema.parser.Widget.tag","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-widget/tag.html","searchKeys":["tag","val tag: Int","app.cash.treehouse.schema.parser.Widget.tag"]},{"name":"val traits: List<Trait>","description":"app.cash.treehouse.schema.parser.Widget.traits","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-widget/traits.html","searchKeys":["traits","val traits: List<Trait>","app.cash.treehouse.schema.parser.Widget.traits"]},{"name":"val type: KClass<*>","description":"app.cash.treehouse.schema.parser.Widget.type","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-widget/type.html","searchKeys":["type","val type: KClass<*>","app.cash.treehouse.schema.parser.Widget.type"]},{"name":"val type: KType","description":"app.cash.treehouse.schema.parser.Property.type","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-property/type.html","searchKeys":["type","val type: KType","app.cash.treehouse.schema.parser.Property.type"]},{"name":"val widgets: List<Widget>","description":"app.cash.treehouse.schema.parser.Schema.widgets","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-schema/widgets.html","searchKeys":["widgets","val widgets: List<Widget>","app.cash.treehouse.schema.parser.Schema.widgets"]}]