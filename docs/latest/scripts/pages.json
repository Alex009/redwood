[{"name":"fun main(vararg args: String)","description":"app.cash.treehouse.schema.generator.main","location":"treehouse-schema-generator/treehouse-schema-generator/app.cash.treehouse.schema.generator/main.html","searchKeys":["main","fun main(vararg args: String)","app.cash.treehouse.schema.generator.main"]},{"name":"Compose(\"--compose\", \"app.cash.treehouse:treehouse-compose:$treehouseVersion\")","description":"app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.Strategy.Compose","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-schema-generator-plugin/-strategy/-compose/index.html","searchKeys":["Compose","Compose(\"--compose\", \"app.cash.treehouse:treehouse-compose:$treehouseVersion\")","app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.Strategy.Compose"]},{"name":"Widget(\"--widget\", \"app.cash.treehouse:treehouse-widget:$treehouseVersion\")","description":"app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.Strategy.Widget","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-schema-generator-plugin/-strategy/-widget/index.html","searchKeys":["Widget","Widget(\"--widget\", \"app.cash.treehouse:treehouse-widget:$treehouseVersion\")","app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.Strategy.Widget"]},{"name":"abstract class TreehouseSchemaGeneratorPlugin(strategy: TreehouseSchemaGeneratorPlugin.Strategy) : Plugin<Project> ","description":"app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-schema-generator-plugin/index.html","searchKeys":["TreehouseSchemaGeneratorPlugin","abstract class TreehouseSchemaGeneratorPlugin(strategy: TreehouseSchemaGeneratorPlugin.Strategy) : Plugin<Project> ","app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin"]},{"name":"abstract var schema: String?","description":"app.cash.treehouse.gradle.TreehouseSchemaExtension.schema","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-schema-extension/schema.html","searchKeys":["schema","abstract var schema: String?","app.cash.treehouse.gradle.TreehouseSchemaExtension.schema"]},{"name":"class TreehousePlugin : KotlinCompilerPluginSupportPlugin","description":"app.cash.treehouse.gradle.TreehousePlugin","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-plugin/index.html","searchKeys":["TreehousePlugin","class TreehousePlugin : KotlinCompilerPluginSupportPlugin","app.cash.treehouse.gradle.TreehousePlugin"]},{"name":"class TreehouseSchemaComposePlugin : TreehouseSchemaGeneratorPlugin","description":"app.cash.treehouse.gradle.TreehouseSchemaComposePlugin","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-schema-compose-plugin/index.html","searchKeys":["TreehouseSchemaComposePlugin","class TreehouseSchemaComposePlugin : TreehouseSchemaGeneratorPlugin","app.cash.treehouse.gradle.TreehouseSchemaComposePlugin"]},{"name":"class TreehouseSchemaPlugin : Plugin<Project> ","description":"app.cash.treehouse.gradle.TreehouseSchemaPlugin","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-schema-plugin/index.html","searchKeys":["TreehouseSchemaPlugin","class TreehouseSchemaPlugin : Plugin<Project> ","app.cash.treehouse.gradle.TreehouseSchemaPlugin"]},{"name":"class TreehouseSchemaWidgetPlugin : TreehouseSchemaGeneratorPlugin","description":"app.cash.treehouse.gradle.TreehouseSchemaWidgetPlugin","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-schema-widget-plugin/index.html","searchKeys":["TreehouseSchemaWidgetPlugin","class TreehouseSchemaWidgetPlugin : TreehouseSchemaGeneratorPlugin","app.cash.treehouse.gradle.TreehouseSchemaWidgetPlugin"]},{"name":"enum Strategy : Enum<TreehouseSchemaGeneratorPlugin.Strategy> ","description":"app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.Strategy","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-schema-generator-plugin/-strategy/index.html","searchKeys":["Strategy","enum Strategy : Enum<TreehouseSchemaGeneratorPlugin.Strategy> ","app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.Strategy"]},{"name":"fun TreehousePlugin()","description":"app.cash.treehouse.gradle.TreehousePlugin.TreehousePlugin","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-plugin/-treehouse-plugin.html","searchKeys":["TreehousePlugin","fun TreehousePlugin()","app.cash.treehouse.gradle.TreehousePlugin.TreehousePlugin"]},{"name":"fun TreehouseSchemaComposePlugin()","description":"app.cash.treehouse.gradle.TreehouseSchemaComposePlugin.TreehouseSchemaComposePlugin","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-schema-compose-plugin/-treehouse-schema-compose-plugin.html","searchKeys":["TreehouseSchemaComposePlugin","fun TreehouseSchemaComposePlugin()","app.cash.treehouse.gradle.TreehouseSchemaComposePlugin.TreehouseSchemaComposePlugin"]},{"name":"fun TreehouseSchemaGeneratorPlugin(strategy: TreehouseSchemaGeneratorPlugin.Strategy)","description":"app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.TreehouseSchemaGeneratorPlugin","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-schema-generator-plugin/-treehouse-schema-generator-plugin.html","searchKeys":["TreehouseSchemaGeneratorPlugin","fun TreehouseSchemaGeneratorPlugin(strategy: TreehouseSchemaGeneratorPlugin.Strategy)","app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.TreehouseSchemaGeneratorPlugin"]},{"name":"fun TreehouseSchemaPlugin()","description":"app.cash.treehouse.gradle.TreehouseSchemaPlugin.TreehouseSchemaPlugin","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-schema-plugin/-treehouse-schema-plugin.html","searchKeys":["TreehouseSchemaPlugin","fun TreehouseSchemaPlugin()","app.cash.treehouse.gradle.TreehouseSchemaPlugin.TreehouseSchemaPlugin"]},{"name":"fun TreehouseSchemaWidgetPlugin()","description":"app.cash.treehouse.gradle.TreehouseSchemaWidgetPlugin.TreehouseSchemaWidgetPlugin","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-schema-widget-plugin/-treehouse-schema-widget-plugin.html","searchKeys":["TreehouseSchemaWidgetPlugin","fun TreehouseSchemaWidgetPlugin()","app.cash.treehouse.gradle.TreehouseSchemaWidgetPlugin.TreehouseSchemaWidgetPlugin"]},{"name":"interface TreehouseSchemaExtension","description":"app.cash.treehouse.gradle.TreehouseSchemaExtension","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-schema-extension/index.html","searchKeys":["TreehouseSchemaExtension","interface TreehouseSchemaExtension","app.cash.treehouse.gradle.TreehouseSchemaExtension"]},{"name":"internal val dependencyCoordinate: String","description":"app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.Strategy.Compose.dependencyCoordinate","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-schema-generator-plugin/-strategy/-compose/dependency-coordinate.html","searchKeys":["dependencyCoordinate","internal val dependencyCoordinate: String","app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.Strategy.Compose.dependencyCoordinate"]},{"name":"internal val dependencyCoordinate: String","description":"app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.Strategy.Widget.dependencyCoordinate","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-schema-generator-plugin/-strategy/-widget/dependency-coordinate.html","searchKeys":["dependencyCoordinate","internal val dependencyCoordinate: String","app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.Strategy.Widget.dependencyCoordinate"]},{"name":"internal val generatorFlag: String","description":"app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.Strategy.Compose.generatorFlag","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-schema-generator-plugin/-strategy/-compose/generator-flag.html","searchKeys":["generatorFlag","internal val generatorFlag: String","app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.Strategy.Compose.generatorFlag"]},{"name":"internal val generatorFlag: String","description":"app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.Strategy.Widget.generatorFlag","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-schema-generator-plugin/-strategy/-widget/generator-flag.html","searchKeys":["generatorFlag","internal val generatorFlag: String","app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.Strategy.Widget.generatorFlag"]},{"name":"open override fun apply(project: Project)","description":"app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.apply","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-schema-generator-plugin/apply.html","searchKeys":["apply","open override fun apply(project: Project)","app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.apply"]},{"name":"open override fun apply(project: Project)","description":"app.cash.treehouse.gradle.TreehouseSchemaPlugin.apply","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-schema-plugin/apply.html","searchKeys":["apply","open override fun apply(project: Project)","app.cash.treehouse.gradle.TreehouseSchemaPlugin.apply"]},{"name":"open override fun applyToCompilation(kotlinCompilation: KotlinCompilation<*>): Provider<List<SubpluginOption>>","description":"app.cash.treehouse.gradle.TreehousePlugin.applyToCompilation","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-plugin/apply-to-compilation.html","searchKeys":["applyToCompilation","open override fun applyToCompilation(kotlinCompilation: KotlinCompilation<*>): Provider<List<SubpluginOption>>","app.cash.treehouse.gradle.TreehousePlugin.applyToCompilation"]},{"name":"open override fun getCompilerPluginId(): String","description":"app.cash.treehouse.gradle.TreehousePlugin.getCompilerPluginId","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-plugin/get-compiler-plugin-id.html","searchKeys":["getCompilerPluginId","open override fun getCompilerPluginId(): String","app.cash.treehouse.gradle.TreehousePlugin.getCompilerPluginId"]},{"name":"open override fun getPluginArtifact(): SubpluginArtifact","description":"app.cash.treehouse.gradle.TreehousePlugin.getPluginArtifact","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-plugin/get-plugin-artifact.html","searchKeys":["getPluginArtifact","open override fun getPluginArtifact(): SubpluginArtifact","app.cash.treehouse.gradle.TreehousePlugin.getPluginArtifact"]},{"name":"open override fun isApplicable(kotlinCompilation: KotlinCompilation<*>): Boolean","description":"app.cash.treehouse.gradle.TreehousePlugin.isApplicable","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-plugin/is-applicable.html","searchKeys":["isApplicable","open override fun isApplicable(kotlinCompilation: KotlinCompilation<*>): Boolean","app.cash.treehouse.gradle.TreehousePlugin.isApplicable"]},{"name":"val name: String","description":"app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.Strategy.Compose.name","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-schema-generator-plugin/-strategy/-compose/name.html","searchKeys":["name","val name: String","app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.Strategy.Compose.name"]},{"name":"val name: String","description":"app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.Strategy.Widget.name","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-schema-generator-plugin/-strategy/-widget/name.html","searchKeys":["name","val name: String","app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.Strategy.Widget.name"]},{"name":"val ordinal: Int","description":"app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.Strategy.Compose.ordinal","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-schema-generator-plugin/-strategy/-compose/ordinal.html","searchKeys":["ordinal","val ordinal: Int","app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.Strategy.Compose.ordinal"]},{"name":"val ordinal: Int","description":"app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.Strategy.Widget.ordinal","location":"treehouse-gradle-plugin/treehouse-gradle-plugin/app.cash.treehouse.gradle/-treehouse-schema-generator-plugin/-strategy/-widget/ordinal.html","searchKeys":["ordinal","val ordinal: Int","app.cash.treehouse.gradle.TreehouseSchemaGeneratorPlugin.Strategy.Widget.ordinal"]},{"name":"abstract fun apply(diff: Diff, events: (Event) -> Unit)","description":"app.cash.treehouse.widget.Display.apply","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-display/apply.html","searchKeys":["apply","abstract fun apply(diff: Diff, events: (Event) -> Unit)","app.cash.treehouse.widget.Display.apply"]},{"name":"abstract fun apply(diff: PropertyDiff, events: (Event) -> Unit)","description":"app.cash.treehouse.widget.Widget.apply","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-widget/apply.html","searchKeys":["apply","abstract fun apply(diff: PropertyDiff, events: (Event) -> Unit)","app.cash.treehouse.widget.Widget.apply"]},{"name":"abstract fun clear()","description":"app.cash.treehouse.widget.Widget.Children.clear","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-widget/-children/clear.html","searchKeys":["clear","abstract fun clear()","app.cash.treehouse.widget.Widget.Children.clear"]},{"name":"abstract fun create(kind: Int, id: Long): Widget<T>","description":"app.cash.treehouse.widget.Widget.Factory.create","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-widget/-factory/create.html","searchKeys":["create","abstract fun create(kind: Int, id: Long): Widget<T>","app.cash.treehouse.widget.Widget.Factory.create"]},{"name":"abstract fun insert(index: Int, widget: T)","description":"app.cash.treehouse.widget.Widget.Children.insert","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-widget/-children/insert.html","searchKeys":["insert","abstract fun insert(index: Int, widget: T)","app.cash.treehouse.widget.Widget.Children.insert"]},{"name":"abstract fun move(fromIndex: Int, toIndex: Int, count: Int)","description":"app.cash.treehouse.widget.Widget.Children.move","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-widget/-children/move.html","searchKeys":["move","abstract fun move(fromIndex: Int, toIndex: Int, count: Int)","app.cash.treehouse.widget.Widget.Children.move"]},{"name":"abstract fun remove(index: Int, count: Int)","description":"app.cash.treehouse.widget.Widget.Children.remove","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-widget/-children/remove.html","searchKeys":["remove","abstract fun remove(index: Int, count: Int)","app.cash.treehouse.widget.Widget.Children.remove"]},{"name":"abstract val value: T","description":"app.cash.treehouse.widget.Widget.value","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-widget/value.html","searchKeys":["value","abstract val value: T","app.cash.treehouse.widget.Widget.value"]},{"name":"class WidgetDisplay<T : Any>(root: Widget<T>, factory: Widget.Factory<T>) : Display","description":"app.cash.treehouse.widget.WidgetDisplay","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-widget-display/index.html","searchKeys":["WidgetDisplay","class WidgetDisplay<T : Any>(root: Widget<T>, factory: Widget.Factory<T>) : Display","app.cash.treehouse.widget.WidgetDisplay"]},{"name":"fun <T : Any> WidgetDisplay(root: Widget<T>, factory: Widget.Factory<T>)","description":"app.cash.treehouse.widget.WidgetDisplay.WidgetDisplay","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-widget-display/-widget-display.html","searchKeys":["WidgetDisplay","fun <T : Any> WidgetDisplay(root: Widget<T>, factory: Widget.Factory<T>)","app.cash.treehouse.widget.WidgetDisplay.WidgetDisplay"]},{"name":"interface Children<T : Any>","description":"app.cash.treehouse.widget.Widget.Children","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-widget/-children/index.html","searchKeys":["Children","interface Children<T : Any>","app.cash.treehouse.widget.Widget.Children"]},{"name":"interface Display","description":"app.cash.treehouse.widget.Display","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-display/index.html","searchKeys":["Display","interface Display","app.cash.treehouse.widget.Display"]},{"name":"interface Factory<T : Any>","description":"app.cash.treehouse.widget.Widget.Factory","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-widget/-factory/index.html","searchKeys":["Factory","interface Factory<T : Any>","app.cash.treehouse.widget.Widget.Factory"]},{"name":"interface Widget<T : Any>","description":"app.cash.treehouse.widget.Widget","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-widget/index.html","searchKeys":["Widget","interface Widget<T : Any>","app.cash.treehouse.widget.Widget"]},{"name":"open fun children(tag: Int): Widget.Children<T>","description":"app.cash.treehouse.widget.Widget.children","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-widget/children.html","searchKeys":["children","open fun children(tag: Int): Widget.Children<T>","app.cash.treehouse.widget.Widget.children"]},{"name":"open override fun apply(diff: Diff, events: (Event) -> Unit)","description":"app.cash.treehouse.widget.WidgetDisplay.apply","location":"treehouse-widget/treehouse-widget/app.cash.treehouse.widget/-widget-display/apply.html","searchKeys":["apply","open override fun apply(diff: Diff, events: (Event) -> Unit)","app.cash.treehouse.widget.WidgetDisplay.apply"]},{"name":"abstract fun appendDiff(diff: ChildrenDiff)","description":"app.cash.treehouse.compose.TreehouseScope.appendDiff","location":"treehouse-compose/treehouse-compose/app.cash.treehouse.compose/-treehouse-scope/append-diff.html","searchKeys":["appendDiff","abstract fun appendDiff(diff: ChildrenDiff)","app.cash.treehouse.compose.TreehouseScope.appendDiff"]},{"name":"abstract fun appendDiff(diff: PropertyDiff)","description":"app.cash.treehouse.compose.TreehouseScope.appendDiff","location":"treehouse-compose/treehouse-compose/app.cash.treehouse.compose/-treehouse-scope/append-diff.html","searchKeys":["appendDiff","abstract fun appendDiff(diff: PropertyDiff)","app.cash.treehouse.compose.TreehouseScope.appendDiff"]},{"name":"abstract fun cancel()","description":"app.cash.treehouse.compose.TreehouseComposition.cancel","location":"treehouse-compose/treehouse-compose/app.cash.treehouse.compose/-treehouse-composition/cancel.html","searchKeys":["cancel","abstract fun cancel()","app.cash.treehouse.compose.TreehouseComposition.cancel"]},{"name":"abstract fun nextId(): Long","description":"app.cash.treehouse.compose.TreehouseScope.nextId","location":"treehouse-compose/treehouse-compose/app.cash.treehouse.compose/-treehouse-scope/next-id.html","searchKeys":["nextId","abstract fun nextId(): Long","app.cash.treehouse.compose.TreehouseScope.nextId"]},{"name":"abstract fun sendEvent(event: Event)","description":"app.cash.treehouse.compose.TreehouseComposition.sendEvent","location":"treehouse-compose/treehouse-compose/app.cash.treehouse.compose/-treehouse-composition/send-event.html","searchKeys":["sendEvent","abstract fun sendEvent(event: Event)","app.cash.treehouse.compose.TreehouseComposition.sendEvent"]},{"name":"abstract fun setContent(content: TreehouseScope.() -> Unit)","description":"app.cash.treehouse.compose.TreehouseComposition.setContent","location":"treehouse-compose/treehouse-compose/app.cash.treehouse.compose/-treehouse-composition/set-content.html","searchKeys":["setContent","abstract fun setContent(content: TreehouseScope.() -> Unit)","app.cash.treehouse.compose.TreehouseComposition.setContent"]},{"name":"class AndroidUiDispatcher : CoroutineDispatcher","description":"app.cash.treehouse.compose.AndroidUiDispatcher","location":"treehouse-compose/treehouse-compose/app.cash.treehouse.compose/-android-ui-dispatcher/index.html","searchKeys":["AndroidUiDispatcher","class AndroidUiDispatcher : CoroutineDispatcher","app.cash.treehouse.compose.AndroidUiDispatcher"]},{"name":"class AndroidUiFrameClock(choreographer: Choreographer) : MonotonicFrameClock","description":"app.cash.treehouse.compose.AndroidUiFrameClock","location":"treehouse-compose/treehouse-compose/app.cash.treehouse.compose/-android-ui-frame-clock/index.html","searchKeys":["AndroidUiFrameClock","class AndroidUiFrameClock(choreographer: Choreographer) : MonotonicFrameClock","app.cash.treehouse.compose.AndroidUiFrameClock"]},{"name":"fun AndroidUiFrameClock(choreographer: Choreographer)","description":"app.cash.treehouse.compose.AndroidUiFrameClock.AndroidUiFrameClock","location":"treehouse-compose/treehouse-compose/app.cash.treehouse.compose/-android-ui-frame-clock/-android-ui-frame-clock.html","searchKeys":["AndroidUiFrameClock","fun AndroidUiFrameClock(choreographer: Choreographer)","app.cash.treehouse.compose.AndroidUiFrameClock.AndroidUiFrameClock"]},{"name":"fun TreehouseComposition(scope: CoroutineScope, diffs: (Diff) -> Unit): TreehouseComposition","description":"app.cash.treehouse.compose.TreehouseComposition","location":"treehouse-compose/treehouse-compose/app.cash.treehouse.compose/-treehouse-composition.html","searchKeys":["TreehouseComposition","fun TreehouseComposition(scope: CoroutineScope, diffs: (Diff) -> Unit): TreehouseComposition","app.cash.treehouse.compose.TreehouseComposition"]},{"name":"interface TreehouseComposition","description":"app.cash.treehouse.compose.TreehouseComposition","location":"treehouse-compose/treehouse-compose/app.cash.treehouse.compose/-treehouse-composition/index.html","searchKeys":["TreehouseComposition","interface TreehouseComposition","app.cash.treehouse.compose.TreehouseComposition"]},{"name":"interface TreehouseScope","description":"app.cash.treehouse.compose.TreehouseScope","location":"treehouse-compose/treehouse-compose/app.cash.treehouse.compose/-treehouse-scope/index.html","searchKeys":["TreehouseScope","interface TreehouseScope","app.cash.treehouse.compose.TreehouseScope"]},{"name":"object Companion","description":"app.cash.treehouse.compose.AndroidUiDispatcher.Companion","location":"treehouse-compose/treehouse-compose/app.cash.treehouse.compose/-android-ui-dispatcher/-companion/index.html","searchKeys":["Companion","object Companion","app.cash.treehouse.compose.AndroidUiDispatcher.Companion"]},{"name":"object WindowAnimationFrameClock","description":"app.cash.treehouse.compose.WindowAnimationFrameClock","location":"treehouse-compose/treehouse-compose/app.cash.treehouse.compose/-window-animation-frame-clock/index.html","searchKeys":["WindowAnimationFrameClock","object WindowAnimationFrameClock","app.cash.treehouse.compose.WindowAnimationFrameClock"]},{"name":"open override fun dispatch(context: CoroutineContext, block: Runnable)","description":"app.cash.treehouse.compose.AndroidUiDispatcher.dispatch","location":"treehouse-compose/treehouse-compose/app.cash.treehouse.compose/-android-ui-dispatcher/dispatch.html","searchKeys":["dispatch","open override fun dispatch(context: CoroutineContext, block: Runnable)","app.cash.treehouse.compose.AndroidUiDispatcher.dispatch"]},{"name":"open suspend fun <R> withFrameNanos(onFrame: (Long) -> R): R","description":"app.cash.treehouse.compose.WindowAnimationFrameClock.withFrameNanos","location":"treehouse-compose/treehouse-compose/app.cash.treehouse.compose/-window-animation-frame-clock/with-frame-nanos.html","searchKeys":["withFrameNanos","open suspend fun <R> withFrameNanos(onFrame: (Long) -> R): R","app.cash.treehouse.compose.WindowAnimationFrameClock.withFrameNanos"]},{"name":"open suspend override fun <R> withFrameNanos(onFrame: (Long) -> R): R","description":"app.cash.treehouse.compose.AndroidUiFrameClock.withFrameNanos","location":"treehouse-compose/treehouse-compose/app.cash.treehouse.compose/-android-ui-frame-clock/with-frame-nanos.html","searchKeys":["withFrameNanos","open suspend override fun <R> withFrameNanos(onFrame: (Long) -> R): R","app.cash.treehouse.compose.AndroidUiFrameClock.withFrameNanos"]},{"name":"val Main: CoroutineContext","description":"app.cash.treehouse.compose.AndroidUiDispatcher.Companion.Main","location":"treehouse-compose/treehouse-compose/app.cash.treehouse.compose/-android-ui-dispatcher/-companion/-main.html","searchKeys":["Main","val Main: CoroutineContext","app.cash.treehouse.compose.AndroidUiDispatcher.Companion.Main"]},{"name":"val choreographer: Choreographer","description":"app.cash.treehouse.compose.AndroidUiDispatcher.choreographer","location":"treehouse-compose/treehouse-compose/app.cash.treehouse.compose/-android-ui-dispatcher/choreographer.html","searchKeys":["choreographer","val choreographer: Choreographer","app.cash.treehouse.compose.AndroidUiDispatcher.choreographer"]},{"name":"val frameClock: MonotonicFrameClock","description":"app.cash.treehouse.compose.AndroidUiDispatcher.frameClock","location":"treehouse-compose/treehouse-compose/app.cash.treehouse.compose/-android-ui-dispatcher/frame-clock.html","searchKeys":["frameClock","val frameClock: MonotonicFrameClock","app.cash.treehouse.compose.AndroidUiDispatcher.frameClock"]},{"name":"annotation class Children(tag: Int)","description":"app.cash.treehouse.schema.Children","location":"treehouse-schema-annotations/treehouse-schema-annotations/app.cash.treehouse.schema/-children/index.html","searchKeys":["Children","annotation class Children(tag: Int)","app.cash.treehouse.schema.Children"]},{"name":"annotation class Default(expression: String)","description":"app.cash.treehouse.schema.Default","location":"treehouse-schema-annotations/treehouse-schema-annotations/app.cash.treehouse.schema/-default/index.html","searchKeys":["Default","annotation class Default(expression: String)","app.cash.treehouse.schema.Default"]},{"name":"annotation class Property(tag: Int)","description":"app.cash.treehouse.schema.Property","location":"treehouse-schema-annotations/treehouse-schema-annotations/app.cash.treehouse.schema/-property/index.html","searchKeys":["Property","annotation class Property(tag: Int)","app.cash.treehouse.schema.Property"]},{"name":"annotation class Schema(widgets: Array<KClass<*>>)","description":"app.cash.treehouse.schema.Schema","location":"treehouse-schema-annotations/treehouse-schema-annotations/app.cash.treehouse.schema/-schema/index.html","searchKeys":["Schema","annotation class Schema(widgets: Array<KClass<*>>)","app.cash.treehouse.schema.Schema"]},{"name":"annotation class Widget(tag: Int)","description":"app.cash.treehouse.schema.Widget","location":"treehouse-schema-annotations/treehouse-schema-annotations/app.cash.treehouse.schema/-widget/index.html","searchKeys":["Widget","annotation class Widget(tag: Int)","app.cash.treehouse.schema.Widget"]},{"name":"fun Children(tag: Int)","description":"app.cash.treehouse.schema.Children.Children","location":"treehouse-schema-annotations/treehouse-schema-annotations/app.cash.treehouse.schema/-children/-children.html","searchKeys":["Children","fun Children(tag: Int)","app.cash.treehouse.schema.Children.Children"]},{"name":"fun Default(expression: String)","description":"app.cash.treehouse.schema.Default.Default","location":"treehouse-schema-annotations/treehouse-schema-annotations/app.cash.treehouse.schema/-default/-default.html","searchKeys":["Default","fun Default(expression: String)","app.cash.treehouse.schema.Default.Default"]},{"name":"fun Property(tag: Int)","description":"app.cash.treehouse.schema.Property.Property","location":"treehouse-schema-annotations/treehouse-schema-annotations/app.cash.treehouse.schema/-property/-property.html","searchKeys":["Property","fun Property(tag: Int)","app.cash.treehouse.schema.Property.Property"]},{"name":"fun Schema(widgets: Array<KClass<*>>)","description":"app.cash.treehouse.schema.Schema.Schema","location":"treehouse-schema-annotations/treehouse-schema-annotations/app.cash.treehouse.schema/-schema/-schema.html","searchKeys":["Schema","fun Schema(widgets: Array<KClass<*>>)","app.cash.treehouse.schema.Schema.Schema"]},{"name":"fun Widget(tag: Int)","description":"app.cash.treehouse.schema.Widget.Widget","location":"treehouse-schema-annotations/treehouse-schema-annotations/app.cash.treehouse.schema/-widget/-widget.html","searchKeys":["Widget","fun Widget(tag: Int)","app.cash.treehouse.schema.Widget.Widget"]},{"name":"val expression: String","description":"app.cash.treehouse.schema.Default.expression","location":"treehouse-schema-annotations/treehouse-schema-annotations/app.cash.treehouse.schema/-default/expression.html","searchKeys":["expression","val expression: String","app.cash.treehouse.schema.Default.expression"]},{"name":"val tag: Int","description":"app.cash.treehouse.schema.Children.tag","location":"treehouse-schema-annotations/treehouse-schema-annotations/app.cash.treehouse.schema/-children/tag.html","searchKeys":["tag","val tag: Int","app.cash.treehouse.schema.Children.tag"]},{"name":"val tag: Int","description":"app.cash.treehouse.schema.Property.tag","location":"treehouse-schema-annotations/treehouse-schema-annotations/app.cash.treehouse.schema/-property/tag.html","searchKeys":["tag","val tag: Int","app.cash.treehouse.schema.Property.tag"]},{"name":"val tag: Int","description":"app.cash.treehouse.schema.Widget.tag","location":"treehouse-schema-annotations/treehouse-schema-annotations/app.cash.treehouse.schema/-widget/tag.html","searchKeys":["tag","val tag: Int","app.cash.treehouse.schema.Widget.tag"]},{"name":"val widgets: Array<KClass<*>>","description":"app.cash.treehouse.schema.Schema.widgets","location":"treehouse-schema-annotations/treehouse-schema-annotations/app.cash.treehouse.schema/-schema/widgets.html","searchKeys":["widgets","val widgets: Array<KClass<*>>","app.cash.treehouse.schema.Schema.widgets"]},{"name":"abstract val id: Long","description":"app.cash.treehouse.protocol.ChildrenDiff.id","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/id.html","searchKeys":["id","abstract val id: Long","app.cash.treehouse.protocol.ChildrenDiff.id"]},{"name":"abstract val tag: Int","description":"app.cash.treehouse.protocol.ChildrenDiff.tag","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/tag.html","searchKeys":["tag","abstract val tag: Int","app.cash.treehouse.protocol.ChildrenDiff.tag"]},{"name":"const val RootChildrenTag: Int = 1","description":"app.cash.treehouse.protocol.ChildrenDiff.Companion.RootChildrenTag","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/-companion/-root-children-tag.html","searchKeys":["RootChildrenTag","const val RootChildrenTag: Int = 1","app.cash.treehouse.protocol.ChildrenDiff.Companion.RootChildrenTag"]},{"name":"const val RootId: Long = 0L","description":"app.cash.treehouse.protocol.ChildrenDiff.Companion.RootId","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/-companion/-root-id.html","searchKeys":["RootId","const val RootId: Long = 0L","app.cash.treehouse.protocol.ChildrenDiff.Companion.RootId"]},{"name":"data class Diff(childrenDiffs: List<ChildrenDiff>, propertyDiffs: List<PropertyDiff>)","description":"app.cash.treehouse.protocol.Diff","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-diff/index.html","searchKeys":["Diff","data class Diff(childrenDiffs: List<ChildrenDiff>, propertyDiffs: List<PropertyDiff>)","app.cash.treehouse.protocol.Diff"]},{"name":"data class Event(id: Long, tag: Int, value: Any?)","description":"app.cash.treehouse.protocol.Event","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-event/index.html","searchKeys":["Event","data class Event(id: Long, tag: Int, value: Any?)","app.cash.treehouse.protocol.Event"]},{"name":"data class Insert(id: Long, tag: Int, childId: Long, kind: Int, index: Int) : ChildrenDiff","description":"app.cash.treehouse.protocol.ChildrenDiff.Insert","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/-insert/index.html","searchKeys":["Insert","data class Insert(id: Long, tag: Int, childId: Long, kind: Int, index: Int) : ChildrenDiff","app.cash.treehouse.protocol.ChildrenDiff.Insert"]},{"name":"data class Move(id: Long, tag: Int, fromIndex: Int, toIndex: Int, count: Int) : ChildrenDiff","description":"app.cash.treehouse.protocol.ChildrenDiff.Move","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/-move/index.html","searchKeys":["Move","data class Move(id: Long, tag: Int, fromIndex: Int, toIndex: Int, count: Int) : ChildrenDiff","app.cash.treehouse.protocol.ChildrenDiff.Move"]},{"name":"data class PropertyDiff(id: Long, tag: Int, value: Any?)","description":"app.cash.treehouse.protocol.PropertyDiff","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-property-diff/index.html","searchKeys":["PropertyDiff","data class PropertyDiff(id: Long, tag: Int, value: Any?)","app.cash.treehouse.protocol.PropertyDiff"]},{"name":"data class Remove(id: Long, tag: Int, index: Int, count: Int) : ChildrenDiff","description":"app.cash.treehouse.protocol.ChildrenDiff.Remove","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/-remove/index.html","searchKeys":["Remove","data class Remove(id: Long, tag: Int, index: Int, count: Int) : ChildrenDiff","app.cash.treehouse.protocol.ChildrenDiff.Remove"]},{"name":"fun Diff(childrenDiffs: List<ChildrenDiff> = emptyList(), propertyDiffs: List<PropertyDiff> = emptyList())","description":"app.cash.treehouse.protocol.Diff.Diff","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-diff/-diff.html","searchKeys":["Diff","fun Diff(childrenDiffs: List<ChildrenDiff> = emptyList(), propertyDiffs: List<PropertyDiff> = emptyList())","app.cash.treehouse.protocol.Diff.Diff"]},{"name":"fun Event(id: Long, tag: Int, value: Any?)","description":"app.cash.treehouse.protocol.Event.Event","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-event/-event.html","searchKeys":["Event","fun Event(id: Long, tag: Int, value: Any?)","app.cash.treehouse.protocol.Event.Event"]},{"name":"fun Insert(id: Long, tag: Int, childId: Long, kind: Int, index: Int)","description":"app.cash.treehouse.protocol.ChildrenDiff.Insert.Insert","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/-insert/-insert.html","searchKeys":["Insert","fun Insert(id: Long, tag: Int, childId: Long, kind: Int, index: Int)","app.cash.treehouse.protocol.ChildrenDiff.Insert.Insert"]},{"name":"fun Move(id: Long, tag: Int, fromIndex: Int, toIndex: Int, count: Int)","description":"app.cash.treehouse.protocol.ChildrenDiff.Move.Move","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/-move/-move.html","searchKeys":["Move","fun Move(id: Long, tag: Int, fromIndex: Int, toIndex: Int, count: Int)","app.cash.treehouse.protocol.ChildrenDiff.Move.Move"]},{"name":"fun PropertyDiff(id: Long, tag: Int, value: Any?)","description":"app.cash.treehouse.protocol.PropertyDiff.PropertyDiff","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-property-diff/-property-diff.html","searchKeys":["PropertyDiff","fun PropertyDiff(id: Long, tag: Int, value: Any?)","app.cash.treehouse.protocol.PropertyDiff.PropertyDiff"]},{"name":"fun Remove(id: Long, tag: Int, index: Int, count: Int)","description":"app.cash.treehouse.protocol.ChildrenDiff.Remove.Remove","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/-remove/-remove.html","searchKeys":["Remove","fun Remove(id: Long, tag: Int, index: Int, count: Int)","app.cash.treehouse.protocol.ChildrenDiff.Remove.Remove"]},{"name":"object Clear : ChildrenDiff","description":"app.cash.treehouse.protocol.ChildrenDiff.Clear","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/-clear/index.html","searchKeys":["Clear","object Clear : ChildrenDiff","app.cash.treehouse.protocol.ChildrenDiff.Clear"]},{"name":"object Companion","description":"app.cash.treehouse.protocol.ChildrenDiff.Companion","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/-companion/index.html","searchKeys":["Companion","object Companion","app.cash.treehouse.protocol.ChildrenDiff.Companion"]},{"name":"open override val id: Long","description":"app.cash.treehouse.protocol.ChildrenDiff.Clear.id","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/-clear/id.html","searchKeys":["id","open override val id: Long","app.cash.treehouse.protocol.ChildrenDiff.Clear.id"]},{"name":"open override val id: Long","description":"app.cash.treehouse.protocol.ChildrenDiff.Insert.id","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/-insert/id.html","searchKeys":["id","open override val id: Long","app.cash.treehouse.protocol.ChildrenDiff.Insert.id"]},{"name":"open override val id: Long","description":"app.cash.treehouse.protocol.ChildrenDiff.Move.id","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/-move/id.html","searchKeys":["id","open override val id: Long","app.cash.treehouse.protocol.ChildrenDiff.Move.id"]},{"name":"open override val id: Long","description":"app.cash.treehouse.protocol.ChildrenDiff.Remove.id","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/-remove/id.html","searchKeys":["id","open override val id: Long","app.cash.treehouse.protocol.ChildrenDiff.Remove.id"]},{"name":"open override val tag: Int","description":"app.cash.treehouse.protocol.ChildrenDiff.Clear.tag","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/-clear/tag.html","searchKeys":["tag","open override val tag: Int","app.cash.treehouse.protocol.ChildrenDiff.Clear.tag"]},{"name":"open override val tag: Int","description":"app.cash.treehouse.protocol.ChildrenDiff.Insert.tag","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/-insert/tag.html","searchKeys":["tag","open override val tag: Int","app.cash.treehouse.protocol.ChildrenDiff.Insert.tag"]},{"name":"open override val tag: Int","description":"app.cash.treehouse.protocol.ChildrenDiff.Move.tag","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/-move/tag.html","searchKeys":["tag","open override val tag: Int","app.cash.treehouse.protocol.ChildrenDiff.Move.tag"]},{"name":"open override val tag: Int","description":"app.cash.treehouse.protocol.ChildrenDiff.Remove.tag","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/-remove/tag.html","searchKeys":["tag","open override val tag: Int","app.cash.treehouse.protocol.ChildrenDiff.Remove.tag"]},{"name":"sealed class ChildrenDiff","description":"app.cash.treehouse.protocol.ChildrenDiff","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/index.html","searchKeys":["ChildrenDiff","sealed class ChildrenDiff","app.cash.treehouse.protocol.ChildrenDiff"]},{"name":"val childId: Long","description":"app.cash.treehouse.protocol.ChildrenDiff.Insert.childId","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/-insert/child-id.html","searchKeys":["childId","val childId: Long","app.cash.treehouse.protocol.ChildrenDiff.Insert.childId"]},{"name":"val childrenDiffs: List<ChildrenDiff>","description":"app.cash.treehouse.protocol.Diff.childrenDiffs","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-diff/children-diffs.html","searchKeys":["childrenDiffs","val childrenDiffs: List<ChildrenDiff>","app.cash.treehouse.protocol.Diff.childrenDiffs"]},{"name":"val count: Int","description":"app.cash.treehouse.protocol.ChildrenDiff.Move.count","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/-move/count.html","searchKeys":["count","val count: Int","app.cash.treehouse.protocol.ChildrenDiff.Move.count"]},{"name":"val count: Int","description":"app.cash.treehouse.protocol.ChildrenDiff.Remove.count","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/-remove/count.html","searchKeys":["count","val count: Int","app.cash.treehouse.protocol.ChildrenDiff.Remove.count"]},{"name":"val fromIndex: Int","description":"app.cash.treehouse.protocol.ChildrenDiff.Move.fromIndex","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/-move/from-index.html","searchKeys":["fromIndex","val fromIndex: Int","app.cash.treehouse.protocol.ChildrenDiff.Move.fromIndex"]},{"name":"val id: Long","description":"app.cash.treehouse.protocol.Event.id","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-event/id.html","searchKeys":["id","val id: Long","app.cash.treehouse.protocol.Event.id"]},{"name":"val id: Long","description":"app.cash.treehouse.protocol.PropertyDiff.id","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-property-diff/id.html","searchKeys":["id","val id: Long","app.cash.treehouse.protocol.PropertyDiff.id"]},{"name":"val index: Int","description":"app.cash.treehouse.protocol.ChildrenDiff.Insert.index","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/-insert/--index--.html","searchKeys":["index","val index: Int","app.cash.treehouse.protocol.ChildrenDiff.Insert.index"]},{"name":"val index: Int","description":"app.cash.treehouse.protocol.ChildrenDiff.Remove.index","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/-remove/--index--.html","searchKeys":["index","val index: Int","app.cash.treehouse.protocol.ChildrenDiff.Remove.index"]},{"name":"val kind: Int","description":"app.cash.treehouse.protocol.ChildrenDiff.Insert.kind","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/-insert/kind.html","searchKeys":["kind","val kind: Int","app.cash.treehouse.protocol.ChildrenDiff.Insert.kind"]},{"name":"val propertyDiffs: List<PropertyDiff>","description":"app.cash.treehouse.protocol.Diff.propertyDiffs","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-diff/property-diffs.html","searchKeys":["propertyDiffs","val propertyDiffs: List<PropertyDiff>","app.cash.treehouse.protocol.Diff.propertyDiffs"]},{"name":"val tag: Int","description":"app.cash.treehouse.protocol.Event.tag","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-event/tag.html","searchKeys":["tag","val tag: Int","app.cash.treehouse.protocol.Event.tag"]},{"name":"val tag: Int","description":"app.cash.treehouse.protocol.PropertyDiff.tag","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-property-diff/tag.html","searchKeys":["tag","val tag: Int","app.cash.treehouse.protocol.PropertyDiff.tag"]},{"name":"val toIndex: Int","description":"app.cash.treehouse.protocol.ChildrenDiff.Move.toIndex","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-children-diff/-move/to-index.html","searchKeys":["toIndex","val toIndex: Int","app.cash.treehouse.protocol.ChildrenDiff.Move.toIndex"]},{"name":"val value: Any?","description":"app.cash.treehouse.protocol.Event.value","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-event/value.html","searchKeys":["value","val value: Any?","app.cash.treehouse.protocol.Event.value"]},{"name":"val value: Any?","description":"app.cash.treehouse.protocol.PropertyDiff.value","location":"treehouse-protocol/treehouse-protocol/app.cash.treehouse.protocol/-property-diff/value.html","searchKeys":["value","val value: Any?","app.cash.treehouse.protocol.PropertyDiff.value"]},{"name":"Idle()","description":"androidx.compose.runtime.Recomposer.State.Idle","location":"compose/runtime/runtime/androidx.compose.runtime/-recomposer/-state/-idle/index.html","searchKeys":["Idle","Idle()","androidx.compose.runtime.Recomposer.State.Idle"]},{"name":"Inactive()","description":"androidx.compose.runtime.Recomposer.State.Inactive","location":"compose/runtime/runtime/androidx.compose.runtime/-recomposer/-state/-inactive/index.html","searchKeys":["Inactive","Inactive()","androidx.compose.runtime.Recomposer.State.Inactive"]},{"name":"InactivePendingWork()","description":"androidx.compose.runtime.Recomposer.State.InactivePendingWork","location":"compose/runtime/runtime/androidx.compose.runtime/-recomposer/-state/-inactive-pending-work/index.html","searchKeys":["InactivePendingWork","InactivePendingWork()","androidx.compose.runtime.Recomposer.State.InactivePendingWork"]},{"name":"PendingWork()","description":"androidx.compose.runtime.Recomposer.State.PendingWork","location":"compose/runtime/runtime/androidx.compose.runtime/-recomposer/-state/-pending-work/index.html","searchKeys":["PendingWork","PendingWork()","androidx.compose.runtime.Recomposer.State.PendingWork"]},{"name":"ShutDown()","description":"androidx.compose.runtime.Recomposer.State.ShutDown","location":"compose/runtime/runtime/androidx.compose.runtime/-recomposer/-state/-shut-down/index.html","searchKeys":["ShutDown","ShutDown()","androidx.compose.runtime.Recomposer.State.ShutDown"]},{"name":"ShuttingDown()","description":"androidx.compose.runtime.Recomposer.State.ShuttingDown","location":"compose/runtime/runtime/androidx.compose.runtime/-recomposer/-state/-shutting-down/index.html","searchKeys":["ShuttingDown","ShuttingDown()","androidx.compose.runtime.Recomposer.State.ShuttingDown"]},{"name":"abstract class AbstractApplier<T>(root: T) : Applier<T> ","description":"androidx.compose.runtime.AbstractApplier","location":"compose/runtime/runtime/androidx.compose.runtime/-abstract-applier/index.html","searchKeys":["AbstractApplier","abstract class AbstractApplier<T>(root: T) : Applier<T> ","androidx.compose.runtime.AbstractApplier"]},{"name":"abstract class CompositionContext","description":"androidx.compose.runtime.CompositionContext","location":"compose/runtime/runtime/androidx.compose.runtime/-composition-context/index.html","searchKeys":["CompositionContext","abstract class CompositionContext","androidx.compose.runtime.CompositionContext"]},{"name":"abstract class ProvidableCompositionLocal<T> : CompositionLocal<T> ","description":"androidx.compose.runtime.ProvidableCompositionLocal","location":"compose/runtime/runtime/androidx.compose.runtime/-providable-composition-local/index.html","searchKeys":["ProvidableCompositionLocal","abstract class ProvidableCompositionLocal<T> : CompositionLocal<T> ","androidx.compose.runtime.ProvidableCompositionLocal"]},{"name":"abstract class StateRecord","description":"androidx.compose.runtime.snapshots.StateRecord","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-state-record/index.html","searchKeys":["StateRecord","abstract class StateRecord","androidx.compose.runtime.snapshots.StateRecord"]},{"name":"abstract fun <T> consume(key: CompositionLocal<T>): T","description":"androidx.compose.runtime.Composer.consume","location":"compose/runtime/runtime/androidx.compose.runtime/-composer/consume.html","searchKeys":["consume","abstract fun <T> consume(key: CompositionLocal<T>): T","androidx.compose.runtime.Composer.consume"]},{"name":"abstract fun <T> createNode(factory: () -> T)","description":"androidx.compose.runtime.Composer.createNode","location":"compose/runtime/runtime/androidx.compose.runtime/-composer/create-node.html","searchKeys":["createNode","abstract fun <T> createNode(factory: () -> T)","androidx.compose.runtime.Composer.createNode"]},{"name":"abstract fun <V, T> apply(value: V, block: T.(V) -> Unit)","description":"androidx.compose.runtime.Composer.apply","location":"compose/runtime/runtime/androidx.compose.runtime/-composer/apply.html","searchKeys":["apply","abstract fun <V, T> apply(value: V, block: T.(V) -> Unit)","androidx.compose.runtime.Composer.apply"]},{"name":"abstract fun applyChanges()","description":"androidx.compose.runtime.ControlledComposition.applyChanges","location":"compose/runtime/runtime/androidx.compose.runtime/-controlled-composition/apply-changes.html","searchKeys":["applyChanges","abstract fun applyChanges()","androidx.compose.runtime.ControlledComposition.applyChanges"]},{"name":"abstract fun assign(value: StateRecord)","description":"androidx.compose.runtime.snapshots.StateRecord.assign","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-state-record/assign.html","searchKeys":["assign","abstract fun assign(value: StateRecord)","androidx.compose.runtime.snapshots.StateRecord.assign"]},{"name":"abstract fun buildContext(): CompositionContext","description":"androidx.compose.runtime.Composer.buildContext","location":"compose/runtime/runtime/androidx.compose.runtime/-composer/build-context.html","searchKeys":["buildContext","abstract fun buildContext(): CompositionContext","androidx.compose.runtime.Composer.buildContext"]},{"name":"abstract fun changed(value: Any?): Boolean","description":"androidx.compose.runtime.Composer.changed","location":"compose/runtime/runtime/androidx.compose.runtime/-composer/changed.html","searchKeys":["changed","abstract fun changed(value: Any?): Boolean","androidx.compose.runtime.Composer.changed"]},{"name":"abstract fun check()","description":"androidx.compose.runtime.snapshots.SnapshotApplyResult.check","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-apply-result/check.html","searchKeys":["check","abstract fun check()","androidx.compose.runtime.snapshots.SnapshotApplyResult.check"]},{"name":"abstract fun clear()","description":"androidx.compose.runtime.Applier.clear","location":"compose/runtime/runtime/androidx.compose.runtime/-applier/clear.html","searchKeys":["clear","abstract fun clear()","androidx.compose.runtime.Applier.clear"]},{"name":"abstract fun collectParameterInformation()","description":"androidx.compose.runtime.Composer.collectParameterInformation","location":"compose/runtime/runtime/androidx.compose.runtime/-composer/collect-parameter-information.html","searchKeys":["collectParameterInformation","abstract fun collectParameterInformation()","androidx.compose.runtime.Composer.collectParameterInformation"]},{"name":"abstract fun composeContent(content: () -> Unit)","description":"androidx.compose.runtime.ControlledComposition.composeContent","location":"compose/runtime/runtime/androidx.compose.runtime/-controlled-composition/compose-content.html","searchKeys":["composeContent","abstract fun composeContent(content: () -> Unit)","androidx.compose.runtime.ControlledComposition.composeContent"]},{"name":"abstract fun create(): StateRecord","description":"androidx.compose.runtime.snapshots.StateRecord.create","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-state-record/create.html","searchKeys":["create","abstract fun create(): StateRecord","androidx.compose.runtime.snapshots.StateRecord.create"]},{"name":"abstract fun dispose()","description":"androidx.compose.runtime.Composition.dispose","location":"compose/runtime/runtime/androidx.compose.runtime/-composition/dispose.html","searchKeys":["dispose","abstract fun dispose()","androidx.compose.runtime.Composition.dispose"]},{"name":"abstract fun dispose()","description":"androidx.compose.runtime.DisposableEffectResult.dispose","location":"compose/runtime/runtime/androidx.compose.runtime/-disposable-effect-result/dispose.html","searchKeys":["dispose","abstract fun dispose()","androidx.compose.runtime.DisposableEffectResult.dispose"]},{"name":"abstract fun dispose()","description":"androidx.compose.runtime.snapshots.ObserverHandle.dispose","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-observer-handle/dispose.html","searchKeys":["dispose","abstract fun dispose()","androidx.compose.runtime.snapshots.ObserverHandle.dispose"]},{"name":"abstract fun down(node: N)","description":"androidx.compose.runtime.Applier.down","location":"compose/runtime/runtime/androidx.compose.runtime/-applier/down.html","searchKeys":["down","abstract fun down(node: N)","androidx.compose.runtime.Applier.down"]},{"name":"abstract fun endDefaults()","description":"androidx.compose.runtime.Composer.endDefaults","location":"compose/runtime/runtime/androidx.compose.runtime/-composer/end-defaults.html","searchKeys":["endDefaults","abstract fun endDefaults()","androidx.compose.runtime.Composer.endDefaults"]},{"name":"abstract fun endMovableGroup()","description":"androidx.compose.runtime.Composer.endMovableGroup","location":"compose/runtime/runtime/androidx.compose.runtime/-composer/end-movable-group.html","searchKeys":["endMovableGroup","abstract fun endMovableGroup()","androidx.compose.runtime.Composer.endMovableGroup"]},{"name":"abstract fun endNode()","description":"androidx.compose.runtime.Composer.endNode","location":"compose/runtime/runtime/androidx.compose.runtime/-composer/end-node.html","searchKeys":["endNode","abstract fun endNode()","androidx.compose.runtime.Composer.endNode"]},{"name":"abstract fun endProviders()","description":"androidx.compose.runtime.Composer.endProviders","location":"compose/runtime/runtime/androidx.compose.runtime/-composer/end-providers.html","searchKeys":["endProviders","abstract fun endProviders()","androidx.compose.runtime.Composer.endProviders"]},{"name":"abstract fun endReplaceableGroup()","description":"androidx.compose.runtime.Composer.endReplaceableGroup","location":"compose/runtime/runtime/androidx.compose.runtime/-composer/end-replaceable-group.html","searchKeys":["endReplaceableGroup","abstract fun endReplaceableGroup()","androidx.compose.runtime.Composer.endReplaceableGroup"]},{"name":"abstract fun endRestartGroup(): ScopeUpdateScope?","description":"androidx.compose.runtime.Composer.endRestartGroup","location":"compose/runtime/runtime/androidx.compose.runtime/-composer/end-restart-group.html","searchKeys":["endRestartGroup","abstract fun endRestartGroup(): ScopeUpdateScope?","androidx.compose.runtime.Composer.endRestartGroup"]},{"name":"abstract fun equivalent(a: T, b: T): Boolean","description":"androidx.compose.runtime.SnapshotMutationPolicy.equivalent","location":"compose/runtime/runtime/androidx.compose.runtime/-snapshot-mutation-policy/equivalent.html","searchKeys":["equivalent","abstract fun equivalent(a: T, b: T): Boolean","androidx.compose.runtime.SnapshotMutationPolicy.equivalent"]},{"name":"abstract fun hasPendingChanges(): Boolean","description":"androidx.compose.runtime.snapshots.Snapshot.hasPendingChanges","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot/has-pending-changes.html","searchKeys":["hasPendingChanges","abstract fun hasPendingChanges(): Boolean","androidx.compose.runtime.snapshots.Snapshot.hasPendingChanges"]},{"name":"abstract fun insertBottomUp(index: Int, instance: N)","description":"androidx.compose.runtime.Applier.insertBottomUp","location":"compose/runtime/runtime/androidx.compose.runtime/-applier/insert-bottom-up.html","searchKeys":["insertBottomUp","abstract fun insertBottomUp(index: Int, instance: N)","androidx.compose.runtime.Applier.insertBottomUp"]},{"name":"abstract fun insertTopDown(index: Int, instance: N)","description":"androidx.compose.runtime.Applier.insertTopDown","location":"compose/runtime/runtime/androidx.compose.runtime/-applier/insert-top-down.html","searchKeys":["insertTopDown","abstract fun insertTopDown(index: Int, instance: N)","androidx.compose.runtime.Applier.insertTopDown"]},{"name":"abstract fun invalidate()","description":"androidx.compose.runtime.RecomposeScope.invalidate","location":"compose/runtime/runtime/androidx.compose.runtime/-recompose-scope/invalidate.html","searchKeys":["invalidate","abstract fun invalidate()","androidx.compose.runtime.RecomposeScope.invalidate"]},{"name":"abstract fun invalidateAll()","description":"androidx.compose.runtime.ControlledComposition.invalidateAll","location":"compose/runtime/runtime/androidx.compose.runtime/-controlled-composition/invalidate-all.html","searchKeys":["invalidateAll","abstract fun invalidateAll()","androidx.compose.runtime.ControlledComposition.invalidateAll"]},{"name":"abstract fun joinKey(left: Any?, right: Any?): Any","description":"androidx.compose.runtime.Composer.joinKey","location":"compose/runtime/runtime/androidx.compose.runtime/-composer/join-key.html","searchKeys":["joinKey","abstract fun joinKey(left: Any?, right: Any?): Any","androidx.compose.runtime.Composer.joinKey"]},{"name":"abstract fun move(from: Int, to: Int, count: Int)","description":"androidx.compose.runtime.Applier.move","location":"compose/runtime/runtime/androidx.compose.runtime/-applier/move.html","searchKeys":["move","abstract fun move(from: Int, to: Int, count: Int)","androidx.compose.runtime.Applier.move"]},{"name":"abstract fun onAbandoned()","description":"androidx.compose.runtime.RememberObserver.onAbandoned","location":"compose/runtime/runtime/androidx.compose.runtime/-remember-observer/on-abandoned.html","searchKeys":["onAbandoned","abstract fun onAbandoned()","androidx.compose.runtime.RememberObserver.onAbandoned"]},{"name":"abstract fun onForgotten()","description":"androidx.compose.runtime.RememberObserver.onForgotten","location":"compose/runtime/runtime/androidx.compose.runtime/-remember-observer/on-forgotten.html","searchKeys":["onForgotten","abstract fun onForgotten()","androidx.compose.runtime.RememberObserver.onForgotten"]},{"name":"abstract fun onRemembered()","description":"androidx.compose.runtime.RememberObserver.onRemembered","location":"compose/runtime/runtime/androidx.compose.runtime/-remember-observer/on-remembered.html","searchKeys":["onRemembered","abstract fun onRemembered()","androidx.compose.runtime.RememberObserver.onRemembered"]},{"name":"abstract fun prependStateRecord(value: StateRecord)","description":"androidx.compose.runtime.snapshots.StateObject.prependStateRecord","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-state-object/prepend-state-record.html","searchKeys":["prependStateRecord","abstract fun prependStateRecord(value: StateRecord)","androidx.compose.runtime.snapshots.StateObject.prependStateRecord"]},{"name":"abstract fun recompose(): Boolean","description":"androidx.compose.runtime.ControlledComposition.recompose","location":"compose/runtime/runtime/androidx.compose.runtime/-controlled-composition/recompose.html","searchKeys":["recompose","abstract fun recompose(): Boolean","androidx.compose.runtime.ControlledComposition.recompose"]},{"name":"abstract fun recordModificationsOf(values: Set<Any>)","description":"androidx.compose.runtime.ControlledComposition.recordModificationsOf","location":"compose/runtime/runtime/androidx.compose.runtime/-controlled-composition/record-modifications-of.html","searchKeys":["recordModificationsOf","abstract fun recordModificationsOf(values: Set<Any>)","androidx.compose.runtime.ControlledComposition.recordModificationsOf"]},{"name":"abstract fun recordReadOf(value: Any)","description":"androidx.compose.runtime.Composer.recordReadOf","location":"compose/runtime/runtime/androidx.compose.runtime/-composer/record-read-of.html","searchKeys":["recordReadOf","abstract fun recordReadOf(value: Any)","androidx.compose.runtime.Composer.recordReadOf"]},{"name":"abstract fun recordReadOf(value: Any)","description":"androidx.compose.runtime.ControlledComposition.recordReadOf","location":"compose/runtime/runtime/androidx.compose.runtime/-controlled-composition/record-read-of.html","searchKeys":["recordReadOf","abstract fun recordReadOf(value: Any)","androidx.compose.runtime.ControlledComposition.recordReadOf"]},{"name":"abstract fun recordSideEffect(effect: () -> Unit)","description":"androidx.compose.runtime.Composer.recordSideEffect","location":"compose/runtime/runtime/androidx.compose.runtime/-composer/record-side-effect.html","searchKeys":["recordSideEffect","abstract fun recordSideEffect(effect: () -> Unit)","androidx.compose.runtime.Composer.recordSideEffect"]},{"name":"abstract fun recordUsed(scope: RecomposeScope)","description":"androidx.compose.runtime.Composer.recordUsed","location":"compose/runtime/runtime/androidx.compose.runtime/-composer/record-used.html","searchKeys":["recordUsed","abstract fun recordUsed(scope: RecomposeScope)","androidx.compose.runtime.Composer.recordUsed"]},{"name":"abstract fun recordWriteOf(value: Any)","description":"androidx.compose.runtime.Composer.recordWriteOf","location":"compose/runtime/runtime/androidx.compose.runtime/-composer/record-write-of.html","searchKeys":["recordWriteOf","abstract fun recordWriteOf(value: Any)","androidx.compose.runtime.Composer.recordWriteOf"]},{"name":"abstract fun recordWriteOf(value: Any)","description":"androidx.compose.runtime.ControlledComposition.recordWriteOf","location":"compose/runtime/runtime/androidx.compose.runtime/-controlled-composition/record-write-of.html","searchKeys":["recordWriteOf","abstract fun recordWriteOf(value: Any)","androidx.compose.runtime.ControlledComposition.recordWriteOf"]},{"name":"abstract fun rememberedValue(): Any?","description":"androidx.compose.runtime.Composer.rememberedValue","location":"compose/runtime/runtime/androidx.compose.runtime/-composer/remembered-value.html","searchKeys":["rememberedValue","abstract fun rememberedValue(): Any?","androidx.compose.runtime.Composer.rememberedValue"]},{"name":"abstract fun remove(index: Int, count: Int)","description":"androidx.compose.runtime.Applier.remove","location":"compose/runtime/runtime/androidx.compose.runtime/-applier/remove.html","searchKeys":["remove","abstract fun remove(index: Int, count: Int)","androidx.compose.runtime.Applier.remove"]},{"name":"abstract fun setContent(content: () -> Unit)","description":"androidx.compose.runtime.Composition.setContent","location":"compose/runtime/runtime/androidx.compose.runtime/-composition/set-content.html","searchKeys":["setContent","abstract fun setContent(content: () -> Unit)","androidx.compose.runtime.Composition.setContent"]},{"name":"abstract fun skipCurrentGroup()","description":"androidx.compose.runtime.Composer.skipCurrentGroup","location":"compose/runtime/runtime/androidx.compose.runtime/-composer/skip-current-group.html","searchKeys":["skipCurrentGroup","abstract fun skipCurrentGroup()","androidx.compose.runtime.Composer.skipCurrentGroup"]},{"name":"abstract fun skipToGroupEnd()","description":"androidx.compose.runtime.Composer.skipToGroupEnd","location":"compose/runtime/runtime/androidx.compose.runtime/-composer/skip-to-group-end.html","searchKeys":["skipToGroupEnd","abstract fun skipToGroupEnd()","androidx.compose.runtime.Composer.skipToGroupEnd"]},{"name":"abstract fun startDefaults()","description":"androidx.compose.runtime.Composer.startDefaults","location":"compose/runtime/runtime/androidx.compose.runtime/-composer/start-defaults.html","searchKeys":["startDefaults","abstract fun startDefaults()","androidx.compose.runtime.Composer.startDefaults"]},{"name":"abstract fun startMovableGroup(key: Int, dataKey: Any?)","description":"androidx.compose.runtime.Composer.startMovableGroup","location":"compose/runtime/runtime/androidx.compose.runtime/-composer/start-movable-group.html","searchKeys":["startMovableGroup","abstract fun startMovableGroup(key: Int, dataKey: Any?)","androidx.compose.runtime.Composer.startMovableGroup"]},{"name":"abstract fun startMovableGroup(key: Int, dataKey: Any?, sourceInformation: String?)","description":"androidx.compose.runtime.Composer.startMovableGroup","location":"compose/runtime/runtime/androidx.compose.runtime/-composer/start-movable-group.html","searchKeys":["startMovableGroup","abstract fun startMovableGroup(key: Int, dataKey: Any?, sourceInformation: String?)","androidx.compose.runtime.Composer.startMovableGroup"]},{"name":"abstract fun startNode()","description":"androidx.compose.runtime.Composer.startNode","location":"compose/runtime/runtime/androidx.compose.runtime/-composer/start-node.html","searchKeys":["startNode","abstract fun startNode()","androidx.compose.runtime.Composer.startNode"]},{"name":"abstract fun startProviders(values: Array<out ProvidedValue<*>>)","description":"androidx.compose.runtime.Composer.startProviders","location":"compose/runtime/runtime/androidx.compose.runtime/-composer/start-providers.html","searchKeys":["startProviders","abstract fun startProviders(values: Array<out ProvidedValue<*>>)","androidx.compose.runtime.Composer.startProviders"]},{"name":"abstract fun startReplaceableGroup(key: Int)","description":"androidx.compose.runtime.Composer.startReplaceableGroup","location":"compose/runtime/runtime/androidx.compose.runtime/-composer/start-replaceable-group.html","searchKeys":["startReplaceableGroup","abstract fun startReplaceableGroup(key: Int)","androidx.compose.runtime.Composer.startReplaceableGroup"]},{"name":"abstract fun startReplaceableGroup(key: Int, sourceInformation: String?)","description":"androidx.compose.runtime.Composer.startReplaceableGroup","location":"compose/runtime/runtime/androidx.compose.runtime/-composer/start-replaceable-group.html","searchKeys":["startReplaceableGroup","abstract fun startReplaceableGroup(key: Int, sourceInformation: String?)","androidx.compose.runtime.Composer.startReplaceableGroup"]},{"name":"abstract fun startRestartGroup(key: Int): Composer","description":"androidx.compose.runtime.Composer.startRestartGroup","location":"compose/runtime/runtime/androidx.compose.runtime/-composer/start-restart-group.html","searchKeys":["startRestartGroup","abstract fun startRestartGroup(key: Int): Composer","androidx.compose.runtime.Composer.startRestartGroup"]},{"name":"abstract fun startRestartGroup(key: Int, sourceInformation: String?): Composer","description":"androidx.compose.runtime.Composer.startRestartGroup","location":"compose/runtime/runtime/androidx.compose.runtime/-composer/start-restart-group.html","searchKeys":["startRestartGroup","abstract fun startRestartGroup(key: Int, sourceInformation: String?): Composer","androidx.compose.runtime.Composer.startRestartGroup"]},{"name":"abstract fun takeNestedSnapshot(readObserver: (Any) -> Unit? = null): Snapshot","description":"androidx.compose.runtime.snapshots.Snapshot.takeNestedSnapshot","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot/take-nested-snapshot.html","searchKeys":["takeNestedSnapshot","abstract fun takeNestedSnapshot(readObserver: (Any) -> Unit? = null): Snapshot","androidx.compose.runtime.snapshots.Snapshot.takeNestedSnapshot"]},{"name":"abstract fun up()","description":"androidx.compose.runtime.Applier.up","location":"compose/runtime/runtime/androidx.compose.runtime/-applier/up.html","searchKeys":["up","abstract fun up()","androidx.compose.runtime.Applier.up"]},{"name":"abstract fun updateRememberedValue(value: Any?)","description":"androidx.compose.runtime.Composer.updateRememberedValue","location":"compose/runtime/runtime/androidx.compose.runtime/-composer/update-remembered-value.html","searchKeys":["updateRememberedValue","abstract fun updateRememberedValue(value: Any?)","androidx.compose.runtime.Composer.updateRememberedValue"]},{"name":"abstract fun updateScope(block: (Composer, Int) -> Unit)","description":"androidx.compose.runtime.ScopeUpdateScope.updateScope","location":"compose/runtime/runtime/androidx.compose.runtime/-scope-update-scope/update-scope.html","searchKeys":["updateScope","abstract fun updateScope(block: (Composer, Int) -> Unit)","androidx.compose.runtime.ScopeUpdateScope.updateScope"]},{"name":"abstract fun useNode()","description":"androidx.compose.runtime.Composer.useNode","location":"compose/runtime/runtime/androidx.compose.runtime/-composer/use-node.html","searchKeys":["useNode","abstract fun useNode()","androidx.compose.runtime.Composer.useNode"]},{"name":"abstract fun verifyConsistent()","description":"androidx.compose.runtime.ControlledComposition.verifyConsistent","location":"compose/runtime/runtime/androidx.compose.runtime/-controlled-composition/verify-consistent.html","searchKeys":["verifyConsistent","abstract fun verifyConsistent()","androidx.compose.runtime.ControlledComposition.verifyConsistent"]},{"name":"abstract operator fun component1(): T","description":"androidx.compose.runtime.MutableState.component1","location":"compose/runtime/runtime/androidx.compose.runtime/-mutable-state/component1.html","searchKeys":["component1","abstract operator fun component1(): T","androidx.compose.runtime.MutableState.component1"]},{"name":"abstract operator fun component2(): (T) -> Unit","description":"androidx.compose.runtime.MutableState.component2","location":"compose/runtime/runtime/androidx.compose.runtime/-mutable-state/component2.html","searchKeys":["component2","abstract operator fun component2(): (T) -> Unit","androidx.compose.runtime.MutableState.component2"]},{"name":"abstract operator fun invoke(c: Composer, changed: Int): Any?","description":"androidx.compose.runtime.internal.ComposableLambda.invoke","location":"compose/runtime/runtime/androidx.compose.runtime.internal/-composable-lambda/invoke.html","searchKeys":["invoke","abstract operator fun invoke(c: Composer, changed: Int): Any?","androidx.compose.runtime.internal.ComposableLambda.invoke"]},{"name":"abstract operator fun invoke(p1: Any?, c: Composer, changed: Int): Any?","description":"androidx.compose.runtime.internal.ComposableLambda.invoke","location":"compose/runtime/runtime/androidx.compose.runtime.internal/-composable-lambda/invoke.html","searchKeys":["invoke","abstract operator fun invoke(p1: Any?, c: Composer, changed: Int): Any?","androidx.compose.runtime.internal.ComposableLambda.invoke"]},{"name":"abstract operator fun invoke(p1: Any?, p2: Any?, c: Composer, changed: Int): Any?","description":"androidx.compose.runtime.internal.ComposableLambda.invoke","location":"compose/runtime/runtime/androidx.compose.runtime.internal/-composable-lambda/invoke.html","searchKeys":["invoke","abstract operator fun invoke(p1: Any?, p2: Any?, c: Composer, changed: Int): Any?","androidx.compose.runtime.internal.ComposableLambda.invoke"]},{"name":"abstract operator fun invoke(p1: Any?, p2: Any?, p3: Any?, c: Composer, changed: Int): Any?","description":"androidx.compose.runtime.internal.ComposableLambda.invoke","location":"compose/runtime/runtime/androidx.compose.runtime.internal/-composable-lambda/invoke.html","searchKeys":["invoke","abstract operator fun invoke(p1: Any?, p2: Any?, p3: Any?, c: Composer, changed: Int): Any?","androidx.compose.runtime.internal.ComposableLambda.invoke"]},{"name":"abstract operator fun invoke(p1: Any?, p2: Any?, p3: Any?, p4: Any?, c: Composer, changed: Int): Any?","description":"androidx.compose.runtime.internal.ComposableLambda.invoke","location":"compose/runtime/runtime/androidx.compose.runtime.internal/-composable-lambda/invoke.html","searchKeys":["invoke","abstract operator fun invoke(p1: Any?, p2: Any?, p3: Any?, p4: Any?, c: Composer, changed: Int): Any?","androidx.compose.runtime.internal.ComposableLambda.invoke"]},{"name":"abstract operator fun invoke(p1: Any?, p2: Any?, p3: Any?, p4: Any?, p5: Any?, c: Composer, changed: Int): Any?","description":"androidx.compose.runtime.internal.ComposableLambda.invoke","location":"compose/runtime/runtime/androidx.compose.runtime.internal/-composable-lambda/invoke.html","searchKeys":["invoke","abstract operator fun invoke(p1: Any?, p2: Any?, p3: Any?, p4: Any?, p5: Any?, c: Composer, changed: Int): Any?","androidx.compose.runtime.internal.ComposableLambda.invoke"]},{"name":"abstract operator fun invoke(p1: Any?, p2: Any?, p3: Any?, p4: Any?, p5: Any?, p6: Any?, c: Composer, changed: Int): Any?","description":"androidx.compose.runtime.internal.ComposableLambda.invoke","location":"compose/runtime/runtime/androidx.compose.runtime.internal/-composable-lambda/invoke.html","searchKeys":["invoke","abstract operator fun invoke(p1: Any?, p2: Any?, p3: Any?, p4: Any?, p5: Any?, p6: Any?, c: Composer, changed: Int): Any?","androidx.compose.runtime.internal.ComposableLambda.invoke"]},{"name":"abstract operator fun invoke(p1: Any?, p2: Any?, p3: Any?, p4: Any?, p5: Any?, p6: Any?, p7: Any?, c: Composer, changed: Int): Any?","description":"androidx.compose.runtime.internal.ComposableLambda.invoke","location":"compose/runtime/runtime/androidx.compose.runtime.internal/-composable-lambda/invoke.html","searchKeys":["invoke","abstract operator fun invoke(p1: Any?, p2: Any?, p3: Any?, p4: Any?, p5: Any?, p6: Any?, p7: Any?, c: Composer, changed: Int): Any?","androidx.compose.runtime.internal.ComposableLambda.invoke"]},{"name":"abstract operator fun invoke(p1: Any?, p2: Any?, p3: Any?, p4: Any?, p5: Any?, p6: Any?, p7: Any?, p8: Any?, c: Composer, changed: Int): Any?","description":"androidx.compose.runtime.internal.ComposableLambda.invoke","location":"compose/runtime/runtime/androidx.compose.runtime.internal/-composable-lambda/invoke.html","searchKeys":["invoke","abstract operator fun invoke(p1: Any?, p2: Any?, p3: Any?, p4: Any?, p5: Any?, p6: Any?, p7: Any?, p8: Any?, c: Composer, changed: Int): Any?","androidx.compose.runtime.internal.ComposableLambda.invoke"]},{"name":"abstract operator fun invoke(p1: Any?, p2: Any?, p3: Any?, p4: Any?, p5: Any?, p6: Any?, p7: Any?, p8: Any?, p9: Any?, c: Composer, changed: Int): Any?","description":"androidx.compose.runtime.internal.ComposableLambda.invoke","location":"compose/runtime/runtime/androidx.compose.runtime.internal/-composable-lambda/invoke.html","searchKeys":["invoke","abstract operator fun invoke(p1: Any?, p2: Any?, p3: Any?, p4: Any?, p5: Any?, p6: Any?, p7: Any?, p8: Any?, p9: Any?, c: Composer, changed: Int): Any?","androidx.compose.runtime.internal.ComposableLambda.invoke"]},{"name":"abstract operator fun invoke(p1: Any?, p2: Any?, p3: Any?, p4: Any?, p5: Any?, p6: Any?, p7: Any?, p8: Any?, p9: Any?, p10: Any?, c: Composer, changed: Int, changed1: Int): Any?","description":"androidx.compose.runtime.internal.ComposableLambda.invoke","location":"compose/runtime/runtime/androidx.compose.runtime.internal/-composable-lambda/invoke.html","searchKeys":["invoke","abstract operator fun invoke(p1: Any?, p2: Any?, p3: Any?, p4: Any?, p5: Any?, p6: Any?, p7: Any?, p8: Any?, p9: Any?, p10: Any?, c: Composer, changed: Int, changed1: Int): Any?","androidx.compose.runtime.internal.ComposableLambda.invoke"]},{"name":"abstract operator fun invoke(p1: Any?, p2: Any?, p3: Any?, p4: Any?, p5: Any?, p6: Any?, p7: Any?, p8: Any?, p9: Any?, p10: Any?, p11: Any?, c: Composer, changed: Int, changed1: Int): Any?","description":"androidx.compose.runtime.internal.ComposableLambda.invoke","location":"compose/runtime/runtime/androidx.compose.runtime.internal/-composable-lambda/invoke.html","searchKeys":["invoke","abstract operator fun invoke(p1: Any?, p2: Any?, p3: Any?, p4: Any?, p5: Any?, p6: Any?, p7: Any?, p8: Any?, p9: Any?, p10: Any?, p11: Any?, c: Composer, changed: Int, changed1: Int): Any?","androidx.compose.runtime.internal.ComposableLambda.invoke"]},{"name":"abstract operator fun invoke(p1: Any?, p2: Any?, p3: Any?, p4: Any?, p5: Any?, p6: Any?, p7: Any?, p8: Any?, p9: Any?, p10: Any?, p11: Any?, p12: Any?, c: Composer, changed: Int, changed1: Int): Any?","description":"androidx.compose.runtime.internal.ComposableLambda.invoke","location":"compose/runtime/runtime/androidx.compose.runtime.internal/-composable-lambda/invoke.html","searchKeys":["invoke","abstract operator fun invoke(p1: Any?, p2: Any?, p3: Any?, p4: Any?, p5: Any?, p6: Any?, p7: Any?, p8: Any?, p9: Any?, p10: Any?, p11: Any?, p12: Any?, c: Composer, changed: Int, changed1: Int): Any?","androidx.compose.runtime.internal.ComposableLambda.invoke"]},{"name":"abstract operator fun invoke(p1: Any?, p2: Any?, p3: Any?, p4: Any?, p5: Any?, p6: Any?, p7: Any?, p8: Any?, p9: Any?, p10: Any?, p11: Any?, p12: Any?, p13: Any?, c: Composer, changed: Int, changed1: Int): Any?","description":"androidx.compose.runtime.internal.ComposableLambda.invoke","location":"compose/runtime/runtime/androidx.compose.runtime.internal/-composable-lambda/invoke.html","searchKeys":["invoke","abstract operator fun invoke(p1: Any?, p2: Any?, p3: Any?, p4: Any?, p5: Any?, p6: Any?, p7: Any?, p8: Any?, p9: Any?, p10: Any?, p11: Any?, p12: Any?, p13: Any?, c: Composer, changed: Int, changed1: Int): Any?","androidx.compose.runtime.internal.ComposableLambda.invoke"]},{"name":"abstract operator fun invoke(p1: Any?, p2: Any?, p3: Any?, p4: Any?, p5: Any?, p6: Any?, p7: Any?, p8: Any?, p9: Any?, p10: Any?, p11: Any?, p12: Any?, p13: Any?, p14: Any?, c: Composer, changed: Int, changed1: Int): Any?","description":"androidx.compose.runtime.internal.ComposableLambda.invoke","location":"compose/runtime/runtime/androidx.compose.runtime.internal/-composable-lambda/invoke.html","searchKeys":["invoke","abstract operator fun invoke(p1: Any?, p2: Any?, p3: Any?, p4: Any?, p5: Any?, p6: Any?, p7: Any?, p8: Any?, p9: Any?, p10: Any?, p11: Any?, p12: Any?, p13: Any?, p14: Any?, c: Composer, changed: Int, changed1: Int): Any?","androidx.compose.runtime.internal.ComposableLambda.invoke"]},{"name":"abstract operator fun invoke(p1: Any?, p2: Any?, p3: Any?, p4: Any?, p5: Any?, p6: Any?, p7: Any?, p8: Any?, p9: Any?, p10: Any?, p11: Any?, p12: Any?, p13: Any?, p14: Any?, p15: Any?, c: Composer, changed: Int, changed1: Int): Any?","description":"androidx.compose.runtime.internal.ComposableLambda.invoke","location":"compose/runtime/runtime/androidx.compose.runtime.internal/-composable-lambda/invoke.html","searchKeys":["invoke","abstract operator fun invoke(p1: Any?, p2: Any?, p3: Any?, p4: Any?, p5: Any?, p6: Any?, p7: Any?, p8: Any?, p9: Any?, p10: Any?, p11: Any?, p12: Any?, p13: Any?, p14: Any?, p15: Any?, c: Composer, changed: Int, changed1: Int): Any?","androidx.compose.runtime.internal.ComposableLambda.invoke"]},{"name":"abstract operator fun invoke(p1: Any?, p2: Any?, p3: Any?, p4: Any?, p5: Any?, p6: Any?, p7: Any?, p8: Any?, p9: Any?, p10: Any?, p11: Any?, p12: Any?, p13: Any?, p14: Any?, p15: Any?, p16: Any?, c: Composer, changed: Int, changed1: Int): Any?","description":"androidx.compose.runtime.internal.ComposableLambda.invoke","location":"compose/runtime/runtime/androidx.compose.runtime.internal/-composable-lambda/invoke.html","searchKeys":["invoke","abstract operator fun invoke(p1: Any?, p2: Any?, p3: Any?, p4: Any?, p5: Any?, p6: Any?, p7: Any?, p8: Any?, p9: Any?, p10: Any?, p11: Any?, p12: Any?, p13: Any?, p14: Any?, p15: Any?, p16: Any?, c: Composer, changed: Int, changed1: Int): Any?","androidx.compose.runtime.internal.ComposableLambda.invoke"]},{"name":"abstract operator fun invoke(p1: Any?, p2: Any?, p3: Any?, p4: Any?, p5: Any?, p6: Any?, p7: Any?, p8: Any?, p9: Any?, p10: Any?, p11: Any?, p12: Any?, p13: Any?, p14: Any?, p15: Any?, p16: Any?, p17: Any?, c: Composer, changed: Int, changed1: Int): Any?","description":"androidx.compose.runtime.internal.ComposableLambda.invoke","location":"compose/runtime/runtime/androidx.compose.runtime.internal/-composable-lambda/invoke.html","searchKeys":["invoke","abstract operator fun invoke(p1: Any?, p2: Any?, p3: Any?, p4: Any?, p5: Any?, p6: Any?, p7: Any?, p8: Any?, p9: Any?, p10: Any?, p11: Any?, p12: Any?, p13: Any?, p14: Any?, p15: Any?, p16: Any?, p17: Any?, c: Composer, changed: Int, changed1: Int): Any?","androidx.compose.runtime.internal.ComposableLambda.invoke"]},{"name":"abstract operator fun invoke(p1: Any?, p2: Any?, p3: Any?, p4: Any?, p5: Any?, p6: Any?, p7: Any?, p8: Any?, p9: Any?, p10: Any?, p11: Any?, p12: Any?, p13: Any?, p14: Any?, p15: Any?, p16: Any?, p17: Any?, p18: Any?, c: Composer, changed: Int, changed1: Int): Any?","description":"androidx.compose.runtime.internal.ComposableLambda.invoke","location":"compose/runtime/runtime/androidx.compose.runtime.internal/-composable-lambda/invoke.html","searchKeys":["invoke","abstract operator fun invoke(p1: Any?, p2: Any?, p3: Any?, p4: Any?, p5: Any?, p6: Any?, p7: Any?, p8: Any?, p9: Any?, p10: Any?, p11: Any?, p12: Any?, p13: Any?, p14: Any?, p15: Any?, p16: Any?, p17: Any?, p18: Any?, c: Composer, changed: Int, changed1: Int): Any?","androidx.compose.runtime.internal.ComposableLambda.invoke"]},{"name":"abstract override var value: T","description":"androidx.compose.runtime.MutableState.value","location":"compose/runtime/runtime/androidx.compose.runtime/-mutable-state/value.html","searchKeys":["value","abstract override var value: T","androidx.compose.runtime.MutableState.value"]},{"name":"abstract suspend fun <R> withFrameNanos(onFrame: (frameTimeNanos: Long) -> R): R","description":"androidx.compose.runtime.MonotonicFrameClock.withFrameNanos","location":"compose/runtime/runtime/androidx.compose.runtime/-monotonic-frame-clock/with-frame-nanos.html","searchKeys":["withFrameNanos","abstract suspend fun <R> withFrameNanos(onFrame: (frameTimeNanos: Long) -> R): R","androidx.compose.runtime.MonotonicFrameClock.withFrameNanos"]},{"name":"abstract suspend fun awaitDispose(onDispose: () -> Unit): Nothing","description":"androidx.compose.runtime.ProduceStateScope.awaitDispose","location":"compose/runtime/runtime/androidx.compose.runtime/-produce-state-scope/await-dispose.html","searchKeys":["awaitDispose","abstract suspend fun awaitDispose(onDispose: () -> Unit): Nothing","androidx.compose.runtime.ProduceStateScope.awaitDispose"]},{"name":"abstract val applier: Applier<*>","description":"androidx.compose.runtime.Composer.applier","location":"compose/runtime/runtime/androidx.compose.runtime/-composer/applier.html","searchKeys":["applier","abstract val applier: Applier<*>","androidx.compose.runtime.Composer.applier"]},{"name":"abstract val applyCoroutineContext: CoroutineContext","description":"androidx.compose.runtime.Composer.applyCoroutineContext","location":"compose/runtime/runtime/androidx.compose.runtime/-composer/apply-coroutine-context.html","searchKeys":["applyCoroutineContext","abstract val applyCoroutineContext: CoroutineContext","androidx.compose.runtime.Composer.applyCoroutineContext"]},{"name":"abstract val changeCount: Long","description":"androidx.compose.runtime.RecomposerInfo.changeCount","location":"compose/runtime/runtime/androidx.compose.runtime/-recomposer-info/change-count.html","searchKeys":["changeCount","abstract val changeCount: Long","androidx.compose.runtime.RecomposerInfo.changeCount"]},{"name":"abstract val composition: ControlledComposition","description":"androidx.compose.runtime.Composer.composition","location":"compose/runtime/runtime/androidx.compose.runtime/-composer/composition.html","searchKeys":["composition","abstract val composition: ControlledComposition","androidx.compose.runtime.Composer.composition"]},{"name":"abstract val compositionData: CompositionData","description":"androidx.compose.runtime.Composer.compositionData","location":"compose/runtime/runtime/androidx.compose.runtime/-composer/composition-data.html","searchKeys":["compositionData","abstract val compositionData: CompositionData","androidx.compose.runtime.Composer.compositionData"]},{"name":"abstract val compositionGroups: Iterable<CompositionGroup>","description":"androidx.compose.runtime.tooling.CompositionData.compositionGroups","location":"compose/runtime/runtime/androidx.compose.runtime.tooling/-composition-data/composition-groups.html","searchKeys":["compositionGroups","abstract val compositionGroups: Iterable<CompositionGroup>","androidx.compose.runtime.tooling.CompositionData.compositionGroups"]},{"name":"abstract val compoundKeyHash: Int","description":"androidx.compose.runtime.Composer.compoundKeyHash","location":"compose/runtime/runtime/androidx.compose.runtime/-composer/compound-key-hash.html","searchKeys":["compoundKeyHash","abstract val compoundKeyHash: Int","androidx.compose.runtime.Composer.compoundKeyHash"]},{"name":"abstract val current: N","description":"androidx.compose.runtime.Applier.current","location":"compose/runtime/runtime/androidx.compose.runtime/-applier/current.html","searchKeys":["current","abstract val current: N","androidx.compose.runtime.Applier.current"]},{"name":"abstract val data: Iterable<Any?>","description":"androidx.compose.runtime.tooling.CompositionGroup.data","location":"compose/runtime/runtime/androidx.compose.runtime.tooling/-composition-group/data.html","searchKeys":["data","abstract val data: Iterable<Any?>","androidx.compose.runtime.tooling.CompositionGroup.data"]},{"name":"abstract val defaultsInvalid: Boolean","description":"androidx.compose.runtime.Composer.defaultsInvalid","location":"compose/runtime/runtime/androidx.compose.runtime/-composer/defaults-invalid.html","searchKeys":["defaultsInvalid","abstract val defaultsInvalid: Boolean","androidx.compose.runtime.Composer.defaultsInvalid"]},{"name":"abstract val firstStateRecord: StateRecord","description":"androidx.compose.runtime.snapshots.StateObject.firstStateRecord","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-state-object/first-state-record.html","searchKeys":["firstStateRecord","abstract val firstStateRecord: StateRecord","androidx.compose.runtime.snapshots.StateObject.firstStateRecord"]},{"name":"abstract val hasInvalidations: Boolean","description":"androidx.compose.runtime.Composition.hasInvalidations","location":"compose/runtime/runtime/androidx.compose.runtime/-composition/has-invalidations.html","searchKeys":["hasInvalidations","abstract val hasInvalidations: Boolean","androidx.compose.runtime.Composition.hasInvalidations"]},{"name":"abstract val hasPendingChanges: Boolean","description":"androidx.compose.runtime.ControlledComposition.hasPendingChanges","location":"compose/runtime/runtime/androidx.compose.runtime/-controlled-composition/has-pending-changes.html","searchKeys":["hasPendingChanges","abstract val hasPendingChanges: Boolean","androidx.compose.runtime.ControlledComposition.hasPendingChanges"]},{"name":"abstract val hasPendingWork: Boolean","description":"androidx.compose.runtime.RecomposerInfo.hasPendingWork","location":"compose/runtime/runtime/androidx.compose.runtime/-recomposer-info/has-pending-work.html","searchKeys":["hasPendingWork","abstract val hasPendingWork: Boolean","androidx.compose.runtime.RecomposerInfo.hasPendingWork"]},{"name":"abstract val inserting: Boolean","description":"androidx.compose.runtime.Composer.inserting","location":"compose/runtime/runtime/androidx.compose.runtime/-composer/inserting.html","searchKeys":["inserting","abstract val inserting: Boolean","androidx.compose.runtime.Composer.inserting"]},{"name":"abstract val isComposing: Boolean","description":"androidx.compose.runtime.ControlledComposition.isComposing","location":"compose/runtime/runtime/androidx.compose.runtime/-controlled-composition/is-composing.html","searchKeys":["isComposing","abstract val isComposing: Boolean","androidx.compose.runtime.ControlledComposition.isComposing"]},{"name":"abstract val isDisposed: Boolean","description":"androidx.compose.runtime.Composition.isDisposed","location":"compose/runtime/runtime/androidx.compose.runtime/-composition/is-disposed.html","searchKeys":["isDisposed","abstract val isDisposed: Boolean","androidx.compose.runtime.Composition.isDisposed"]},{"name":"abstract val isEmpty: Boolean","description":"androidx.compose.runtime.tooling.CompositionData.isEmpty","location":"compose/runtime/runtime/androidx.compose.runtime.tooling/-composition-data/is-empty.html","searchKeys":["isEmpty","abstract val isEmpty: Boolean","androidx.compose.runtime.tooling.CompositionData.isEmpty"]},{"name":"abstract val key: Any","description":"androidx.compose.runtime.tooling.CompositionGroup.key","location":"compose/runtime/runtime/androidx.compose.runtime.tooling/-composition-group/key.html","searchKeys":["key","abstract val key: Any","androidx.compose.runtime.tooling.CompositionGroup.key"]},{"name":"abstract val node: Any?","description":"androidx.compose.runtime.tooling.CompositionGroup.node","location":"compose/runtime/runtime/androidx.compose.runtime.tooling/-composition-group/node.html","searchKeys":["node","abstract val node: Any?","androidx.compose.runtime.tooling.CompositionGroup.node"]},{"name":"abstract val policy: SnapshotMutationPolicy<T>","description":"androidx.compose.runtime.snapshots.SnapshotMutableState.policy","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-mutable-state/policy.html","searchKeys":["policy","abstract val policy: SnapshotMutationPolicy<T>","androidx.compose.runtime.snapshots.SnapshotMutableState.policy"]},{"name":"abstract val readOnly: Boolean","description":"androidx.compose.runtime.snapshots.Snapshot.readOnly","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot/read-only.html","searchKeys":["readOnly","abstract val readOnly: Boolean","androidx.compose.runtime.snapshots.Snapshot.readOnly"]},{"name":"abstract val recomposeScope: RecomposeScope?","description":"androidx.compose.runtime.Composer.recomposeScope","location":"compose/runtime/runtime/androidx.compose.runtime/-composer/recompose-scope.html","searchKeys":["recomposeScope","abstract val recomposeScope: RecomposeScope?","androidx.compose.runtime.Composer.recomposeScope"]},{"name":"abstract val root: Snapshot","description":"androidx.compose.runtime.snapshots.Snapshot.root","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot/root.html","searchKeys":["root","abstract val root: Snapshot","androidx.compose.runtime.snapshots.Snapshot.root"]},{"name":"abstract val skipping: Boolean","description":"androidx.compose.runtime.Composer.skipping","location":"compose/runtime/runtime/androidx.compose.runtime/-composer/skipping.html","searchKeys":["skipping","abstract val skipping: Boolean","androidx.compose.runtime.Composer.skipping"]},{"name":"abstract val sourceInfo: String?","description":"androidx.compose.runtime.tooling.CompositionGroup.sourceInfo","location":"compose/runtime/runtime/androidx.compose.runtime.tooling/-composition-group/source-info.html","searchKeys":["sourceInfo","abstract val sourceInfo: String?","androidx.compose.runtime.tooling.CompositionGroup.sourceInfo"]},{"name":"abstract val state: Flow<Recomposer.State>","description":"androidx.compose.runtime.RecomposerInfo.state","location":"compose/runtime/runtime/androidx.compose.runtime/-recomposer-info/state.html","searchKeys":["state","abstract val state: Flow<Recomposer.State>","androidx.compose.runtime.RecomposerInfo.state"]},{"name":"abstract val succeeded: Boolean","description":"androidx.compose.runtime.snapshots.SnapshotApplyResult.succeeded","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-apply-result/succeeded.html","searchKeys":["succeeded","abstract val succeeded: Boolean","androidx.compose.runtime.snapshots.SnapshotApplyResult.succeeded"]},{"name":"abstract val value: T","description":"androidx.compose.runtime.State.value","location":"compose/runtime/runtime/androidx.compose.runtime/-state/value.html","searchKeys":["value","abstract val value: T","androidx.compose.runtime.State.value"]},{"name":"annotation class CheckResult(suggest: String)","description":"androidx.compose.runtime.CheckResult","location":"compose/runtime/runtime/androidx.compose.runtime/-check-result/index.html","searchKeys":["CheckResult","annotation class CheckResult(suggest: String)","androidx.compose.runtime.CheckResult"]},{"name":"annotation class Composable","description":"androidx.compose.runtime.Composable","location":"compose/runtime/runtime/androidx.compose.runtime/-composable/index.html","searchKeys":["Composable","annotation class Composable","androidx.compose.runtime.Composable"]},{"name":"annotation class ComposeCompilerApi","description":"androidx.compose.runtime.ComposeCompilerApi","location":"compose/runtime/runtime/androidx.compose.runtime/-compose-compiler-api/index.html","searchKeys":["ComposeCompilerApi","annotation class ComposeCompilerApi","androidx.compose.runtime.ComposeCompilerApi"]},{"name":"annotation class Decoy(targetName: String, signature: String)","description":"androidx.compose.runtime.internal.Decoy","location":"compose/runtime/runtime/androidx.compose.runtime.internal/-decoy/index.html","searchKeys":["Decoy","annotation class Decoy(targetName: String, signature: String)","androidx.compose.runtime.internal.Decoy"]},{"name":"annotation class DecoyImplementation(targetName: String)","description":"androidx.compose.runtime.internal.DecoyImplementation","location":"compose/runtime/runtime/androidx.compose.runtime.internal/-decoy-implementation/index.html","searchKeys":["DecoyImplementation","annotation class DecoyImplementation(targetName: String)","androidx.compose.runtime.internal.DecoyImplementation"]},{"name":"annotation class DisallowComposableCalls","description":"androidx.compose.runtime.DisallowComposableCalls","location":"compose/runtime/runtime/androidx.compose.runtime/-disallow-composable-calls/index.html","searchKeys":["DisallowComposableCalls","annotation class DisallowComposableCalls","androidx.compose.runtime.DisallowComposableCalls"]},{"name":"annotation class ExperimentalComposeApi","description":"androidx.compose.runtime.ExperimentalComposeApi","location":"compose/runtime/runtime/androidx.compose.runtime/-experimental-compose-api/index.html","searchKeys":["ExperimentalComposeApi","annotation class ExperimentalComposeApi","androidx.compose.runtime.ExperimentalComposeApi"]},{"name":"annotation class ExplicitGroupsComposable","description":"androidx.compose.runtime.ExplicitGroupsComposable","location":"compose/runtime/runtime/androidx.compose.runtime/-explicit-groups-composable/index.html","searchKeys":["ExplicitGroupsComposable","annotation class ExplicitGroupsComposable","androidx.compose.runtime.ExplicitGroupsComposable"]},{"name":"annotation class Immutable","description":"androidx.compose.runtime.Immutable","location":"compose/runtime/runtime/androidx.compose.runtime/-immutable/index.html","searchKeys":["Immutable","annotation class Immutable","androidx.compose.runtime.Immutable"]},{"name":"annotation class InternalComposeApi","description":"androidx.compose.runtime.InternalComposeApi","location":"compose/runtime/runtime/androidx.compose.runtime/-internal-compose-api/index.html","searchKeys":["InternalComposeApi","annotation class InternalComposeApi","androidx.compose.runtime.InternalComposeApi"]},{"name":"annotation class LiveLiteralFileInfo(file: String)","description":"androidx.compose.runtime.internal.LiveLiteralFileInfo","location":"compose/runtime/runtime/androidx.compose.runtime.internal/-live-literal-file-info/index.html","searchKeys":["LiveLiteralFileInfo","annotation class LiveLiteralFileInfo(file: String)","androidx.compose.runtime.internal.LiveLiteralFileInfo"]},{"name":"annotation class LiveLiteralInfo(key: String, offset: Int)","description":"androidx.compose.runtime.internal.LiveLiteralInfo","location":"compose/runtime/runtime/androidx.compose.runtime.internal/-live-literal-info/index.html","searchKeys":["LiveLiteralInfo","annotation class LiveLiteralInfo(key: String, offset: Int)","androidx.compose.runtime.internal.LiveLiteralInfo"]},{"name":"annotation class NoLiveLiterals","description":"androidx.compose.runtime.NoLiveLiterals","location":"compose/runtime/runtime/androidx.compose.runtime/-no-live-literals/index.html","searchKeys":["NoLiveLiterals","annotation class NoLiveLiterals","androidx.compose.runtime.NoLiveLiterals"]},{"name":"annotation class NonRestartableComposable","description":"androidx.compose.runtime.NonRestartableComposable","location":"compose/runtime/runtime/androidx.compose.runtime/-non-restartable-composable/index.html","searchKeys":["NonRestartableComposable","annotation class NonRestartableComposable","androidx.compose.runtime.NonRestartableComposable"]},{"name":"annotation class ReadOnlyComposable","description":"androidx.compose.runtime.ReadOnlyComposable","location":"compose/runtime/runtime/androidx.compose.runtime/-read-only-composable/index.html","searchKeys":["ReadOnlyComposable","annotation class ReadOnlyComposable","androidx.compose.runtime.ReadOnlyComposable"]},{"name":"annotation class StabilityInferred(parameters: Int)","description":"androidx.compose.runtime.internal.StabilityInferred","location":"compose/runtime/runtime/androidx.compose.runtime.internal/-stability-inferred/index.html","searchKeys":["StabilityInferred","annotation class StabilityInferred(parameters: Int)","androidx.compose.runtime.internal.StabilityInferred"]},{"name":"annotation class Stable","description":"androidx.compose.runtime.Stable","location":"compose/runtime/runtime/androidx.compose.runtime/-stable/index.html","searchKeys":["Stable","annotation class Stable","androidx.compose.runtime.Stable"]},{"name":"annotation class StableMarker","description":"androidx.compose.runtime.StableMarker","location":"compose/runtime/runtime/androidx.compose.runtime/-stable-marker/index.html","searchKeys":["StableMarker","annotation class StableMarker","androidx.compose.runtime.StableMarker"]},{"name":"annotation class TestOnly","description":"androidx.compose.runtime.TestOnly","location":"compose/runtime/runtime/androidx.compose.runtime/-test-only/index.html","searchKeys":["TestOnly","annotation class TestOnly","androidx.compose.runtime.TestOnly"]},{"name":"class AtomicReference<V>(value: V)","description":"androidx.compose.runtime.AtomicReference","location":"compose/runtime/runtime/androidx.compose.runtime/-atomic-reference/index.html","searchKeys":["AtomicReference","class AtomicReference<V>(value: V)","androidx.compose.runtime.AtomicReference"]},{"name":"class BroadcastFrameClock(onNewAwaiters: () -> Unit?) : MonotonicFrameClock","description":"androidx.compose.runtime.BroadcastFrameClock","location":"compose/runtime/runtime/androidx.compose.runtime/-broadcast-frame-clock/index.html","searchKeys":["BroadcastFrameClock","class BroadcastFrameClock(onNewAwaiters: () -> Unit?) : MonotonicFrameClock","androidx.compose.runtime.BroadcastFrameClock"]},{"name":"class DisposableEffectScope","description":"androidx.compose.runtime.DisposableEffectScope","location":"compose/runtime/runtime/androidx.compose.runtime/-disposable-effect-scope/index.html","searchKeys":["DisposableEffectScope","class DisposableEffectScope","androidx.compose.runtime.DisposableEffectScope"]},{"name":"class Failure(snapshot: Snapshot) : SnapshotApplyResult","description":"androidx.compose.runtime.snapshots.SnapshotApplyResult.Failure","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-apply-result/-failure/index.html","searchKeys":["Failure","class Failure(snapshot: Snapshot) : SnapshotApplyResult","androidx.compose.runtime.snapshots.SnapshotApplyResult.Failure"]},{"name":"class MutableVector<T> : RandomAccess","description":"androidx.compose.runtime.collection.MutableVector","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/index.html","searchKeys":["MutableVector","class MutableVector<T> : RandomAccess","androidx.compose.runtime.collection.MutableVector"]},{"name":"class PausableMonotonicFrameClock(frameClock: MonotonicFrameClock) : MonotonicFrameClock","description":"androidx.compose.runtime.PausableMonotonicFrameClock","location":"compose/runtime/runtime/androidx.compose.runtime/-pausable-monotonic-frame-clock/index.html","searchKeys":["PausableMonotonicFrameClock","class PausableMonotonicFrameClock(frameClock: MonotonicFrameClock) : MonotonicFrameClock","androidx.compose.runtime.PausableMonotonicFrameClock"]},{"name":"class ProvidedValue<T>","description":"androidx.compose.runtime.ProvidedValue","location":"compose/runtime/runtime/androidx.compose.runtime/-provided-value/index.html","searchKeys":["ProvidedValue","class ProvidedValue<T>","androidx.compose.runtime.ProvidedValue"]},{"name":"class Recomposer(effectCoroutineContext: CoroutineContext) : CompositionContext","description":"androidx.compose.runtime.Recomposer","location":"compose/runtime/runtime/androidx.compose.runtime/-recomposer/index.html","searchKeys":["Recomposer","class Recomposer(effectCoroutineContext: CoroutineContext) : CompositionContext","androidx.compose.runtime.Recomposer"]},{"name":"class SnapshotApplyConflictException(snapshot: Snapshot) : Exception","description":"androidx.compose.runtime.snapshots.SnapshotApplyConflictException","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-apply-conflict-exception/index.html","searchKeys":["SnapshotApplyConflictException","class SnapshotApplyConflictException(snapshot: Snapshot) : Exception","androidx.compose.runtime.snapshots.SnapshotApplyConflictException"]},{"name":"class SnapshotStateList<T> : MutableList<T> , StateObject","description":"androidx.compose.runtime.snapshots.SnapshotStateList","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-state-list/index.html","searchKeys":["SnapshotStateList","class SnapshotStateList<T> : MutableList<T> , StateObject","androidx.compose.runtime.snapshots.SnapshotStateList"]},{"name":"class SnapshotStateMap<K, V> : MutableMap<K, V> , StateObject","description":"androidx.compose.runtime.snapshots.SnapshotStateMap","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-state-map/index.html","searchKeys":["SnapshotStateMap","class SnapshotStateMap<K, V> : MutableMap<K, V> , StateObject","androidx.compose.runtime.snapshots.SnapshotStateMap"]},{"name":"class SnapshotStateObserver(onChangedExecutor: (callback: () -> Unit) -> Unit)","description":"androidx.compose.runtime.snapshots.SnapshotStateObserver","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-state-observer/index.html","searchKeys":["SnapshotStateObserver","class SnapshotStateObserver(onChangedExecutor: (callback: () -> Unit) -> Unit)","androidx.compose.runtime.snapshots.SnapshotStateObserver"]},{"name":"enum State : Enum<Recomposer.State> ","description":"androidx.compose.runtime.Recomposer.State","location":"compose/runtime/runtime/androidx.compose.runtime/-recomposer/-state/index.html","searchKeys":["State","enum State : Enum<Recomposer.State> ","androidx.compose.runtime.Recomposer.State"]},{"name":"fun <K, V> Iterable<Pair<K, V>>.toMutableStateMap(): SnapshotStateMap<K, V>","description":"androidx.compose.runtime.toMutableStateMap","location":"compose/runtime/runtime/androidx.compose.runtime/to-mutable-state-map.html","searchKeys":["toMutableStateMap","fun <K, V> Iterable<Pair<K, V>>.toMutableStateMap(): SnapshotStateMap<K, V>","androidx.compose.runtime.toMutableStateMap"]},{"name":"fun <K, V> mutableStateMapOf(): SnapshotStateMap<K, V>","description":"androidx.compose.runtime.mutableStateMapOf","location":"compose/runtime/runtime/androidx.compose.runtime/mutable-state-map-of.html","searchKeys":["mutableStateMapOf","fun <K, V> mutableStateMapOf(): SnapshotStateMap<K, V>","androidx.compose.runtime.mutableStateMapOf"]},{"name":"fun <K, V> mutableStateMapOf(vararg pairs: Pair<K, V>): SnapshotStateMap<K, V>","description":"androidx.compose.runtime.mutableStateMapOf","location":"compose/runtime/runtime/androidx.compose.runtime/mutable-state-map-of.html","searchKeys":["mutableStateMapOf","fun <K, V> mutableStateMapOf(vararg pairs: Pair<K, V>): SnapshotStateMap<K, V>","androidx.compose.runtime.mutableStateMapOf"]},{"name":"fun <T : Any> observeReads(scope: T, onValueChangedForScope: (T) -> Unit, block: () -> Unit)","description":"androidx.compose.runtime.snapshots.SnapshotStateObserver.observeReads","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-state-observer/observe-reads.html","searchKeys":["observeReads","fun <T : Any> observeReads(scope: T, onValueChangedForScope: (T) -> Unit, block: () -> Unit)","androidx.compose.runtime.snapshots.SnapshotStateObserver.observeReads"]},{"name":"fun <T : R, R> Flow<T>.collectAsState(initial: R, context: CoroutineContext = EmptyCoroutineContext): State<R>","description":"androidx.compose.runtime.collectAsState","location":"compose/runtime/runtime/androidx.compose.runtime/collect-as-state.html","searchKeys":["collectAsState","fun <T : R, R> Flow<T>.collectAsState(initial: R, context: CoroutineContext = EmptyCoroutineContext): State<R>","androidx.compose.runtime.collectAsState"]},{"name":"fun <T : StateRecord> T.readable(state: StateObject): T","description":"androidx.compose.runtime.snapshots.readable","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/readable.html","searchKeys":["readable","fun <T : StateRecord> T.readable(state: StateObject): T","androidx.compose.runtime.snapshots.readable"]},{"name":"fun <T : StateRecord> T.readable(state: StateObject, snapshot: Snapshot): T","description":"androidx.compose.runtime.snapshots.readable","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/readable.html","searchKeys":["readable","fun <T : StateRecord> T.readable(state: StateObject, snapshot: Snapshot): T","androidx.compose.runtime.snapshots.readable"]},{"name":"fun <T> AbstractApplier(root: T)","description":"androidx.compose.runtime.AbstractApplier.AbstractApplier","location":"compose/runtime/runtime/androidx.compose.runtime/-abstract-applier/-abstract-applier.html","searchKeys":["AbstractApplier","fun <T> AbstractApplier(root: T)","androidx.compose.runtime.AbstractApplier.AbstractApplier"]},{"name":"fun <T> Collection<T>.toMutableStateList(): SnapshotStateList<T>","description":"androidx.compose.runtime.toMutableStateList","location":"compose/runtime/runtime/androidx.compose.runtime/to-mutable-state-list.html","searchKeys":["toMutableStateList","fun <T> Collection<T>.toMutableStateList(): SnapshotStateList<T>","androidx.compose.runtime.toMutableStateList"]},{"name":"fun <T> StateFlow<T>.collectAsState(context: CoroutineContext = EmptyCoroutineContext): State<T>","description":"androidx.compose.runtime.collectAsState","location":"compose/runtime/runtime/androidx.compose.runtime/collect-as-state.html","searchKeys":["collectAsState","fun <T> StateFlow<T>.collectAsState(context: CoroutineContext = EmptyCoroutineContext): State<T>","androidx.compose.runtime.collectAsState"]},{"name":"fun <T> compositionLocalOf(policy: SnapshotMutationPolicy<T> = structuralEqualityPolicy(), defaultFactory: () -> T): ProvidableCompositionLocal<T>","description":"androidx.compose.runtime.compositionLocalOf","location":"compose/runtime/runtime/androidx.compose.runtime/composition-local-of.html","searchKeys":["compositionLocalOf","fun <T> compositionLocalOf(policy: SnapshotMutationPolicy<T> = structuralEqualityPolicy(), defaultFactory: () -> T): ProvidableCompositionLocal<T>","androidx.compose.runtime.compositionLocalOf"]},{"name":"fun <T> derivedStateOf(calculation: () -> T): State<T>","description":"androidx.compose.runtime.derivedStateOf","location":"compose/runtime/runtime/androidx.compose.runtime/derived-state-of.html","searchKeys":["derivedStateOf","fun <T> derivedStateOf(calculation: () -> T): State<T>","androidx.compose.runtime.derivedStateOf"]},{"name":"fun <T> liveLiteral(key: String, value: T): State<T>","description":"androidx.compose.runtime.internal.liveLiteral","location":"compose/runtime/runtime/androidx.compose.runtime.internal/live-literal.html","searchKeys":["liveLiteral","fun <T> liveLiteral(key: String, value: T): State<T>","androidx.compose.runtime.internal.liveLiteral"]},{"name":"fun <T> mutableStateListOf(): SnapshotStateList<T>","description":"androidx.compose.runtime.mutableStateListOf","location":"compose/runtime/runtime/androidx.compose.runtime/mutable-state-list-of.html","searchKeys":["mutableStateListOf","fun <T> mutableStateListOf(): SnapshotStateList<T>","androidx.compose.runtime.mutableStateListOf"]},{"name":"fun <T> mutableStateListOf(vararg elements: T): SnapshotStateList<T>","description":"androidx.compose.runtime.mutableStateListOf","location":"compose/runtime/runtime/androidx.compose.runtime/mutable-state-list-of.html","searchKeys":["mutableStateListOf","fun <T> mutableStateListOf(vararg elements: T): SnapshotStateList<T>","androidx.compose.runtime.mutableStateListOf"]},{"name":"fun <T> mutableStateOf(value: T, policy: SnapshotMutationPolicy<T> = structuralEqualityPolicy()): MutableState<T>","description":"androidx.compose.runtime.mutableStateOf","location":"compose/runtime/runtime/androidx.compose.runtime/mutable-state-of.html","searchKeys":["mutableStateOf","fun <T> mutableStateOf(value: T, policy: SnapshotMutationPolicy<T> = structuralEqualityPolicy()): MutableState<T>","androidx.compose.runtime.mutableStateOf"]},{"name":"fun <T> neverEqualPolicy(): SnapshotMutationPolicy<T>","description":"androidx.compose.runtime.neverEqualPolicy","location":"compose/runtime/runtime/androidx.compose.runtime/never-equal-policy.html","searchKeys":["neverEqualPolicy","fun <T> neverEqualPolicy(): SnapshotMutationPolicy<T>","androidx.compose.runtime.neverEqualPolicy"]},{"name":"fun <T> observe(readObserver: (Any) -> Unit? = null, writeObserver: (Any) -> Unit? = null, block: () -> T): T","description":"androidx.compose.runtime.snapshots.Snapshot.Companion.observe","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot/-companion/observe.html","searchKeys":["observe","fun <T> observe(readObserver: (Any) -> Unit? = null, writeObserver: (Any) -> Unit? = null, block: () -> T): T","androidx.compose.runtime.snapshots.Snapshot.Companion.observe"]},{"name":"fun <T> produceState(initialValue: T, key1: Any?, key2: Any?, key3: Any?, producer: suspend ProduceStateScope<T>.() -> Unit): State<T>","description":"androidx.compose.runtime.produceState","location":"compose/runtime/runtime/androidx.compose.runtime/produce-state.html","searchKeys":["produceState","fun <T> produceState(initialValue: T, key1: Any?, key2: Any?, key3: Any?, producer: suspend ProduceStateScope<T>.() -> Unit): State<T>","androidx.compose.runtime.produceState"]},{"name":"fun <T> produceState(initialValue: T, key1: Any?, key2: Any?, producer: suspend ProduceStateScope<T>.() -> Unit): State<T>","description":"androidx.compose.runtime.produceState","location":"compose/runtime/runtime/androidx.compose.runtime/produce-state.html","searchKeys":["produceState","fun <T> produceState(initialValue: T, key1: Any?, key2: Any?, producer: suspend ProduceStateScope<T>.() -> Unit): State<T>","androidx.compose.runtime.produceState"]},{"name":"fun <T> produceState(initialValue: T, key1: Any?, producer: suspend ProduceStateScope<T>.() -> Unit): State<T>","description":"androidx.compose.runtime.produceState","location":"compose/runtime/runtime/androidx.compose.runtime/produce-state.html","searchKeys":["produceState","fun <T> produceState(initialValue: T, key1: Any?, producer: suspend ProduceStateScope<T>.() -> Unit): State<T>","androidx.compose.runtime.produceState"]},{"name":"fun <T> produceState(initialValue: T, producer: suspend ProduceStateScope<T>.() -> Unit): State<T>","description":"androidx.compose.runtime.produceState","location":"compose/runtime/runtime/androidx.compose.runtime/produce-state.html","searchKeys":["produceState","fun <T> produceState(initialValue: T, producer: suspend ProduceStateScope<T>.() -> Unit): State<T>","androidx.compose.runtime.produceState"]},{"name":"fun <T> produceState(initialValue: T, vararg keys: Any?, producer: suspend ProduceStateScope<T>.() -> Unit): State<T>","description":"androidx.compose.runtime.produceState","location":"compose/runtime/runtime/androidx.compose.runtime/produce-state.html","searchKeys":["produceState","fun <T> produceState(initialValue: T, vararg keys: Any?, producer: suspend ProduceStateScope<T>.() -> Unit): State<T>","androidx.compose.runtime.produceState"]},{"name":"fun <T> referentialEqualityPolicy(): SnapshotMutationPolicy<T>","description":"androidx.compose.runtime.referentialEqualityPolicy","location":"compose/runtime/runtime/androidx.compose.runtime/referential-equality-policy.html","searchKeys":["referentialEqualityPolicy","fun <T> referentialEqualityPolicy(): SnapshotMutationPolicy<T>","androidx.compose.runtime.referentialEqualityPolicy"]},{"name":"fun <T> rememberUpdatedState(newValue: T): State<T>","description":"androidx.compose.runtime.rememberUpdatedState","location":"compose/runtime/runtime/androidx.compose.runtime/remember-updated-state.html","searchKeys":["rememberUpdatedState","fun <T> rememberUpdatedState(newValue: T): State<T>","androidx.compose.runtime.rememberUpdatedState"]},{"name":"fun <T> snapshotFlow(block: () -> T): Flow<T>","description":"androidx.compose.runtime.snapshotFlow","location":"compose/runtime/runtime/androidx.compose.runtime/snapshot-flow.html","searchKeys":["snapshotFlow","fun <T> snapshotFlow(block: () -> T): Flow<T>","androidx.compose.runtime.snapshotFlow"]},{"name":"fun <T> staticCompositionLocalOf(defaultFactory: () -> T): ProvidableCompositionLocal<T>","description":"androidx.compose.runtime.staticCompositionLocalOf","location":"compose/runtime/runtime/androidx.compose.runtime/static-composition-local-of.html","searchKeys":["staticCompositionLocalOf","fun <T> staticCompositionLocalOf(defaultFactory: () -> T): ProvidableCompositionLocal<T>","androidx.compose.runtime.staticCompositionLocalOf"]},{"name":"fun <T> structuralEqualityPolicy(): SnapshotMutationPolicy<T>","description":"androidx.compose.runtime.structuralEqualityPolicy","location":"compose/runtime/runtime/androidx.compose.runtime/structural-equality-policy.html","searchKeys":["structuralEqualityPolicy","fun <T> structuralEqualityPolicy(): SnapshotMutationPolicy<T>","androidx.compose.runtime.structuralEqualityPolicy"]},{"name":"fun <V> AtomicReference(value: V)","description":"androidx.compose.runtime.AtomicReference.AtomicReference","location":"compose/runtime/runtime/androidx.compose.runtime/-atomic-reference/-atomic-reference.html","searchKeys":["AtomicReference","fun <V> AtomicReference(value: V)","androidx.compose.runtime.AtomicReference.AtomicReference"]},{"name":"fun <V> set(value: V, block: T.(V) -> Unit)","description":"androidx.compose.runtime.Updater.set","location":"compose/runtime/runtime/androidx.compose.runtime/-updater/set.html","searchKeys":["set","fun <V> set(value: V, block: T.(V) -> Unit)","androidx.compose.runtime.Updater.set"]},{"name":"fun <V> update(value: V, block: T.(V) -> Unit)","description":"androidx.compose.runtime.Updater.update","location":"compose/runtime/runtime/androidx.compose.runtime/-updater/update.html","searchKeys":["update","fun <V> update(value: V, block: T.(V) -> Unit)","androidx.compose.runtime.Updater.update"]},{"name":"fun BroadcastFrameClock(onNewAwaiters: () -> Unit? = null)","description":"androidx.compose.runtime.BroadcastFrameClock.BroadcastFrameClock","location":"compose/runtime/runtime/androidx.compose.runtime/-broadcast-frame-clock/-broadcast-frame-clock.html","searchKeys":["BroadcastFrameClock","fun BroadcastFrameClock(onNewAwaiters: () -> Unit? = null)","androidx.compose.runtime.BroadcastFrameClock.BroadcastFrameClock"]},{"name":"fun CheckResult(suggest: String)","description":"androidx.compose.runtime.CheckResult.CheckResult","location":"compose/runtime/runtime/androidx.compose.runtime/-check-result/-check-result.html","searchKeys":["CheckResult","fun CheckResult(suggest: String)","androidx.compose.runtime.CheckResult.CheckResult"]},{"name":"fun Composable()","description":"androidx.compose.runtime.Composable.Composable","location":"compose/runtime/runtime/androidx.compose.runtime/-composable/-composable.html","searchKeys":["Composable","fun Composable()","androidx.compose.runtime.Composable.Composable"]},{"name":"fun ComposeCompilerApi()","description":"androidx.compose.runtime.ComposeCompilerApi.ComposeCompilerApi","location":"compose/runtime/runtime/androidx.compose.runtime/-compose-compiler-api/-compose-compiler-api.html","searchKeys":["ComposeCompilerApi","fun ComposeCompilerApi()","androidx.compose.runtime.ComposeCompilerApi.ComposeCompilerApi"]},{"name":"fun Composition(applier: Applier<*>, parent: CompositionContext): Composition","description":"androidx.compose.runtime.Composition","location":"compose/runtime/runtime/androidx.compose.runtime/-composition.html","searchKeys":["Composition","fun Composition(applier: Applier<*>, parent: CompositionContext): Composition","androidx.compose.runtime.Composition"]},{"name":"fun Composition(applier: Applier<*>, parent: CompositionContext, recomposeCoroutineContext: CoroutineContext): Composition","description":"androidx.compose.runtime.Composition","location":"compose/runtime/runtime/androidx.compose.runtime/-composition.html","searchKeys":["Composition","fun Composition(applier: Applier<*>, parent: CompositionContext, recomposeCoroutineContext: CoroutineContext): Composition","androidx.compose.runtime.Composition"]},{"name":"fun CompositionLocalProvider(vararg values: ProvidedValue<*>, content: () -> Unit)","description":"androidx.compose.runtime.CompositionLocalProvider","location":"compose/runtime/runtime/androidx.compose.runtime/-composition-local-provider.html","searchKeys":["CompositionLocalProvider","fun CompositionLocalProvider(vararg values: ProvidedValue<*>, content: () -> Unit)","androidx.compose.runtime.CompositionLocalProvider"]},{"name":"fun ControlledComposition(applier: Applier<*>, parent: CompositionContext): ControlledComposition","description":"androidx.compose.runtime.ControlledComposition","location":"compose/runtime/runtime/androidx.compose.runtime/-controlled-composition.html","searchKeys":["ControlledComposition","fun ControlledComposition(applier: Applier<*>, parent: CompositionContext): ControlledComposition","androidx.compose.runtime.ControlledComposition"]},{"name":"fun ControlledComposition(applier: Applier<*>, parent: CompositionContext, recomposeCoroutineContext: CoroutineContext): ControlledComposition","description":"androidx.compose.runtime.ControlledComposition","location":"compose/runtime/runtime/androidx.compose.runtime/-controlled-composition.html","searchKeys":["ControlledComposition","fun ControlledComposition(applier: Applier<*>, parent: CompositionContext, recomposeCoroutineContext: CoroutineContext): ControlledComposition","androidx.compose.runtime.ControlledComposition"]},{"name":"fun Decoy(targetName: String, vararg signature: String)","description":"androidx.compose.runtime.internal.Decoy.Decoy","location":"compose/runtime/runtime/androidx.compose.runtime.internal/-decoy/-decoy.html","searchKeys":["Decoy","fun Decoy(targetName: String, vararg signature: String)","androidx.compose.runtime.internal.Decoy.Decoy"]},{"name":"fun DecoyImplementation(targetName: String)","description":"androidx.compose.runtime.internal.DecoyImplementation.DecoyImplementation","location":"compose/runtime/runtime/androidx.compose.runtime.internal/-decoy-implementation/-decoy-implementation.html","searchKeys":["DecoyImplementation","fun DecoyImplementation(targetName: String)","androidx.compose.runtime.internal.DecoyImplementation.DecoyImplementation"]},{"name":"fun DisallowComposableCalls()","description":"androidx.compose.runtime.DisallowComposableCalls.DisallowComposableCalls","location":"compose/runtime/runtime/androidx.compose.runtime/-disallow-composable-calls/-disallow-composable-calls.html","searchKeys":["DisallowComposableCalls","fun DisallowComposableCalls()","androidx.compose.runtime.DisallowComposableCalls.DisallowComposableCalls"]},{"name":"fun DisposableEffect(effect: DisposableEffectScope.() -> DisposableEffectResult)","description":"androidx.compose.runtime.DisposableEffect","location":"compose/runtime/runtime/androidx.compose.runtime/-disposable-effect.html","searchKeys":["DisposableEffect","fun DisposableEffect(effect: DisposableEffectScope.() -> DisposableEffectResult)","androidx.compose.runtime.DisposableEffect"]},{"name":"fun DisposableEffect(key1: Any?, effect: DisposableEffectScope.() -> DisposableEffectResult)","description":"androidx.compose.runtime.DisposableEffect","location":"compose/runtime/runtime/androidx.compose.runtime/-disposable-effect.html","searchKeys":["DisposableEffect","fun DisposableEffect(key1: Any?, effect: DisposableEffectScope.() -> DisposableEffectResult)","androidx.compose.runtime.DisposableEffect"]},{"name":"fun DisposableEffect(key1: Any?, key2: Any?, effect: DisposableEffectScope.() -> DisposableEffectResult)","description":"androidx.compose.runtime.DisposableEffect","location":"compose/runtime/runtime/androidx.compose.runtime/-disposable-effect.html","searchKeys":["DisposableEffect","fun DisposableEffect(key1: Any?, key2: Any?, effect: DisposableEffectScope.() -> DisposableEffectResult)","androidx.compose.runtime.DisposableEffect"]},{"name":"fun DisposableEffect(key1: Any?, key2: Any?, key3: Any?, effect: DisposableEffectScope.() -> DisposableEffectResult)","description":"androidx.compose.runtime.DisposableEffect","location":"compose/runtime/runtime/androidx.compose.runtime/-disposable-effect.html","searchKeys":["DisposableEffect","fun DisposableEffect(key1: Any?, key2: Any?, key3: Any?, effect: DisposableEffectScope.() -> DisposableEffectResult)","androidx.compose.runtime.DisposableEffect"]},{"name":"fun DisposableEffect(vararg keys: Any?, effect: DisposableEffectScope.() -> DisposableEffectResult)","description":"androidx.compose.runtime.DisposableEffect","location":"compose/runtime/runtime/androidx.compose.runtime/-disposable-effect.html","searchKeys":["DisposableEffect","fun DisposableEffect(vararg keys: Any?, effect: DisposableEffectScope.() -> DisposableEffectResult)","androidx.compose.runtime.DisposableEffect"]},{"name":"fun DisposableEffectScope()","description":"androidx.compose.runtime.DisposableEffectScope.DisposableEffectScope","location":"compose/runtime/runtime/androidx.compose.runtime/-disposable-effect-scope/-disposable-effect-scope.html","searchKeys":["DisposableEffectScope","fun DisposableEffectScope()","androidx.compose.runtime.DisposableEffectScope.DisposableEffectScope"]},{"name":"fun ExperimentalComposeApi()","description":"androidx.compose.runtime.ExperimentalComposeApi.ExperimentalComposeApi","location":"compose/runtime/runtime/androidx.compose.runtime/-experimental-compose-api/-experimental-compose-api.html","searchKeys":["ExperimentalComposeApi","fun ExperimentalComposeApi()","androidx.compose.runtime.ExperimentalComposeApi.ExperimentalComposeApi"]},{"name":"fun ExplicitGroupsComposable()","description":"androidx.compose.runtime.ExplicitGroupsComposable.ExplicitGroupsComposable","location":"compose/runtime/runtime/androidx.compose.runtime/-explicit-groups-composable/-explicit-groups-composable.html","searchKeys":["ExplicitGroupsComposable","fun ExplicitGroupsComposable()","androidx.compose.runtime.ExplicitGroupsComposable.ExplicitGroupsComposable"]},{"name":"fun Failure(snapshot: Snapshot)","description":"androidx.compose.runtime.snapshots.SnapshotApplyResult.Failure.Failure","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-apply-result/-failure/-failure.html","searchKeys":["Failure","fun Failure(snapshot: Snapshot)","androidx.compose.runtime.snapshots.SnapshotApplyResult.Failure.Failure"]},{"name":"fun Immutable()","description":"androidx.compose.runtime.Immutable.Immutable","location":"compose/runtime/runtime/androidx.compose.runtime/-immutable/-immutable.html","searchKeys":["Immutable","fun Immutable()","androidx.compose.runtime.Immutable.Immutable"]},{"name":"fun InternalComposeApi()","description":"androidx.compose.runtime.InternalComposeApi.InternalComposeApi","location":"compose/runtime/runtime/androidx.compose.runtime/-internal-compose-api/-internal-compose-api.html","searchKeys":["InternalComposeApi","fun InternalComposeApi()","androidx.compose.runtime.InternalComposeApi.InternalComposeApi"]},{"name":"fun LaunchedEffect(block: suspend CoroutineScope.() -> Unit)","description":"androidx.compose.runtime.LaunchedEffect","location":"compose/runtime/runtime/androidx.compose.runtime/-launched-effect.html","searchKeys":["LaunchedEffect","fun LaunchedEffect(block: suspend CoroutineScope.() -> Unit)","androidx.compose.runtime.LaunchedEffect"]},{"name":"fun LaunchedEffect(key1: Any?, block: suspend CoroutineScope.() -> Unit)","description":"androidx.compose.runtime.LaunchedEffect","location":"compose/runtime/runtime/androidx.compose.runtime/-launched-effect.html","searchKeys":["LaunchedEffect","fun LaunchedEffect(key1: Any?, block: suspend CoroutineScope.() -> Unit)","androidx.compose.runtime.LaunchedEffect"]},{"name":"fun LaunchedEffect(key1: Any?, key2: Any?, block: suspend CoroutineScope.() -> Unit)","description":"androidx.compose.runtime.LaunchedEffect","location":"compose/runtime/runtime/androidx.compose.runtime/-launched-effect.html","searchKeys":["LaunchedEffect","fun LaunchedEffect(key1: Any?, key2: Any?, block: suspend CoroutineScope.() -> Unit)","androidx.compose.runtime.LaunchedEffect"]},{"name":"fun LaunchedEffect(key1: Any?, key2: Any?, key3: Any?, block: suspend CoroutineScope.() -> Unit)","description":"androidx.compose.runtime.LaunchedEffect","location":"compose/runtime/runtime/androidx.compose.runtime/-launched-effect.html","searchKeys":["LaunchedEffect","fun LaunchedEffect(key1: Any?, key2: Any?, key3: Any?, block: suspend CoroutineScope.() -> Unit)","androidx.compose.runtime.LaunchedEffect"]},{"name":"fun LaunchedEffect(vararg keys: Any?, block: suspend CoroutineScope.() -> Unit)","description":"androidx.compose.runtime.LaunchedEffect","location":"compose/runtime/runtime/androidx.compose.runtime/-launched-effect.html","searchKeys":["LaunchedEffect","fun LaunchedEffect(vararg keys: Any?, block: suspend CoroutineScope.() -> Unit)","androidx.compose.runtime.LaunchedEffect"]},{"name":"fun LiveLiteralFileInfo(file: String)","description":"androidx.compose.runtime.internal.LiveLiteralFileInfo.LiveLiteralFileInfo","location":"compose/runtime/runtime/androidx.compose.runtime.internal/-live-literal-file-info/-live-literal-file-info.html","searchKeys":["LiveLiteralFileInfo","fun LiveLiteralFileInfo(file: String)","androidx.compose.runtime.internal.LiveLiteralFileInfo.LiveLiteralFileInfo"]},{"name":"fun LiveLiteralInfo(key: String, offset: Int)","description":"androidx.compose.runtime.internal.LiveLiteralInfo.LiveLiteralInfo","location":"compose/runtime/runtime/androidx.compose.runtime.internal/-live-literal-info/-live-literal-info.html","searchKeys":["LiveLiteralInfo","fun LiveLiteralInfo(key: String, offset: Int)","androidx.compose.runtime.internal.LiveLiteralInfo.LiveLiteralInfo"]},{"name":"fun NoLiveLiterals()","description":"androidx.compose.runtime.NoLiveLiterals.NoLiveLiterals","location":"compose/runtime/runtime/androidx.compose.runtime/-no-live-literals/-no-live-literals.html","searchKeys":["NoLiveLiterals","fun NoLiveLiterals()","androidx.compose.runtime.NoLiveLiterals.NoLiveLiterals"]},{"name":"fun NonRestartableComposable()","description":"androidx.compose.runtime.NonRestartableComposable.NonRestartableComposable","location":"compose/runtime/runtime/androidx.compose.runtime/-non-restartable-composable/-non-restartable-composable.html","searchKeys":["NonRestartableComposable","fun NonRestartableComposable()","androidx.compose.runtime.NonRestartableComposable.NonRestartableComposable"]},{"name":"fun PausableMonotonicFrameClock(frameClock: MonotonicFrameClock)","description":"androidx.compose.runtime.PausableMonotonicFrameClock.PausableMonotonicFrameClock","location":"compose/runtime/runtime/androidx.compose.runtime/-pausable-monotonic-frame-clock/-pausable-monotonic-frame-clock.html","searchKeys":["PausableMonotonicFrameClock","fun PausableMonotonicFrameClock(frameClock: MonotonicFrameClock)","androidx.compose.runtime.PausableMonotonicFrameClock.PausableMonotonicFrameClock"]},{"name":"fun ReadOnlyComposable()","description":"androidx.compose.runtime.ReadOnlyComposable.ReadOnlyComposable","location":"compose/runtime/runtime/androidx.compose.runtime/-read-only-composable/-read-only-composable.html","searchKeys":["ReadOnlyComposable","fun ReadOnlyComposable()","androidx.compose.runtime.ReadOnlyComposable.ReadOnlyComposable"]},{"name":"fun Recomposer(effectCoroutineContext: CoroutineContext)","description":"androidx.compose.runtime.Recomposer.Recomposer","location":"compose/runtime/runtime/androidx.compose.runtime/-recomposer/-recomposer.html","searchKeys":["Recomposer","fun Recomposer(effectCoroutineContext: CoroutineContext)","androidx.compose.runtime.Recomposer.Recomposer"]},{"name":"fun SideEffect(effect: () -> Unit)","description":"androidx.compose.runtime.SideEffect","location":"compose/runtime/runtime/androidx.compose.runtime/-side-effect.html","searchKeys":["SideEffect","fun SideEffect(effect: () -> Unit)","androidx.compose.runtime.SideEffect"]},{"name":"fun SkippableUpdater(composer: Composer)","description":"androidx.compose.runtime.SkippableUpdater.SkippableUpdater","location":"compose/runtime/runtime/androidx.compose.runtime/-skippable-updater/-skippable-updater.html","searchKeys":["SkippableUpdater","fun SkippableUpdater(composer: Composer)","androidx.compose.runtime.SkippableUpdater.SkippableUpdater"]},{"name":"fun SnapshotApplyConflictException(snapshot: Snapshot)","description":"androidx.compose.runtime.snapshots.SnapshotApplyConflictException.SnapshotApplyConflictException","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-apply-conflict-exception/-snapshot-apply-conflict-exception.html","searchKeys":["SnapshotApplyConflictException","fun SnapshotApplyConflictException(snapshot: Snapshot)","androidx.compose.runtime.snapshots.SnapshotApplyConflictException.SnapshotApplyConflictException"]},{"name":"fun SnapshotStateList()","description":"androidx.compose.runtime.snapshots.SnapshotStateList.SnapshotStateList","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-state-list/-snapshot-state-list.html","searchKeys":["SnapshotStateList","fun SnapshotStateList()","androidx.compose.runtime.snapshots.SnapshotStateList.SnapshotStateList"]},{"name":"fun SnapshotStateMap()","description":"androidx.compose.runtime.snapshots.SnapshotStateMap.SnapshotStateMap","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-state-map/-snapshot-state-map.html","searchKeys":["SnapshotStateMap","fun SnapshotStateMap()","androidx.compose.runtime.snapshots.SnapshotStateMap.SnapshotStateMap"]},{"name":"fun SnapshotStateObserver(onChangedExecutor: (callback: () -> Unit) -> Unit)","description":"androidx.compose.runtime.snapshots.SnapshotStateObserver.SnapshotStateObserver","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-state-observer/-snapshot-state-observer.html","searchKeys":["SnapshotStateObserver","fun SnapshotStateObserver(onChangedExecutor: (callback: () -> Unit) -> Unit)","androidx.compose.runtime.snapshots.SnapshotStateObserver.SnapshotStateObserver"]},{"name":"fun StabilityInferred(parameters: Int)","description":"androidx.compose.runtime.internal.StabilityInferred.StabilityInferred","location":"compose/runtime/runtime/androidx.compose.runtime.internal/-stability-inferred/-stability-inferred.html","searchKeys":["StabilityInferred","fun StabilityInferred(parameters: Int)","androidx.compose.runtime.internal.StabilityInferred.StabilityInferred"]},{"name":"fun Stable()","description":"androidx.compose.runtime.Stable.Stable","location":"compose/runtime/runtime/androidx.compose.runtime/-stable/-stable.html","searchKeys":["Stable","fun Stable()","androidx.compose.runtime.Stable.Stable"]},{"name":"fun StableMarker()","description":"androidx.compose.runtime.StableMarker.StableMarker","location":"compose/runtime/runtime/androidx.compose.runtime/-stable-marker/-stable-marker.html","searchKeys":["StableMarker","fun StableMarker()","androidx.compose.runtime.StableMarker.StableMarker"]},{"name":"fun StateRecord()","description":"androidx.compose.runtime.snapshots.StateRecord.StateRecord","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-state-record/-state-record.html","searchKeys":["StateRecord","fun StateRecord()","androidx.compose.runtime.snapshots.StateRecord.StateRecord"]},{"name":"fun TestOnly()","description":"androidx.compose.runtime.TestOnly.TestOnly","location":"compose/runtime/runtime/androidx.compose.runtime/-test-only/-test-only.html","searchKeys":["TestOnly","fun TestOnly()","androidx.compose.runtime.TestOnly.TestOnly"]},{"name":"fun Updater(composer: Composer)","description":"androidx.compose.runtime.Updater.Updater","location":"compose/runtime/runtime/androidx.compose.runtime/-updater/-updater.html","searchKeys":["Updater","fun Updater(composer: Composer)","androidx.compose.runtime.Updater.Updater"]},{"name":"fun add(element: T): Boolean","description":"androidx.compose.runtime.collection.MutableVector.add","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/add.html","searchKeys":["add","fun add(element: T): Boolean","androidx.compose.runtime.collection.MutableVector.add"]},{"name":"fun add(index: Int, element: T)","description":"androidx.compose.runtime.collection.MutableVector.add","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/add.html","searchKeys":["add","fun add(index: Int, element: T)","androidx.compose.runtime.collection.MutableVector.add"]},{"name":"fun addAll(elements: Array<T>): Boolean","description":"androidx.compose.runtime.collection.MutableVector.addAll","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/add-all.html","searchKeys":["addAll","fun addAll(elements: Array<T>): Boolean","androidx.compose.runtime.collection.MutableVector.addAll"]},{"name":"fun addAll(elements: Collection<T>): Boolean","description":"androidx.compose.runtime.collection.MutableVector.addAll","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/add-all.html","searchKeys":["addAll","fun addAll(elements: Collection<T>): Boolean","androidx.compose.runtime.collection.MutableVector.addAll"]},{"name":"fun addAll(index: Int, elements: Collection<T>): Boolean","description":"androidx.compose.runtime.collection.MutableVector.addAll","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/add-all.html","searchKeys":["addAll","fun addAll(index: Int, elements: Collection<T>): Boolean","androidx.compose.runtime.collection.MutableVector.addAll"]},{"name":"fun addAll(index: Int, elements: List<T>): Boolean","description":"androidx.compose.runtime.collection.MutableVector.addAll","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/add-all.html","searchKeys":["addAll","fun addAll(index: Int, elements: List<T>): Boolean","androidx.compose.runtime.collection.MutableVector.addAll"]},{"name":"fun addAll(index: Int, elements: MutableVector<T>): Boolean","description":"androidx.compose.runtime.collection.MutableVector.addAll","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/add-all.html","searchKeys":["addAll","fun addAll(index: Int, elements: MutableVector<T>): Boolean","androidx.compose.runtime.collection.MutableVector.addAll"]},{"name":"fun asMutableList(): MutableList<T>","description":"androidx.compose.runtime.collection.MutableVector.asMutableList","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/as-mutable-list.html","searchKeys":["asMutableList","fun asMutableList(): MutableList<T>","androidx.compose.runtime.collection.MutableVector.asMutableList"]},{"name":"fun asRecomposerInfo(): RecomposerInfo","description":"androidx.compose.runtime.Recomposer.asRecomposerInfo","location":"compose/runtime/runtime/androidx.compose.runtime/-recomposer/as-recomposer-info.html","searchKeys":["asRecomposerInfo","fun asRecomposerInfo(): RecomposerInfo","androidx.compose.runtime.Recomposer.asRecomposerInfo"]},{"name":"fun cancel()","description":"androidx.compose.runtime.Recomposer.cancel","location":"compose/runtime/runtime/androidx.compose.runtime/-recomposer/cancel.html","searchKeys":["cancel","fun cancel()","androidx.compose.runtime.Recomposer.cancel"]},{"name":"fun cancel(cancellationException: CancellationException = CancellationException(\"clock cancelled\"))","description":"androidx.compose.runtime.BroadcastFrameClock.cancel","location":"compose/runtime/runtime/androidx.compose.runtime/-broadcast-frame-clock/cancel.html","searchKeys":["cancel","fun cancel(cancellationException: CancellationException = CancellationException(\"clock cancelled\"))","androidx.compose.runtime.BroadcastFrameClock.cancel"]},{"name":"fun clear()","description":"androidx.compose.runtime.collection.MutableVector.clear","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/clear.html","searchKeys":["clear","fun clear()","androidx.compose.runtime.collection.MutableVector.clear"]},{"name":"fun clear()","description":"androidx.compose.runtime.snapshots.SnapshotStateObserver.clear","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-state-observer/clear.html","searchKeys":["clear","fun clear()","androidx.compose.runtime.snapshots.SnapshotStateObserver.clear"]},{"name":"fun clear(scope: Any)","description":"androidx.compose.runtime.snapshots.SnapshotStateObserver.clear","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-state-observer/clear.html","searchKeys":["clear","fun clear(scope: Any)","androidx.compose.runtime.snapshots.SnapshotStateObserver.clear"]},{"name":"fun clearIf(predicate: (scope: Any) -> Boolean)","description":"androidx.compose.runtime.snapshots.SnapshotStateObserver.clearIf","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-state-observer/clear-if.html","searchKeys":["clearIf","fun clearIf(predicate: (scope: Any) -> Boolean)","androidx.compose.runtime.snapshots.SnapshotStateObserver.clearIf"]},{"name":"fun close()","description":"androidx.compose.runtime.Recomposer.close","location":"compose/runtime/runtime/androidx.compose.runtime/-recomposer/close.html","searchKeys":["close","fun close()","androidx.compose.runtime.Recomposer.close"]},{"name":"fun compareAndSet(expect: V, newValue: V): Boolean","description":"androidx.compose.runtime.AtomicReference.compareAndSet","location":"compose/runtime/runtime/androidx.compose.runtime/-atomic-reference/compare-and-set.html","searchKeys":["compareAndSet","fun compareAndSet(expect: V, newValue: V): Boolean","androidx.compose.runtime.AtomicReference.compareAndSet"]},{"name":"fun composableLambda(composer: Composer, key: Int, tracked: Boolean, sourceInformation: String?, block: Any): ComposableLambda","description":"androidx.compose.runtime.internal.composableLambda","location":"compose/runtime/runtime/androidx.compose.runtime.internal/composable-lambda.html","searchKeys":["composableLambda","fun composableLambda(composer: Composer, key: Int, tracked: Boolean, sourceInformation: String?, block: Any): ComposableLambda","androidx.compose.runtime.internal.composableLambda"]},{"name":"fun composableLambdaInstance(key: Int, tracked: Boolean, sourceInformation: String?, block: Any): ComposableLambda","description":"androidx.compose.runtime.internal.composableLambdaInstance","location":"compose/runtime/runtime/androidx.compose.runtime.internal/composable-lambda-instance.html","searchKeys":["composableLambdaInstance","fun composableLambdaInstance(key: Int, tracked: Boolean, sourceInformation: String?, block: Any): ComposableLambda","androidx.compose.runtime.internal.composableLambdaInstance"]},{"name":"fun composableLambdaN(composer: Composer, key: Int, tracked: Boolean, sourceInformation: String?, arity: Int, block: Any): ComposableLambdaN","description":"androidx.compose.runtime.internal.composableLambdaN","location":"compose/runtime/runtime/androidx.compose.runtime.internal/[android]composable-lambda-n.html","searchKeys":["composableLambdaN","fun composableLambdaN(composer: Composer, key: Int, tracked: Boolean, sourceInformation: String?, arity: Int, block: Any): ComposableLambdaN","androidx.compose.runtime.internal.composableLambdaN"]},{"name":"fun composableLambdaN(composer: Composer, key: Int, tracked: Boolean, sourceInformation: String?, arity: Int, block: Any): ComposableLambdaN","description":"androidx.compose.runtime.internal.composableLambdaN","location":"compose/runtime/runtime/androidx.compose.runtime.internal/[jvm]composable-lambda-n.html","searchKeys":["composableLambdaN","fun composableLambdaN(composer: Composer, key: Int, tracked: Boolean, sourceInformation: String?, arity: Int, block: Any): ComposableLambdaN","androidx.compose.runtime.internal.composableLambdaN"]},{"name":"fun composableLambdaNInstance(key: Int, tracked: Boolean, sourceInformation: String?, arity: Int, block: Any): ComposableLambdaN","description":"androidx.compose.runtime.internal.composableLambdaNInstance","location":"compose/runtime/runtime/androidx.compose.runtime.internal/[android]composable-lambda-n-instance.html","searchKeys":["composableLambdaNInstance","fun composableLambdaNInstance(key: Int, tracked: Boolean, sourceInformation: String?, arity: Int, block: Any): ComposableLambdaN","androidx.compose.runtime.internal.composableLambdaNInstance"]},{"name":"fun composableLambdaNInstance(key: Int, tracked: Boolean, sourceInformation: String?, arity: Int, block: Any): ComposableLambdaN","description":"androidx.compose.runtime.internal.composableLambdaNInstance","location":"compose/runtime/runtime/androidx.compose.runtime.internal/[jvm]composable-lambda-n-instance.html","searchKeys":["composableLambdaNInstance","fun composableLambdaNInstance(key: Int, tracked: Boolean, sourceInformation: String?, arity: Int, block: Any): ComposableLambdaN","androidx.compose.runtime.internal.composableLambdaNInstance"]},{"name":"fun containsAll(elements: Collection<T>): Boolean","description":"androidx.compose.runtime.collection.MutableVector.containsAll","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/contains-all.html","searchKeys":["containsAll","fun containsAll(elements: Collection<T>): Boolean","androidx.compose.runtime.collection.MutableVector.containsAll"]},{"name":"fun containsAll(elements: List<T>): Boolean","description":"androidx.compose.runtime.collection.MutableVector.containsAll","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/contains-all.html","searchKeys":["containsAll","fun containsAll(elements: List<T>): Boolean","androidx.compose.runtime.collection.MutableVector.containsAll"]},{"name":"fun containsAll(elements: MutableVector<T>): Boolean","description":"androidx.compose.runtime.collection.MutableVector.containsAll","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/contains-all.html","searchKeys":["containsAll","fun containsAll(elements: MutableVector<T>): Boolean","androidx.compose.runtime.collection.MutableVector.containsAll"]},{"name":"fun contentEquals(other: MutableVector<T>): Boolean","description":"androidx.compose.runtime.collection.MutableVector.contentEquals","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/content-equals.html","searchKeys":["contentEquals","fun contentEquals(other: MutableVector<T>): Boolean","androidx.compose.runtime.collection.MutableVector.contentEquals"]},{"name":"fun decoy(fName: String): Nothing","description":"androidx.compose.runtime.internal.decoy","location":"compose/runtime/runtime/androidx.compose.runtime.internal/decoy.html","searchKeys":["decoy","fun decoy(fName: String): Nothing","androidx.compose.runtime.internal.decoy"]},{"name":"fun enableLiveLiterals()","description":"androidx.compose.runtime.internal.enableLiveLiterals","location":"compose/runtime/runtime/androidx.compose.runtime.internal/enable-live-literals.html","searchKeys":["enableLiveLiterals","fun enableLiveLiterals()","androidx.compose.runtime.internal.enableLiveLiterals"]},{"name":"fun ensureCapacity(capacity: Int)","description":"androidx.compose.runtime.collection.MutableVector.ensureCapacity","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/ensure-capacity.html","searchKeys":["ensureCapacity","fun ensureCapacity(capacity: Int)","androidx.compose.runtime.collection.MutableVector.ensureCapacity"]},{"name":"fun first(): T","description":"androidx.compose.runtime.collection.MutableVector.first","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/first.html","searchKeys":["first","fun first(): T","androidx.compose.runtime.collection.MutableVector.first"]},{"name":"fun fun interface ObserverHandle","description":"androidx.compose.runtime.snapshots.ObserverHandle","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-observer-handle/index.html","searchKeys":["ObserverHandle","fun fun interface ObserverHandle","androidx.compose.runtime.snapshots.ObserverHandle"]},{"name":"fun get(): V","description":"androidx.compose.runtime.AtomicReference.get","location":"compose/runtime/runtime/androidx.compose.runtime/-atomic-reference/get.html","searchKeys":["get","fun get(): V","androidx.compose.runtime.AtomicReference.get"]},{"name":"fun getAndSet(value: V): V","description":"androidx.compose.runtime.AtomicReference.getAndSet","location":"compose/runtime/runtime/androidx.compose.runtime/-atomic-reference/get-and-set.html","searchKeys":["getAndSet","fun getAndSet(value: V): V","androidx.compose.runtime.AtomicReference.getAndSet"]},{"name":"fun indexOf(element: T): Int","description":"androidx.compose.runtime.collection.MutableVector.indexOf","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/index-of.html","searchKeys":["indexOf","fun indexOf(element: T): Int","androidx.compose.runtime.collection.MutableVector.indexOf"]},{"name":"fun init(block: T.() -> Unit)","description":"androidx.compose.runtime.Updater.init","location":"compose/runtime/runtime/androidx.compose.runtime/-updater/init.html","searchKeys":["init","fun init(block: T.() -> Unit)","androidx.compose.runtime.Updater.init"]},{"name":"fun isEmpty(): Boolean","description":"androidx.compose.runtime.collection.MutableVector.isEmpty","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/is-empty.html","searchKeys":["isEmpty","fun isEmpty(): Boolean","androidx.compose.runtime.collection.MutableVector.isEmpty"]},{"name":"fun isNotEmpty(): Boolean","description":"androidx.compose.runtime.collection.MutableVector.isNotEmpty","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/is-not-empty.html","searchKeys":["isNotEmpty","fun isNotEmpty(): Boolean","androidx.compose.runtime.collection.MutableVector.isNotEmpty"]},{"name":"fun last(): T","description":"androidx.compose.runtime.collection.MutableVector.last","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/last.html","searchKeys":["last","fun last(): T","androidx.compose.runtime.collection.MutableVector.last"]},{"name":"fun lastIndexOf(element: T): Int","description":"androidx.compose.runtime.collection.MutableVector.lastIndexOf","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/last-index-of.html","searchKeys":["lastIndexOf","fun lastIndexOf(element: T): Int","androidx.compose.runtime.collection.MutableVector.lastIndexOf"]},{"name":"fun notifyChanges(changes: Set<Any>, snapshot: Snapshot)","description":"androidx.compose.runtime.snapshots.SnapshotStateObserver.notifyChanges","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-state-observer/notify-changes.html","searchKeys":["notifyChanges","fun notifyChanges(changes: Set<Any>, snapshot: Snapshot)","androidx.compose.runtime.snapshots.SnapshotStateObserver.notifyChanges"]},{"name":"fun notifyObjectsInitialized()","description":"androidx.compose.runtime.snapshots.Snapshot.Companion.notifyObjectsInitialized","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot/-companion/notify-objects-initialized.html","searchKeys":["notifyObjectsInitialized","fun notifyObjectsInitialized()","androidx.compose.runtime.snapshots.Snapshot.Companion.notifyObjectsInitialized"]},{"name":"fun openSnapshotCount(): Int","description":"androidx.compose.runtime.snapshots.Snapshot.Companion.openSnapshotCount","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot/-companion/open-snapshot-count.html","searchKeys":["openSnapshotCount","fun openSnapshotCount(): Int","androidx.compose.runtime.snapshots.Snapshot.Companion.openSnapshotCount"]},{"name":"fun pause()","description":"androidx.compose.runtime.PausableMonotonicFrameClock.pause","location":"compose/runtime/runtime/androidx.compose.runtime/-pausable-monotonic-frame-clock/pause.html","searchKeys":["pause","fun pause()","androidx.compose.runtime.PausableMonotonicFrameClock.pause"]},{"name":"fun reconcile(block: T.() -> Unit)","description":"androidx.compose.runtime.Updater.reconcile","location":"compose/runtime/runtime/androidx.compose.runtime/-updater/reconcile.html","searchKeys":["reconcile","fun reconcile(block: T.() -> Unit)","androidx.compose.runtime.Updater.reconcile"]},{"name":"fun registerApplyObserver(observer: (Set<Any>, Snapshot) -> Unit): ObserverHandle","description":"androidx.compose.runtime.snapshots.Snapshot.Companion.registerApplyObserver","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot/-companion/register-apply-observer.html","searchKeys":["registerApplyObserver","fun registerApplyObserver(observer: (Set<Any>, Snapshot) -> Unit): ObserverHandle","androidx.compose.runtime.snapshots.Snapshot.Companion.registerApplyObserver"]},{"name":"fun registerGlobalWriteObserver(observer: (Any) -> Unit): ObserverHandle","description":"androidx.compose.runtime.snapshots.Snapshot.Companion.registerGlobalWriteObserver","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot/-companion/register-global-write-observer.html","searchKeys":["registerGlobalWriteObserver","fun registerGlobalWriteObserver(observer: (Any) -> Unit): ObserverHandle","androidx.compose.runtime.snapshots.Snapshot.Companion.registerGlobalWriteObserver"]},{"name":"fun rememberCompositionContext(): CompositionContext","description":"androidx.compose.runtime.rememberCompositionContext","location":"compose/runtime/runtime/androidx.compose.runtime/remember-composition-context.html","searchKeys":["rememberCompositionContext","fun rememberCompositionContext(): CompositionContext","androidx.compose.runtime.rememberCompositionContext"]},{"name":"fun remove(element: T): Boolean","description":"androidx.compose.runtime.collection.MutableVector.remove","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/remove.html","searchKeys":["remove","fun remove(element: T): Boolean","androidx.compose.runtime.collection.MutableVector.remove"]},{"name":"fun removeAll(elements: Collection<T>): Boolean","description":"androidx.compose.runtime.collection.MutableVector.removeAll","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/remove-all.html","searchKeys":["removeAll","fun removeAll(elements: Collection<T>): Boolean","androidx.compose.runtime.collection.MutableVector.removeAll"]},{"name":"fun removeAll(elements: List<T>): Boolean","description":"androidx.compose.runtime.collection.MutableVector.removeAll","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/remove-all.html","searchKeys":["removeAll","fun removeAll(elements: List<T>): Boolean","androidx.compose.runtime.collection.MutableVector.removeAll"]},{"name":"fun removeAll(elements: MutableVector<T>): Boolean","description":"androidx.compose.runtime.collection.MutableVector.removeAll","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/remove-all.html","searchKeys":["removeAll","fun removeAll(elements: MutableVector<T>): Boolean","androidx.compose.runtime.collection.MutableVector.removeAll"]},{"name":"fun removeAt(index: Int): T","description":"androidx.compose.runtime.collection.MutableVector.removeAt","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/remove-at.html","searchKeys":["removeAt","fun removeAt(index: Int): T","androidx.compose.runtime.collection.MutableVector.removeAt"]},{"name":"fun removeRange(fromIndex: Int, toIndex: Int)","description":"androidx.compose.runtime.snapshots.SnapshotStateList.removeRange","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-state-list/remove-range.html","searchKeys":["removeRange","fun removeRange(fromIndex: Int, toIndex: Int)","androidx.compose.runtime.snapshots.SnapshotStateList.removeRange"]},{"name":"fun removeRange(start: Int, end: Int)","description":"androidx.compose.runtime.collection.MutableVector.removeRange","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/remove-range.html","searchKeys":["removeRange","fun removeRange(start: Int, end: Int)","androidx.compose.runtime.collection.MutableVector.removeRange"]},{"name":"fun resume()","description":"androidx.compose.runtime.PausableMonotonicFrameClock.resume","location":"compose/runtime/runtime/androidx.compose.runtime/-pausable-monotonic-frame-clock/resume.html","searchKeys":["resume","fun resume()","androidx.compose.runtime.PausableMonotonicFrameClock.resume"]},{"name":"fun retainAll(elements: Collection<T>): Boolean","description":"androidx.compose.runtime.collection.MutableVector.retainAll","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/retain-all.html","searchKeys":["retainAll","fun retainAll(elements: Collection<T>): Boolean","androidx.compose.runtime.collection.MutableVector.retainAll"]},{"name":"fun sendApplyNotifications()","description":"androidx.compose.runtime.snapshots.Snapshot.Companion.sendApplyNotifications","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot/-companion/send-apply-notifications.html","searchKeys":["sendApplyNotifications","fun sendApplyNotifications()","androidx.compose.runtime.snapshots.Snapshot.Companion.sendApplyNotifications"]},{"name":"fun sendFrame(timeNanos: Long)","description":"androidx.compose.runtime.BroadcastFrameClock.sendFrame","location":"compose/runtime/runtime/androidx.compose.runtime/-broadcast-frame-clock/send-frame.html","searchKeys":["sendFrame","fun sendFrame(timeNanos: Long)","androidx.compose.runtime.BroadcastFrameClock.sendFrame"]},{"name":"fun set(value: V)","description":"androidx.compose.runtime.AtomicReference.set","location":"compose/runtime/runtime/androidx.compose.runtime/-atomic-reference/set.html","searchKeys":["set","fun set(value: V)","androidx.compose.runtime.AtomicReference.set"]},{"name":"fun sortWith(comparator: Comparator<T>)","description":"androidx.compose.runtime.collection.MutableVector.sortWith","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/sort-with.html","searchKeys":["sortWith","fun sortWith(comparator: Comparator<T>)","androidx.compose.runtime.collection.MutableVector.sortWith"]},{"name":"fun start()","description":"androidx.compose.runtime.snapshots.SnapshotStateObserver.start","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-state-observer/start.html","searchKeys":["start","fun start()","androidx.compose.runtime.snapshots.SnapshotStateObserver.start"]},{"name":"fun stop()","description":"androidx.compose.runtime.snapshots.SnapshotStateObserver.stop","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-state-observer/stop.html","searchKeys":["stop","fun stop()","androidx.compose.runtime.snapshots.SnapshotStateObserver.stop"]},{"name":"fun takeMutableSnapshot(readObserver: (Any) -> Unit? = null, writeObserver: (Any) -> Unit? = null): MutableSnapshot","description":"androidx.compose.runtime.snapshots.Snapshot.Companion.takeMutableSnapshot","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot/-companion/take-mutable-snapshot.html","searchKeys":["takeMutableSnapshot","fun takeMutableSnapshot(readObserver: (Any) -> Unit? = null, writeObserver: (Any) -> Unit? = null): MutableSnapshot","androidx.compose.runtime.snapshots.Snapshot.Companion.takeMutableSnapshot"]},{"name":"fun takeSnapshot(readObserver: (Any) -> Unit? = null): Snapshot","description":"androidx.compose.runtime.snapshots.Snapshot.Companion.takeSnapshot","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot/-companion/take-snapshot.html","searchKeys":["takeSnapshot","fun takeSnapshot(readObserver: (Any) -> Unit? = null): Snapshot","androidx.compose.runtime.snapshots.Snapshot.Companion.takeSnapshot"]},{"name":"fun updateLiveLiteralValue(key: String, value: Any?)","description":"androidx.compose.runtime.internal.updateLiveLiteralValue","location":"compose/runtime/runtime/androidx.compose.runtime.internal/update-live-literal-value.html","searchKeys":["updateLiveLiteralValue","fun updateLiveLiteralValue(key: String, value: Any?)","androidx.compose.runtime.internal.updateLiveLiteralValue"]},{"name":"fun withNoObservations(block: () -> Unit)","description":"androidx.compose.runtime.snapshots.SnapshotStateObserver.withNoObservations","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-state-observer/with-no-observations.html","searchKeys":["withNoObservations","fun withNoObservations(block: () -> Unit)","androidx.compose.runtime.snapshots.SnapshotStateObserver.withNoObservations"]},{"name":"infix fun provides(value: T): ProvidedValue<T>","description":"androidx.compose.runtime.ProvidableCompositionLocal.provides","location":"compose/runtime/runtime/androidx.compose.runtime/-providable-composition-local/provides.html","searchKeys":["provides","infix fun provides(value: T): ProvidedValue<T>","androidx.compose.runtime.ProvidableCompositionLocal.provides"]},{"name":"infix fun providesDefault(value: T): ProvidedValue<T>","description":"androidx.compose.runtime.ProvidableCompositionLocal.providesDefault","location":"compose/runtime/runtime/androidx.compose.runtime/-providable-composition-local/provides-default.html","searchKeys":["providesDefault","infix fun providesDefault(value: T): ProvidedValue<T>","androidx.compose.runtime.ProvidableCompositionLocal.providesDefault"]},{"name":"inline class SkippableUpdater<T>(composer: Composer)","description":"androidx.compose.runtime.SkippableUpdater","location":"compose/runtime/runtime/androidx.compose.runtime/-skippable-updater/index.html","searchKeys":["SkippableUpdater","inline class SkippableUpdater<T>(composer: Composer)","androidx.compose.runtime.SkippableUpdater"]},{"name":"inline class Updater<T>(composer: Composer)","description":"androidx.compose.runtime.Updater","location":"compose/runtime/runtime/androidx.compose.runtime/-updater/index.html","searchKeys":["Updater","inline class Updater<T>(composer: Composer)","androidx.compose.runtime.Updater"]},{"name":"inline fun <R> fold(initial: R, operation: (R, T) -> R): R","description":"androidx.compose.runtime.collection.MutableVector.fold","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/fold.html","searchKeys":["fold","inline fun <R> fold(initial: R, operation: (R, T) -> R): R","androidx.compose.runtime.collection.MutableVector.fold"]},{"name":"inline fun <R> foldIndexed(initial: R, operation: (index: Int, R, T) -> R): R","description":"androidx.compose.runtime.collection.MutableVector.foldIndexed","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/fold-indexed.html","searchKeys":["foldIndexed","inline fun <R> foldIndexed(initial: R, operation: (index: Int, R, T) -> R): R","androidx.compose.runtime.collection.MutableVector.foldIndexed"]},{"name":"inline fun <R> foldRight(initial: R, operation: (T, R) -> R): R","description":"androidx.compose.runtime.collection.MutableVector.foldRight","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/fold-right.html","searchKeys":["foldRight","inline fun <R> foldRight(initial: R, operation: (T, R) -> R): R","androidx.compose.runtime.collection.MutableVector.foldRight"]},{"name":"inline fun <R> foldRightIndexed(initial: R, operation: (index: Int, T, R) -> R): R","description":"androidx.compose.runtime.collection.MutableVector.foldRightIndexed","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/fold-right-indexed.html","searchKeys":["foldRightIndexed","inline fun <R> foldRightIndexed(initial: R, operation: (index: Int, T, R) -> R): R","androidx.compose.runtime.collection.MutableVector.foldRightIndexed"]},{"name":"inline fun <R> map(transform: (T) -> R): Array<R>","description":"androidx.compose.runtime.collection.MutableVector.map","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/map.html","searchKeys":["map","inline fun <R> map(transform: (T) -> R): Array<R>","androidx.compose.runtime.collection.MutableVector.map"]},{"name":"inline fun <R> mapIndexed(transform: (index: Int, T) -> R): Array<R>","description":"androidx.compose.runtime.collection.MutableVector.mapIndexed","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/map-indexed.html","searchKeys":["mapIndexed","inline fun <R> mapIndexed(transform: (index: Int, T) -> R): Array<R>","androidx.compose.runtime.collection.MutableVector.mapIndexed"]},{"name":"inline fun <R> mapIndexedNotNull(transform: (index: Int, T) -> R?): MutableVector<R>","description":"androidx.compose.runtime.collection.MutableVector.mapIndexedNotNull","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/map-indexed-not-null.html","searchKeys":["mapIndexedNotNull","inline fun <R> mapIndexedNotNull(transform: (index: Int, T) -> R?): MutableVector<R>","androidx.compose.runtime.collection.MutableVector.mapIndexedNotNull"]},{"name":"inline fun <R> mapNotNull(transform: (T) -> R?): MutableVector<R>","description":"androidx.compose.runtime.collection.MutableVector.mapNotNull","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/map-not-null.html","searchKeys":["mapNotNull","inline fun <R> mapNotNull(transform: (T) -> R?): MutableVector<R>","androidx.compose.runtime.collection.MutableVector.mapNotNull"]},{"name":"inline fun <R> withMutableSnapshot(block: () -> R): R","description":"androidx.compose.runtime.snapshots.Snapshot.Companion.withMutableSnapshot","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot/-companion/with-mutable-snapshot.html","searchKeys":["withMutableSnapshot","inline fun <R> withMutableSnapshot(block: () -> R): R","androidx.compose.runtime.snapshots.Snapshot.Companion.withMutableSnapshot"]},{"name":"inline fun <T : Any, E : Applier<*>> ComposeNode(noinline factory: () -> T, update: Updater<T>.() -> Unit)","description":"androidx.compose.runtime.ComposeNode","location":"compose/runtime/runtime/androidx.compose.runtime/-compose-node.html","searchKeys":["ComposeNode","inline fun <T : Any, E : Applier<*>> ComposeNode(noinline factory: () -> T, update: Updater<T>.() -> Unit)","androidx.compose.runtime.ComposeNode"]},{"name":"inline fun <T : StateRecord, R> T.withCurrent(block: (T) -> R): R","description":"androidx.compose.runtime.snapshots.withCurrent","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/with-current.html","searchKeys":["withCurrent","inline fun <T : StateRecord, R> T.withCurrent(block: (T) -> R): R","androidx.compose.runtime.snapshots.withCurrent"]},{"name":"inline fun <T : StateRecord, R> T.writable(state: StateObject, block: T.() -> R): R","description":"androidx.compose.runtime.snapshots.writable","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/writable.html","searchKeys":["writable","inline fun <T : StateRecord, R> T.writable(state: StateObject, block: T.() -> R): R","androidx.compose.runtime.snapshots.writable"]},{"name":"inline fun <T : StateRecord, R> T.writable(state: StateObject, snapshot: Snapshot, block: T.() -> R): R","description":"androidx.compose.runtime.snapshots.writable","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/writable.html","searchKeys":["writable","inline fun <T : StateRecord, R> T.writable(state: StateObject, snapshot: Snapshot, block: T.() -> R): R","androidx.compose.runtime.snapshots.writable"]},{"name":"inline fun <T, E : Applier<*>> ComposeNode(noinline factory: () -> T, update: Updater<T>.() -> Unit, content: () -> Unit)","description":"androidx.compose.runtime.ComposeNode","location":"compose/runtime/runtime/androidx.compose.runtime/-compose-node.html","searchKeys":["ComposeNode","inline fun <T, E : Applier<*>> ComposeNode(noinline factory: () -> T, update: Updater<T>.() -> Unit, content: () -> Unit)","androidx.compose.runtime.ComposeNode"]},{"name":"inline fun <T, E : Applier<*>> ComposeNode(noinline factory: () -> T, update: Updater<T>.() -> Unit, noinline skippableUpdate: SkippableUpdater<T>.() -> Unit, content: () -> Unit)","description":"androidx.compose.runtime.ComposeNode","location":"compose/runtime/runtime/androidx.compose.runtime/-compose-node.html","searchKeys":["ComposeNode","inline fun <T, E : Applier<*>> ComposeNode(noinline factory: () -> T, update: Updater<T>.() -> Unit, noinline skippableUpdate: SkippableUpdater<T>.() -> Unit, content: () -> Unit)","androidx.compose.runtime.ComposeNode"]},{"name":"inline fun <T> Composer.cache(invalid: Boolean, block: () -> T): T","description":"androidx.compose.runtime.cache","location":"compose/runtime/runtime/androidx.compose.runtime/cache.html","searchKeys":["cache","inline fun <T> Composer.cache(invalid: Boolean, block: () -> T): T","androidx.compose.runtime.cache"]},{"name":"inline fun <T> MutableVector(capacity: Int = 16): MutableVector<T>","description":"androidx.compose.runtime.collection.MutableVector","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector.html","searchKeys":["MutableVector","inline fun <T> MutableVector(capacity: Int = 16): MutableVector<T>","androidx.compose.runtime.collection.MutableVector"]},{"name":"inline fun <T> MutableVector(size: Int, noinline init: (Int) -> T): MutableVector<T>","description":"androidx.compose.runtime.collection.MutableVector","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector.html","searchKeys":["MutableVector","inline fun <T> MutableVector(size: Int, noinline init: (Int) -> T): MutableVector<T>","androidx.compose.runtime.collection.MutableVector"]},{"name":"inline fun <T> enter(block: () -> T): T","description":"androidx.compose.runtime.snapshots.Snapshot.enter","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot/enter.html","searchKeys":["enter","inline fun <T> enter(block: () -> T): T","androidx.compose.runtime.snapshots.Snapshot.enter"]},{"name":"inline fun <T> global(block: () -> T): T","description":"androidx.compose.runtime.snapshots.Snapshot.Companion.global","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot/-companion/global.html","searchKeys":["global","inline fun <T> global(block: () -> T): T","androidx.compose.runtime.snapshots.Snapshot.Companion.global"]},{"name":"inline fun <T> key(vararg keys: Any?, block: () -> T): T","description":"androidx.compose.runtime.key","location":"compose/runtime/runtime/androidx.compose.runtime/key.html","searchKeys":["key","inline fun <T> key(vararg keys: Any?, block: () -> T): T","androidx.compose.runtime.key"]},{"name":"inline fun <T> mutableVectorOf(): MutableVector<T>","description":"androidx.compose.runtime.collection.mutableVectorOf","location":"compose/runtime/runtime/androidx.compose.runtime.collection/mutable-vector-of.html","searchKeys":["mutableVectorOf","inline fun <T> mutableVectorOf(): MutableVector<T>","androidx.compose.runtime.collection.mutableVectorOf"]},{"name":"inline fun <T> mutableVectorOf(vararg elements: T): MutableVector<T>","description":"androidx.compose.runtime.collection.mutableVectorOf","location":"compose/runtime/runtime/androidx.compose.runtime.collection/mutable-vector-of.html","searchKeys":["mutableVectorOf","inline fun <T> mutableVectorOf(vararg elements: T): MutableVector<T>","androidx.compose.runtime.collection.mutableVectorOf"]},{"name":"inline fun <T> remember(calculation: () -> T): T","description":"androidx.compose.runtime.remember","location":"compose/runtime/runtime/androidx.compose.runtime/remember.html","searchKeys":["remember","inline fun <T> remember(calculation: () -> T): T","androidx.compose.runtime.remember"]},{"name":"inline fun <T> remember(key1: Any?, calculation: () -> T): T","description":"androidx.compose.runtime.remember","location":"compose/runtime/runtime/androidx.compose.runtime/remember.html","searchKeys":["remember","inline fun <T> remember(key1: Any?, calculation: () -> T): T","androidx.compose.runtime.remember"]},{"name":"inline fun <T> remember(key1: Any?, key2: Any?, calculation: () -> T): T","description":"androidx.compose.runtime.remember","location":"compose/runtime/runtime/androidx.compose.runtime/remember.html","searchKeys":["remember","inline fun <T> remember(key1: Any?, key2: Any?, calculation: () -> T): T","androidx.compose.runtime.remember"]},{"name":"inline fun <T> remember(key1: Any?, key2: Any?, key3: Any?, calculation: () -> T): T","description":"androidx.compose.runtime.remember","location":"compose/runtime/runtime/androidx.compose.runtime/remember.html","searchKeys":["remember","inline fun <T> remember(key1: Any?, key2: Any?, key3: Any?, calculation: () -> T): T","androidx.compose.runtime.remember"]},{"name":"inline fun <T> remember(vararg keys: Any?, calculation: () -> T): T","description":"androidx.compose.runtime.remember","location":"compose/runtime/runtime/androidx.compose.runtime/remember.html","searchKeys":["remember","inline fun <T> remember(vararg keys: Any?, calculation: () -> T): T","androidx.compose.runtime.remember"]},{"name":"inline fun addAll(elements: List<T>): Boolean","description":"androidx.compose.runtime.collection.MutableVector.addAll","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/add-all.html","searchKeys":["addAll","inline fun addAll(elements: List<T>): Boolean","androidx.compose.runtime.collection.MutableVector.addAll"]},{"name":"inline fun addAll(elements: MutableVector<T>): Boolean","description":"androidx.compose.runtime.collection.MutableVector.addAll","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/add-all.html","searchKeys":["addAll","inline fun addAll(elements: MutableVector<T>): Boolean","androidx.compose.runtime.collection.MutableVector.addAll"]},{"name":"inline fun any(predicate: (T) -> Boolean): Boolean","description":"androidx.compose.runtime.collection.MutableVector.any","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/any.html","searchKeys":["any","inline fun any(predicate: (T) -> Boolean): Boolean","androidx.compose.runtime.collection.MutableVector.any"]},{"name":"inline fun first(predicate: (T) -> Boolean): T","description":"androidx.compose.runtime.collection.MutableVector.first","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/first.html","searchKeys":["first","inline fun first(predicate: (T) -> Boolean): T","androidx.compose.runtime.collection.MutableVector.first"]},{"name":"inline fun firstOrNull(): T?","description":"androidx.compose.runtime.collection.MutableVector.firstOrNull","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/first-or-null.html","searchKeys":["firstOrNull","inline fun firstOrNull(): T?","androidx.compose.runtime.collection.MutableVector.firstOrNull"]},{"name":"inline fun firstOrNull(predicate: (T) -> Boolean): T?","description":"androidx.compose.runtime.collection.MutableVector.firstOrNull","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/first-or-null.html","searchKeys":["firstOrNull","inline fun firstOrNull(predicate: (T) -> Boolean): T?","androidx.compose.runtime.collection.MutableVector.firstOrNull"]},{"name":"inline fun forEach(block: (T) -> Unit)","description":"androidx.compose.runtime.collection.MutableVector.forEach","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/for-each.html","searchKeys":["forEach","inline fun forEach(block: (T) -> Unit)","androidx.compose.runtime.collection.MutableVector.forEach"]},{"name":"inline fun forEachIndexed(block: (Int, T) -> Unit)","description":"androidx.compose.runtime.collection.MutableVector.forEachIndexed","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/for-each-indexed.html","searchKeys":["forEachIndexed","inline fun forEachIndexed(block: (Int, T) -> Unit)","androidx.compose.runtime.collection.MutableVector.forEachIndexed"]},{"name":"inline fun forEachReversed(block: (T) -> Unit)","description":"androidx.compose.runtime.collection.MutableVector.forEachReversed","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/for-each-reversed.html","searchKeys":["forEachReversed","inline fun forEachReversed(block: (T) -> Unit)","androidx.compose.runtime.collection.MutableVector.forEachReversed"]},{"name":"inline fun forEachReversedIndexed(block: (Int, T) -> Unit)","description":"androidx.compose.runtime.collection.MutableVector.forEachReversedIndexed","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/for-each-reversed-indexed.html","searchKeys":["forEachReversedIndexed","inline fun forEachReversedIndexed(block: (Int, T) -> Unit)","androidx.compose.runtime.collection.MutableVector.forEachReversedIndexed"]},{"name":"inline fun indexOfFirst(predicate: (T) -> Boolean): Int","description":"androidx.compose.runtime.collection.MutableVector.indexOfFirst","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/index-of-first.html","searchKeys":["indexOfFirst","inline fun indexOfFirst(predicate: (T) -> Boolean): Int","androidx.compose.runtime.collection.MutableVector.indexOfFirst"]},{"name":"inline fun indexOfLast(predicate: (T) -> Boolean): Int","description":"androidx.compose.runtime.collection.MutableVector.indexOfLast","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/index-of-last.html","searchKeys":["indexOfLast","inline fun indexOfLast(predicate: (T) -> Boolean): Int","androidx.compose.runtime.collection.MutableVector.indexOfLast"]},{"name":"inline fun last(predicate: (T) -> Boolean): T","description":"androidx.compose.runtime.collection.MutableVector.last","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/last.html","searchKeys":["last","inline fun last(predicate: (T) -> Boolean): T","androidx.compose.runtime.collection.MutableVector.last"]},{"name":"inline fun lastOrNull(): T?","description":"androidx.compose.runtime.collection.MutableVector.lastOrNull","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/last-or-null.html","searchKeys":["lastOrNull","inline fun lastOrNull(): T?","androidx.compose.runtime.collection.MutableVector.lastOrNull"]},{"name":"inline fun lastOrNull(predicate: (T) -> Boolean): T?","description":"androidx.compose.runtime.collection.MutableVector.lastOrNull","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/last-or-null.html","searchKeys":["lastOrNull","inline fun lastOrNull(predicate: (T) -> Boolean): T?","androidx.compose.runtime.collection.MutableVector.lastOrNull"]},{"name":"inline fun onDispose(crossinline onDisposeEffect: () -> Unit): DisposableEffectResult","description":"androidx.compose.runtime.DisposableEffectScope.onDispose","location":"compose/runtime/runtime/androidx.compose.runtime/-disposable-effect-scope/on-dispose.html","searchKeys":["onDispose","inline fun onDispose(crossinline onDisposeEffect: () -> Unit): DisposableEffectResult","androidx.compose.runtime.DisposableEffectScope.onDispose"]},{"name":"inline fun rememberCoroutineScope(getContext: () -> CoroutineContext = { EmptyCoroutineContext }): CoroutineScope","description":"androidx.compose.runtime.rememberCoroutineScope","location":"compose/runtime/runtime/androidx.compose.runtime/remember-coroutine-scope.html","searchKeys":["rememberCoroutineScope","inline fun rememberCoroutineScope(getContext: () -> CoroutineContext = { EmptyCoroutineContext }): CoroutineScope","androidx.compose.runtime.rememberCoroutineScope"]},{"name":"inline fun reversedAny(predicate: (T) -> Boolean): Boolean","description":"androidx.compose.runtime.collection.MutableVector.reversedAny","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/reversed-any.html","searchKeys":["reversedAny","inline fun reversedAny(predicate: (T) -> Boolean): Boolean","androidx.compose.runtime.collection.MutableVector.reversedAny"]},{"name":"inline fun set(value: Int, noinline block: T.(value: Int) -> Unit)","description":"androidx.compose.runtime.Updater.set","location":"compose/runtime/runtime/androidx.compose.runtime/-updater/set.html","searchKeys":["set","inline fun set(value: Int, noinline block: T.(value: Int) -> Unit)","androidx.compose.runtime.Updater.set"]},{"name":"inline fun sumBy(selector: (T) -> Int): Int","description":"androidx.compose.runtime.collection.MutableVector.sumBy","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/sum-by.html","searchKeys":["sumBy","inline fun sumBy(selector: (T) -> Int): Int","androidx.compose.runtime.collection.MutableVector.sumBy"]},{"name":"inline fun update(block: Updater<T>.() -> Unit)","description":"androidx.compose.runtime.SkippableUpdater.update","location":"compose/runtime/runtime/androidx.compose.runtime/-skippable-updater/update.html","searchKeys":["update","inline fun update(block: Updater<T>.() -> Unit)","androidx.compose.runtime.SkippableUpdater.update"]},{"name":"inline fun update(value: Int, noinline block: T.(value: Int) -> Unit)","description":"androidx.compose.runtime.Updater.update","location":"compose/runtime/runtime/androidx.compose.runtime/-updater/update.html","searchKeys":["update","inline fun update(value: Int, noinline block: T.(value: Int) -> Unit)","androidx.compose.runtime.Updater.update"]},{"name":"inline operator fun <T> MutableState<T>.setValue(thisObj: Any?, property: KProperty<*>, value: T)","description":"androidx.compose.runtime.setValue","location":"compose/runtime/runtime/androidx.compose.runtime/set-value.html","searchKeys":["setValue","inline operator fun <T> MutableState<T>.setValue(thisObj: Any?, property: KProperty<*>, value: T)","androidx.compose.runtime.setValue"]},{"name":"inline operator fun <T> State<T>.getValue(thisObj: Any?, property: KProperty<*>): T","description":"androidx.compose.runtime.getValue","location":"compose/runtime/runtime/androidx.compose.runtime/get-value.html","searchKeys":["getValue","inline operator fun <T> State<T>.getValue(thisObj: Any?, property: KProperty<*>): T","androidx.compose.runtime.getValue"]},{"name":"inline operator fun get(index: Int): T","description":"androidx.compose.runtime.collection.MutableVector.get","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/get.html","searchKeys":["get","inline operator fun get(index: Int): T","androidx.compose.runtime.collection.MutableVector.get"]},{"name":"inline operator fun minusAssign(element: T)","description":"androidx.compose.runtime.collection.MutableVector.minusAssign","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/minus-assign.html","searchKeys":["minusAssign","inline operator fun minusAssign(element: T)","androidx.compose.runtime.collection.MutableVector.minusAssign"]},{"name":"inline operator fun plusAssign(element: T)","description":"androidx.compose.runtime.collection.MutableVector.plusAssign","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/plus-assign.html","searchKeys":["plusAssign","inline operator fun plusAssign(element: T)","androidx.compose.runtime.collection.MutableVector.plusAssign"]},{"name":"inline suspend fun <R> MonotonicFrameClock.withFrameMillis(crossinline onFrame: (frameTimeMillis: Long) -> R): R","description":"androidx.compose.runtime.withFrameMillis","location":"compose/runtime/runtime/androidx.compose.runtime/with-frame-millis.html","searchKeys":["withFrameMillis","inline suspend fun <R> MonotonicFrameClock.withFrameMillis(crossinline onFrame: (frameTimeMillis: Long) -> R): R","androidx.compose.runtime.withFrameMillis"]},{"name":"interface Applier<N>","description":"androidx.compose.runtime.Applier","location":"compose/runtime/runtime/androidx.compose.runtime/-applier/index.html","searchKeys":["Applier","interface Applier<N>","androidx.compose.runtime.Applier"]},{"name":"interface ComposableLambda","description":"androidx.compose.runtime.internal.ComposableLambda","location":"compose/runtime/runtime/androidx.compose.runtime.internal/-composable-lambda/index.html","searchKeys":["ComposableLambda","interface ComposableLambda","androidx.compose.runtime.internal.ComposableLambda"]},{"name":"interface ComposableLambdaN : FunctionN<Any?> ","description":"androidx.compose.runtime.internal.ComposableLambdaN","location":"compose/runtime/runtime/androidx.compose.runtime.internal/[android]-composable-lambda-n/index.html","searchKeys":["ComposableLambdaN","interface ComposableLambdaN : FunctionN<Any?> ","androidx.compose.runtime.internal.ComposableLambdaN"]},{"name":"interface ComposableLambdaN : FunctionN<Any?> ","description":"androidx.compose.runtime.internal.ComposableLambdaN","location":"compose/runtime/runtime/androidx.compose.runtime.internal/[jvm]-composable-lambda-n/index.html","searchKeys":["ComposableLambdaN","interface ComposableLambdaN : FunctionN<Any?> ","androidx.compose.runtime.internal.ComposableLambdaN"]},{"name":"interface Composer","description":"androidx.compose.runtime.Composer","location":"compose/runtime/runtime/androidx.compose.runtime/-composer/index.html","searchKeys":["Composer","interface Composer","androidx.compose.runtime.Composer"]},{"name":"interface Composition","description":"androidx.compose.runtime.Composition","location":"compose/runtime/runtime/androidx.compose.runtime/-composition/index.html","searchKeys":["Composition","interface Composition","androidx.compose.runtime.Composition"]},{"name":"interface CompositionData","description":"androidx.compose.runtime.tooling.CompositionData","location":"compose/runtime/runtime/androidx.compose.runtime.tooling/-composition-data/index.html","searchKeys":["CompositionData","interface CompositionData","androidx.compose.runtime.tooling.CompositionData"]},{"name":"interface CompositionGroup : CompositionData","description":"androidx.compose.runtime.tooling.CompositionGroup","location":"compose/runtime/runtime/androidx.compose.runtime.tooling/-composition-group/index.html","searchKeys":["CompositionGroup","interface CompositionGroup : CompositionData","androidx.compose.runtime.tooling.CompositionGroup"]},{"name":"interface ControlledComposition : Composition","description":"androidx.compose.runtime.ControlledComposition","location":"compose/runtime/runtime/androidx.compose.runtime/-controlled-composition/index.html","searchKeys":["ControlledComposition","interface ControlledComposition : Composition","androidx.compose.runtime.ControlledComposition"]},{"name":"interface DisposableEffectResult","description":"androidx.compose.runtime.DisposableEffectResult","location":"compose/runtime/runtime/androidx.compose.runtime/-disposable-effect-result/index.html","searchKeys":["DisposableEffectResult","interface DisposableEffectResult","androidx.compose.runtime.DisposableEffectResult"]},{"name":"interface MonotonicFrameClock : CoroutineContext.Element","description":"androidx.compose.runtime.MonotonicFrameClock","location":"compose/runtime/runtime/androidx.compose.runtime/-monotonic-frame-clock/index.html","searchKeys":["MonotonicFrameClock","interface MonotonicFrameClock : CoroutineContext.Element","androidx.compose.runtime.MonotonicFrameClock"]},{"name":"interface MutableState<T> : State<T> ","description":"androidx.compose.runtime.MutableState","location":"compose/runtime/runtime/androidx.compose.runtime/-mutable-state/index.html","searchKeys":["MutableState","interface MutableState<T> : State<T> ","androidx.compose.runtime.MutableState"]},{"name":"interface ProduceStateScope<T> : MutableState<T> , CoroutineScope","description":"androidx.compose.runtime.ProduceStateScope","location":"compose/runtime/runtime/androidx.compose.runtime/-produce-state-scope/index.html","searchKeys":["ProduceStateScope","interface ProduceStateScope<T> : MutableState<T> , CoroutineScope","androidx.compose.runtime.ProduceStateScope"]},{"name":"interface RecomposeScope","description":"androidx.compose.runtime.RecomposeScope","location":"compose/runtime/runtime/androidx.compose.runtime/-recompose-scope/index.html","searchKeys":["RecomposeScope","interface RecomposeScope","androidx.compose.runtime.RecomposeScope"]},{"name":"interface RecomposerInfo","description":"androidx.compose.runtime.RecomposerInfo","location":"compose/runtime/runtime/androidx.compose.runtime/-recomposer-info/index.html","searchKeys":["RecomposerInfo","interface RecomposerInfo","androidx.compose.runtime.RecomposerInfo"]},{"name":"interface RememberObserver","description":"androidx.compose.runtime.RememberObserver","location":"compose/runtime/runtime/androidx.compose.runtime/-remember-observer/index.html","searchKeys":["RememberObserver","interface RememberObserver","androidx.compose.runtime.RememberObserver"]},{"name":"interface ScopeUpdateScope","description":"androidx.compose.runtime.ScopeUpdateScope","location":"compose/runtime/runtime/androidx.compose.runtime/-scope-update-scope/index.html","searchKeys":["ScopeUpdateScope","interface ScopeUpdateScope","androidx.compose.runtime.ScopeUpdateScope"]},{"name":"interface SnapshotMutableState<T> : MutableState<T> ","description":"androidx.compose.runtime.snapshots.SnapshotMutableState","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-mutable-state/index.html","searchKeys":["SnapshotMutableState","interface SnapshotMutableState<T> : MutableState<T> ","androidx.compose.runtime.snapshots.SnapshotMutableState"]},{"name":"interface SnapshotMutationPolicy<T>","description":"androidx.compose.runtime.SnapshotMutationPolicy","location":"compose/runtime/runtime/androidx.compose.runtime/-snapshot-mutation-policy/index.html","searchKeys":["SnapshotMutationPolicy","interface SnapshotMutationPolicy<T>","androidx.compose.runtime.SnapshotMutationPolicy"]},{"name":"interface State<T>","description":"androidx.compose.runtime.State","location":"compose/runtime/runtime/androidx.compose.runtime/-state/index.html","searchKeys":["State","interface State<T>","androidx.compose.runtime.State"]},{"name":"interface StateObject","description":"androidx.compose.runtime.snapshots.StateObject","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-state-object/index.html","searchKeys":["StateObject","interface StateObject","androidx.compose.runtime.snapshots.StateObject"]},{"name":"internal open override var modified: MutableSet<StateObject>? = null","description":"androidx.compose.runtime.snapshots.MutableSnapshot.modified","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-mutable-snapshot/modified.html","searchKeys":["modified","internal open override var modified: MutableSet<StateObject>? = null","androidx.compose.runtime.snapshots.MutableSnapshot.modified"]},{"name":"object Companion","description":"androidx.compose.runtime.Composer.Companion","location":"compose/runtime/runtime/androidx.compose.runtime/-composer/-companion/index.html","searchKeys":["Companion","object Companion","androidx.compose.runtime.Composer.Companion"]},{"name":"object Companion","description":"androidx.compose.runtime.Recomposer.Companion","location":"compose/runtime/runtime/androidx.compose.runtime/-recomposer/-companion/index.html","searchKeys":["Companion","object Companion","androidx.compose.runtime.Recomposer.Companion"]},{"name":"object Companion","description":"androidx.compose.runtime.snapshots.Snapshot.Companion","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot/-companion/index.html","searchKeys":["Companion","object Companion","androidx.compose.runtime.snapshots.Snapshot.Companion"]},{"name":"object Key : CoroutineContext.Key<MonotonicFrameClock> ","description":"androidx.compose.runtime.MonotonicFrameClock.Key","location":"compose/runtime/runtime/androidx.compose.runtime/-monotonic-frame-clock/-key/index.html","searchKeys":["Key","object Key : CoroutineContext.Key<MonotonicFrameClock> ","androidx.compose.runtime.MonotonicFrameClock.Key"]},{"name":"object Success : SnapshotApplyResult","description":"androidx.compose.runtime.snapshots.SnapshotApplyResult.Success","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-apply-result/-success/index.html","searchKeys":["Success","object Success : SnapshotApplyResult","androidx.compose.runtime.snapshots.SnapshotApplyResult.Success"]},{"name":"open class MutableSnapshot : Snapshot","description":"androidx.compose.runtime.snapshots.MutableSnapshot","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-mutable-snapshot/index.html","searchKeys":["MutableSnapshot","open class MutableSnapshot : Snapshot","androidx.compose.runtime.snapshots.MutableSnapshot"]},{"name":"open fun apply(): SnapshotApplyResult","description":"androidx.compose.runtime.snapshots.MutableSnapshot.apply","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-mutable-snapshot/apply.html","searchKeys":["apply","open fun apply(): SnapshotApplyResult","androidx.compose.runtime.snapshots.MutableSnapshot.apply"]},{"name":"open fun changed(value: Boolean): Boolean","description":"androidx.compose.runtime.Composer.changed","location":"compose/runtime/runtime/androidx.compose.runtime/-composer/changed.html","searchKeys":["changed","open fun changed(value: Boolean): Boolean","androidx.compose.runtime.Composer.changed"]},{"name":"open fun changed(value: Byte): Boolean","description":"androidx.compose.runtime.Composer.changed","location":"compose/runtime/runtime/androidx.compose.runtime/-composer/changed.html","searchKeys":["changed","open fun changed(value: Byte): Boolean","androidx.compose.runtime.Composer.changed"]},{"name":"open fun changed(value: Char): Boolean","description":"androidx.compose.runtime.Composer.changed","location":"compose/runtime/runtime/androidx.compose.runtime/-composer/changed.html","searchKeys":["changed","open fun changed(value: Char): Boolean","androidx.compose.runtime.Composer.changed"]},{"name":"open fun changed(value: Double): Boolean","description":"androidx.compose.runtime.Composer.changed","location":"compose/runtime/runtime/androidx.compose.runtime/-composer/changed.html","searchKeys":["changed","open fun changed(value: Double): Boolean","androidx.compose.runtime.Composer.changed"]},{"name":"open fun changed(value: Float): Boolean","description":"androidx.compose.runtime.Composer.changed","location":"compose/runtime/runtime/androidx.compose.runtime/-composer/changed.html","searchKeys":["changed","open fun changed(value: Float): Boolean","androidx.compose.runtime.Composer.changed"]},{"name":"open fun changed(value: Int): Boolean","description":"androidx.compose.runtime.Composer.changed","location":"compose/runtime/runtime/androidx.compose.runtime/-composer/changed.html","searchKeys":["changed","open fun changed(value: Int): Boolean","androidx.compose.runtime.Composer.changed"]},{"name":"open fun changed(value: Long): Boolean","description":"androidx.compose.runtime.Composer.changed","location":"compose/runtime/runtime/androidx.compose.runtime/-composer/changed.html","searchKeys":["changed","open fun changed(value: Long): Boolean","androidx.compose.runtime.Composer.changed"]},{"name":"open fun changed(value: Short): Boolean","description":"androidx.compose.runtime.Composer.changed","location":"compose/runtime/runtime/androidx.compose.runtime/-composer/changed.html","searchKeys":["changed","open fun changed(value: Short): Boolean","androidx.compose.runtime.Composer.changed"]},{"name":"open fun dispose()","description":"androidx.compose.runtime.snapshots.Snapshot.dispose","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot/dispose.html","searchKeys":["dispose","open fun dispose()","androidx.compose.runtime.snapshots.Snapshot.dispose"]},{"name":"open fun merge(previous: T, current: T, applied: T): T?","description":"androidx.compose.runtime.SnapshotMutationPolicy.merge","location":"compose/runtime/runtime/androidx.compose.runtime/-snapshot-mutation-policy/merge.html","searchKeys":["merge","open fun merge(previous: T, current: T, applied: T): T?","androidx.compose.runtime.SnapshotMutationPolicy.merge"]},{"name":"open fun mergeRecords(previous: StateRecord, current: StateRecord, applied: StateRecord): StateRecord?","description":"androidx.compose.runtime.snapshots.StateObject.mergeRecords","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-state-object/merge-records.html","searchKeys":["mergeRecords","open fun mergeRecords(previous: StateRecord, current: StateRecord, applied: StateRecord): StateRecord?","androidx.compose.runtime.snapshots.StateObject.mergeRecords"]},{"name":"open fun onBeginChanges()","description":"androidx.compose.runtime.Applier.onBeginChanges","location":"compose/runtime/runtime/androidx.compose.runtime/-applier/on-begin-changes.html","searchKeys":["onBeginChanges","open fun onBeginChanges()","androidx.compose.runtime.Applier.onBeginChanges"]},{"name":"open fun onEndChanges()","description":"androidx.compose.runtime.Applier.onEndChanges","location":"compose/runtime/runtime/androidx.compose.runtime/-applier/on-end-changes.html","searchKeys":["onEndChanges","open fun onEndChanges()","androidx.compose.runtime.Applier.onEndChanges"]},{"name":"open fun takeNestedMutableSnapshot(readObserver: (Any) -> Unit? = null, writeObserver: (Any) -> Unit? = null): MutableSnapshot","description":"androidx.compose.runtime.snapshots.MutableSnapshot.takeNestedMutableSnapshot","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-mutable-snapshot/take-nested-mutable-snapshot.html","searchKeys":["takeNestedMutableSnapshot","open fun takeNestedMutableSnapshot(readObserver: (Any) -> Unit? = null, writeObserver: (Any) -> Unit? = null): MutableSnapshot","androidx.compose.runtime.snapshots.MutableSnapshot.takeNestedMutableSnapshot"]},{"name":"open operator override fun contains(element: T): Boolean","description":"androidx.compose.runtime.snapshots.SnapshotStateList.contains","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-state-list/contains.html","searchKeys":["contains","open operator override fun contains(element: T): Boolean","androidx.compose.runtime.snapshots.SnapshotStateList.contains"]},{"name":"open operator override fun get(index: Int): T","description":"androidx.compose.runtime.snapshots.SnapshotStateList.get","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-state-list/get.html","searchKeys":["get","open operator override fun get(index: Int): T","androidx.compose.runtime.snapshots.SnapshotStateList.get"]},{"name":"open operator override fun get(key: K): V?","description":"androidx.compose.runtime.snapshots.SnapshotStateMap.get","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-state-map/get.html","searchKeys":["get","open operator override fun get(key: K): V?","androidx.compose.runtime.snapshots.SnapshotStateMap.get"]},{"name":"open operator override fun iterator(): MutableIterator<T>","description":"androidx.compose.runtime.snapshots.SnapshotStateList.iterator","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-state-list/iterator.html","searchKeys":["iterator","open operator override fun iterator(): MutableIterator<T>","androidx.compose.runtime.snapshots.SnapshotStateList.iterator"]},{"name":"open operator override fun set(index: Int, element: T): T","description":"androidx.compose.runtime.snapshots.SnapshotStateList.set","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-state-list/set.html","searchKeys":["set","open operator override fun set(index: Int, element: T): T","androidx.compose.runtime.snapshots.SnapshotStateList.set"]},{"name":"open override fun add(element: T): Boolean","description":"androidx.compose.runtime.snapshots.SnapshotStateList.add","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-state-list/add.html","searchKeys":["add","open override fun add(element: T): Boolean","androidx.compose.runtime.snapshots.SnapshotStateList.add"]},{"name":"open override fun add(index: Int, element: T)","description":"androidx.compose.runtime.snapshots.SnapshotStateList.add","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-state-list/add.html","searchKeys":["add","open override fun add(index: Int, element: T)","androidx.compose.runtime.snapshots.SnapshotStateList.add"]},{"name":"open override fun addAll(elements: Collection<T>): Boolean","description":"androidx.compose.runtime.snapshots.SnapshotStateList.addAll","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-state-list/add-all.html","searchKeys":["addAll","open override fun addAll(elements: Collection<T>): Boolean","androidx.compose.runtime.snapshots.SnapshotStateList.addAll"]},{"name":"open override fun addAll(index: Int, elements: Collection<T>): Boolean","description":"androidx.compose.runtime.snapshots.SnapshotStateList.addAll","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-state-list/add-all.html","searchKeys":["addAll","open override fun addAll(index: Int, elements: Collection<T>): Boolean","androidx.compose.runtime.snapshots.SnapshotStateList.addAll"]},{"name":"open override fun check()","description":"androidx.compose.runtime.snapshots.SnapshotApplyResult.Failure.check","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-apply-result/-failure/check.html","searchKeys":["check","open override fun check()","androidx.compose.runtime.snapshots.SnapshotApplyResult.Failure.check"]},{"name":"open override fun check()","description":"androidx.compose.runtime.snapshots.SnapshotApplyResult.Success.check","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-apply-result/-success/check.html","searchKeys":["check","open override fun check()","androidx.compose.runtime.snapshots.SnapshotApplyResult.Success.check"]},{"name":"open override fun clear()","description":"androidx.compose.runtime.snapshots.SnapshotStateList.clear","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-state-list/clear.html","searchKeys":["clear","open override fun clear()","androidx.compose.runtime.snapshots.SnapshotStateList.clear"]},{"name":"open override fun clear()","description":"androidx.compose.runtime.snapshots.SnapshotStateMap.clear","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-state-map/clear.html","searchKeys":["clear","open override fun clear()","androidx.compose.runtime.snapshots.SnapshotStateMap.clear"]},{"name":"open override fun containsAll(elements: Collection<T>): Boolean","description":"androidx.compose.runtime.snapshots.SnapshotStateList.containsAll","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-state-list/contains-all.html","searchKeys":["containsAll","open override fun containsAll(elements: Collection<T>): Boolean","androidx.compose.runtime.snapshots.SnapshotStateList.containsAll"]},{"name":"open override fun containsKey(key: K): Boolean","description":"androidx.compose.runtime.snapshots.SnapshotStateMap.containsKey","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-state-map/contains-key.html","searchKeys":["containsKey","open override fun containsKey(key: K): Boolean","androidx.compose.runtime.snapshots.SnapshotStateMap.containsKey"]},{"name":"open override fun containsValue(value: V): Boolean","description":"androidx.compose.runtime.snapshots.SnapshotStateMap.containsValue","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-state-map/contains-value.html","searchKeys":["containsValue","open override fun containsValue(value: V): Boolean","androidx.compose.runtime.snapshots.SnapshotStateMap.containsValue"]},{"name":"open override fun dispose()","description":"androidx.compose.runtime.snapshots.MutableSnapshot.dispose","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-mutable-snapshot/dispose.html","searchKeys":["dispose","open override fun dispose()","androidx.compose.runtime.snapshots.MutableSnapshot.dispose"]},{"name":"open override fun down(node: T)","description":"androidx.compose.runtime.AbstractApplier.down","location":"compose/runtime/runtime/androidx.compose.runtime/-abstract-applier/down.html","searchKeys":["down","open override fun down(node: T)","androidx.compose.runtime.AbstractApplier.down"]},{"name":"open override fun hasPendingChanges(): Boolean","description":"androidx.compose.runtime.snapshots.MutableSnapshot.hasPendingChanges","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-mutable-snapshot/has-pending-changes.html","searchKeys":["hasPendingChanges","open override fun hasPendingChanges(): Boolean","androidx.compose.runtime.snapshots.MutableSnapshot.hasPendingChanges"]},{"name":"open override fun indexOf(element: T): Int","description":"androidx.compose.runtime.snapshots.SnapshotStateList.indexOf","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-state-list/index-of.html","searchKeys":["indexOf","open override fun indexOf(element: T): Int","androidx.compose.runtime.snapshots.SnapshotStateList.indexOf"]},{"name":"open override fun isEmpty(): Boolean","description":"androidx.compose.runtime.snapshots.SnapshotStateList.isEmpty","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-state-list/is-empty.html","searchKeys":["isEmpty","open override fun isEmpty(): Boolean","androidx.compose.runtime.snapshots.SnapshotStateList.isEmpty"]},{"name":"open override fun isEmpty(): Boolean","description":"androidx.compose.runtime.snapshots.SnapshotStateMap.isEmpty","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-state-map/is-empty.html","searchKeys":["isEmpty","open override fun isEmpty(): Boolean","androidx.compose.runtime.snapshots.SnapshotStateMap.isEmpty"]},{"name":"open override fun lastIndexOf(element: T): Int","description":"androidx.compose.runtime.snapshots.SnapshotStateList.lastIndexOf","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-state-list/last-index-of.html","searchKeys":["lastIndexOf","open override fun lastIndexOf(element: T): Int","androidx.compose.runtime.snapshots.SnapshotStateList.lastIndexOf"]},{"name":"open override fun listIterator(): MutableListIterator<T>","description":"androidx.compose.runtime.snapshots.SnapshotStateList.listIterator","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-state-list/list-iterator.html","searchKeys":["listIterator","open override fun listIterator(): MutableListIterator<T>","androidx.compose.runtime.snapshots.SnapshotStateList.listIterator"]},{"name":"open override fun listIterator(index: Int): MutableListIterator<T>","description":"androidx.compose.runtime.snapshots.SnapshotStateList.listIterator","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-state-list/list-iterator.html","searchKeys":["listIterator","open override fun listIterator(index: Int): MutableListIterator<T>","androidx.compose.runtime.snapshots.SnapshotStateList.listIterator"]},{"name":"open override fun prependStateRecord(value: StateRecord)","description":"androidx.compose.runtime.snapshots.SnapshotStateList.prependStateRecord","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-state-list/prepend-state-record.html","searchKeys":["prependStateRecord","open override fun prependStateRecord(value: StateRecord)","androidx.compose.runtime.snapshots.SnapshotStateList.prependStateRecord"]},{"name":"open override fun prependStateRecord(value: StateRecord)","description":"androidx.compose.runtime.snapshots.SnapshotStateMap.prependStateRecord","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-state-map/prepend-state-record.html","searchKeys":["prependStateRecord","open override fun prependStateRecord(value: StateRecord)","androidx.compose.runtime.snapshots.SnapshotStateMap.prependStateRecord"]},{"name":"open override fun put(key: K, value: V): V?","description":"androidx.compose.runtime.snapshots.SnapshotStateMap.put","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-state-map/put.html","searchKeys":["put","open override fun put(key: K, value: V): V?","androidx.compose.runtime.snapshots.SnapshotStateMap.put"]},{"name":"open override fun putAll(from: Map<out K, V>)","description":"androidx.compose.runtime.snapshots.SnapshotStateMap.putAll","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-state-map/put-all.html","searchKeys":["putAll","open override fun putAll(from: Map<out K, V>)","androidx.compose.runtime.snapshots.SnapshotStateMap.putAll"]},{"name":"open override fun remove(element: T): Boolean","description":"androidx.compose.runtime.snapshots.SnapshotStateList.remove","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-state-list/remove.html","searchKeys":["remove","open override fun remove(element: T): Boolean","androidx.compose.runtime.snapshots.SnapshotStateList.remove"]},{"name":"open override fun remove(key: K): V?","description":"androidx.compose.runtime.snapshots.SnapshotStateMap.remove","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-state-map/remove.html","searchKeys":["remove","open override fun remove(key: K): V?","androidx.compose.runtime.snapshots.SnapshotStateMap.remove"]},{"name":"open override fun removeAll(elements: Collection<T>): Boolean","description":"androidx.compose.runtime.snapshots.SnapshotStateList.removeAll","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-state-list/remove-all.html","searchKeys":["removeAll","open override fun removeAll(elements: Collection<T>): Boolean","androidx.compose.runtime.snapshots.SnapshotStateList.removeAll"]},{"name":"open override fun removeAt(index: Int): T","description":"androidx.compose.runtime.snapshots.SnapshotStateList.removeAt","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-state-list/remove-at.html","searchKeys":["removeAt","open override fun removeAt(index: Int): T","androidx.compose.runtime.snapshots.SnapshotStateList.removeAt"]},{"name":"open override fun retainAll(elements: Collection<T>): Boolean","description":"androidx.compose.runtime.snapshots.SnapshotStateList.retainAll","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-state-list/retain-all.html","searchKeys":["retainAll","open override fun retainAll(elements: Collection<T>): Boolean","androidx.compose.runtime.snapshots.SnapshotStateList.retainAll"]},{"name":"open override fun subList(fromIndex: Int, toIndex: Int): MutableList<T>","description":"androidx.compose.runtime.snapshots.SnapshotStateList.subList","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-state-list/sub-list.html","searchKeys":["subList","open override fun subList(fromIndex: Int, toIndex: Int): MutableList<T>","androidx.compose.runtime.snapshots.SnapshotStateList.subList"]},{"name":"open override fun takeNestedSnapshot(readObserver: (Any) -> Unit?): Snapshot","description":"androidx.compose.runtime.snapshots.MutableSnapshot.takeNestedSnapshot","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-mutable-snapshot/take-nested-snapshot.html","searchKeys":["takeNestedSnapshot","open override fun takeNestedSnapshot(readObserver: (Any) -> Unit?): Snapshot","androidx.compose.runtime.snapshots.MutableSnapshot.takeNestedSnapshot"]},{"name":"open override fun up()","description":"androidx.compose.runtime.AbstractApplier.up","location":"compose/runtime/runtime/androidx.compose.runtime/-abstract-applier/up.html","searchKeys":["up","open override fun up()","androidx.compose.runtime.AbstractApplier.up"]},{"name":"open override val entries: MutableSet<MutableMap.MutableEntry<K, V>>","description":"androidx.compose.runtime.snapshots.SnapshotStateMap.entries","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-state-map/entries.html","searchKeys":["entries","open override val entries: MutableSet<MutableMap.MutableEntry<K, V>>","androidx.compose.runtime.snapshots.SnapshotStateMap.entries"]},{"name":"open override val key: CoroutineContext.Key<*>","description":"androidx.compose.runtime.MonotonicFrameClock.key","location":"compose/runtime/runtime/androidx.compose.runtime/-monotonic-frame-clock/key.html","searchKeys":["key","open override val key: CoroutineContext.Key<*>","androidx.compose.runtime.MonotonicFrameClock.key"]},{"name":"open override val keys: MutableSet<K>","description":"androidx.compose.runtime.snapshots.SnapshotStateMap.keys","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-state-map/keys.html","searchKeys":["keys","open override val keys: MutableSet<K>","androidx.compose.runtime.snapshots.SnapshotStateMap.keys"]},{"name":"open override val readOnly: Boolean","description":"androidx.compose.runtime.snapshots.MutableSnapshot.readOnly","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-mutable-snapshot/read-only.html","searchKeys":["readOnly","open override val readOnly: Boolean","androidx.compose.runtime.snapshots.MutableSnapshot.readOnly"]},{"name":"open override val root: Snapshot","description":"androidx.compose.runtime.snapshots.MutableSnapshot.root","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-mutable-snapshot/root.html","searchKeys":["root","open override val root: Snapshot","androidx.compose.runtime.snapshots.MutableSnapshot.root"]},{"name":"open override val size: Int","description":"androidx.compose.runtime.snapshots.SnapshotStateList.size","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-state-list/size.html","searchKeys":["size","open override val size: Int","androidx.compose.runtime.snapshots.SnapshotStateList.size"]},{"name":"open override val size: Int","description":"androidx.compose.runtime.snapshots.SnapshotStateMap.size","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-state-map/size.html","searchKeys":["size","open override val size: Int","androidx.compose.runtime.snapshots.SnapshotStateMap.size"]},{"name":"open override val succeeded: Boolean","description":"androidx.compose.runtime.snapshots.SnapshotApplyResult.Failure.succeeded","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-apply-result/-failure/succeeded.html","searchKeys":["succeeded","open override val succeeded: Boolean","androidx.compose.runtime.snapshots.SnapshotApplyResult.Failure.succeeded"]},{"name":"open override val succeeded: Boolean","description":"androidx.compose.runtime.snapshots.SnapshotApplyResult.Success.succeeded","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-apply-result/-success/succeeded.html","searchKeys":["succeeded","open override val succeeded: Boolean","androidx.compose.runtime.snapshots.SnapshotApplyResult.Success.succeeded"]},{"name":"open override val values: MutableCollection<V>","description":"androidx.compose.runtime.snapshots.SnapshotStateMap.values","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-state-map/values.html","searchKeys":["values","open override val values: MutableCollection<V>","androidx.compose.runtime.snapshots.SnapshotStateMap.values"]},{"name":"open override var current: T","description":"androidx.compose.runtime.AbstractApplier.current","location":"compose/runtime/runtime/androidx.compose.runtime/-abstract-applier/current.html","searchKeys":["current","open override var current: T","androidx.compose.runtime.AbstractApplier.current"]},{"name":"open override var firstStateRecord: StateRecord","description":"androidx.compose.runtime.snapshots.SnapshotStateList.firstStateRecord","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-state-list/first-state-record.html","searchKeys":["firstStateRecord","open override var firstStateRecord: StateRecord","androidx.compose.runtime.snapshots.SnapshotStateList.firstStateRecord"]},{"name":"open override var firstStateRecord: StateRecord","description":"androidx.compose.runtime.snapshots.SnapshotStateMap.firstStateRecord","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-state-map/first-state-record.html","searchKeys":["firstStateRecord","open override var firstStateRecord: StateRecord","androidx.compose.runtime.snapshots.SnapshotStateMap.firstStateRecord"]},{"name":"open suspend override fun <R> withFrameNanos(onFrame: (Long) -> R): R","description":"androidx.compose.runtime.BroadcastFrameClock.withFrameNanos","location":"compose/runtime/runtime/androidx.compose.runtime/-broadcast-frame-clock/with-frame-nanos.html","searchKeys":["withFrameNanos","open suspend override fun <R> withFrameNanos(onFrame: (Long) -> R): R","androidx.compose.runtime.BroadcastFrameClock.withFrameNanos"]},{"name":"open suspend override fun <R> withFrameNanos(onFrame: (frameTimeNanos: Long) -> R): R","description":"androidx.compose.runtime.PausableMonotonicFrameClock.withFrameNanos","location":"compose/runtime/runtime/androidx.compose.runtime/-pausable-monotonic-frame-clock/with-frame-nanos.html","searchKeys":["withFrameNanos","open suspend override fun <R> withFrameNanos(onFrame: (frameTimeNanos: Long) -> R): R","androidx.compose.runtime.PausableMonotonicFrameClock.withFrameNanos"]},{"name":"open var id: Int","description":"androidx.compose.runtime.snapshots.Snapshot.id","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot/id.html","searchKeys":["id","open var id: Int","androidx.compose.runtime.snapshots.Snapshot.id"]},{"name":"operator fun contains(element: T): Boolean","description":"androidx.compose.runtime.collection.MutableVector.contains","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/contains.html","searchKeys":["contains","operator fun contains(element: T): Boolean","androidx.compose.runtime.collection.MutableVector.contains"]},{"name":"operator fun set(index: Int, element: T): T","description":"androidx.compose.runtime.collection.MutableVector.set","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/set.html","searchKeys":["set","operator fun set(index: Int, element: T): T","androidx.compose.runtime.collection.MutableVector.set"]},{"name":"override fun clear()","description":"androidx.compose.runtime.AbstractApplier.clear","location":"compose/runtime/runtime/androidx.compose.runtime/-abstract-applier/clear.html","searchKeys":["clear","override fun clear()","androidx.compose.runtime.AbstractApplier.clear"]},{"name":"sealed class CompositionLocal<T>","description":"androidx.compose.runtime.CompositionLocal","location":"compose/runtime/runtime/androidx.compose.runtime/-composition-local/index.html","searchKeys":["CompositionLocal","sealed class CompositionLocal<T>","androidx.compose.runtime.CompositionLocal"]},{"name":"sealed class Snapshot","description":"androidx.compose.runtime.snapshots.Snapshot","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot/index.html","searchKeys":["Snapshot","sealed class Snapshot","androidx.compose.runtime.snapshots.Snapshot"]},{"name":"sealed class SnapshotApplyResult","description":"androidx.compose.runtime.snapshots.SnapshotApplyResult","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-apply-result/index.html","searchKeys":["SnapshotApplyResult","sealed class SnapshotApplyResult","androidx.compose.runtime.snapshots.SnapshotApplyResult"]},{"name":"suspend fun <R> withFrameMillis(onFrame: (frameTimeMillis: Long) -> R): R","description":"androidx.compose.runtime.withFrameMillis","location":"compose/runtime/runtime/androidx.compose.runtime/with-frame-millis.html","searchKeys":["withFrameMillis","suspend fun <R> withFrameMillis(onFrame: (frameTimeMillis: Long) -> R): R","androidx.compose.runtime.withFrameMillis"]},{"name":"suspend fun <R> withFrameNanos(onFrame: (frameTimeMillis: Long) -> R): R","description":"androidx.compose.runtime.withFrameNanos","location":"compose/runtime/runtime/androidx.compose.runtime/with-frame-nanos.html","searchKeys":["withFrameNanos","suspend fun <R> withFrameNanos(onFrame: (frameTimeMillis: Long) -> R): R","androidx.compose.runtime.withFrameNanos"]},{"name":"suspend fun <R> withRunningRecomposer(block: suspend CoroutineScope.(recomposer: Recomposer) -> R): R","description":"androidx.compose.runtime.withRunningRecomposer","location":"compose/runtime/runtime/androidx.compose.runtime/with-running-recomposer.html","searchKeys":["withRunningRecomposer","suspend fun <R> withRunningRecomposer(block: suspend CoroutineScope.(recomposer: Recomposer) -> R): R","androidx.compose.runtime.withRunningRecomposer"]},{"name":"suspend fun awaitIdle()","description":"androidx.compose.runtime.Recomposer.awaitIdle","location":"compose/runtime/runtime/androidx.compose.runtime/-recomposer/await-idle.html","searchKeys":["awaitIdle","suspend fun awaitIdle()","androidx.compose.runtime.Recomposer.awaitIdle"]},{"name":"suspend fun join()","description":"androidx.compose.runtime.Recomposer.join","location":"compose/runtime/runtime/androidx.compose.runtime/-recomposer/join.html","searchKeys":["join","suspend fun join()","androidx.compose.runtime.Recomposer.join"]},{"name":"suspend fun runRecomposeAndApplyChanges()","description":"androidx.compose.runtime.Recomposer.runRecomposeAndApplyChanges","location":"compose/runtime/runtime/androidx.compose.runtime/-recomposer/run-recompose-and-apply-changes.html","searchKeys":["runRecomposeAndApplyChanges","suspend fun runRecomposeAndApplyChanges()","androidx.compose.runtime.Recomposer.runRecomposeAndApplyChanges"]},{"name":"suspend fun runRecomposeConcurrentlyAndApplyChanges(recomposeCoroutineContext: CoroutineContext)","description":"androidx.compose.runtime.Recomposer.runRecomposeConcurrentlyAndApplyChanges","location":"compose/runtime/runtime/androidx.compose.runtime/-recomposer/run-recompose-concurrently-and-apply-changes.html","searchKeys":["runRecomposeConcurrentlyAndApplyChanges","suspend fun runRecomposeConcurrentlyAndApplyChanges(recomposeCoroutineContext: CoroutineContext)","androidx.compose.runtime.Recomposer.runRecomposeConcurrentlyAndApplyChanges"]},{"name":"val ControlledComposition.recomposeCoroutineContext: CoroutineContext","description":"androidx.compose.runtime.recomposeCoroutineContext","location":"compose/runtime/runtime/androidx.compose.runtime/recompose-coroutine-context.html","searchKeys":["recomposeCoroutineContext","val ControlledComposition.recomposeCoroutineContext: CoroutineContext","androidx.compose.runtime.recomposeCoroutineContext"]},{"name":"val CoroutineContext.monotonicFrameClock: MonotonicFrameClock","description":"androidx.compose.runtime.monotonicFrameClock","location":"compose/runtime/runtime/androidx.compose.runtime/monotonic-frame-clock.html","searchKeys":["monotonicFrameClock","val CoroutineContext.monotonicFrameClock: MonotonicFrameClock","androidx.compose.runtime.monotonicFrameClock"]},{"name":"val DefaultMonotonicFrameClock: MonotonicFrameClock","description":"androidx.compose.runtime.DefaultMonotonicFrameClock","location":"compose/runtime/runtime/androidx.compose.runtime/-default-monotonic-frame-clock.html","searchKeys":["DefaultMonotonicFrameClock","val DefaultMonotonicFrameClock: MonotonicFrameClock","androidx.compose.runtime.DefaultMonotonicFrameClock"]},{"name":"val Empty: Any","description":"androidx.compose.runtime.Composer.Companion.Empty","location":"compose/runtime/runtime/androidx.compose.runtime/-composer/-companion/-empty.html","searchKeys":["Empty","val Empty: Any","androidx.compose.runtime.Composer.Companion.Empty"]},{"name":"val LocalInspectionTables: ProvidableCompositionLocal<MutableSet<CompositionData>?>","description":"androidx.compose.runtime.tooling.LocalInspectionTables","location":"compose/runtime/runtime/androidx.compose.runtime.tooling/-local-inspection-tables.html","searchKeys":["LocalInspectionTables","val LocalInspectionTables: ProvidableCompositionLocal<MutableSet<CompositionData>?>","androidx.compose.runtime.tooling.LocalInspectionTables"]},{"name":"val canOverride: Boolean","description":"androidx.compose.runtime.ProvidedValue.canOverride","location":"compose/runtime/runtime/androidx.compose.runtime/-provided-value/can-override.html","searchKeys":["canOverride","val canOverride: Boolean","androidx.compose.runtime.ProvidedValue.canOverride"]},{"name":"val compositionLocal: CompositionLocal<T>","description":"androidx.compose.runtime.ProvidedValue.compositionLocal","location":"compose/runtime/runtime/androidx.compose.runtime/-provided-value/composition-local.html","searchKeys":["compositionLocal","val compositionLocal: CompositionLocal<T>","androidx.compose.runtime.ProvidedValue.compositionLocal"]},{"name":"val current: Snapshot","description":"androidx.compose.runtime.snapshots.Snapshot.Companion.current","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot/-companion/current.html","searchKeys":["current","val current: Snapshot","androidx.compose.runtime.snapshots.Snapshot.Companion.current"]},{"name":"val current: T","description":"androidx.compose.runtime.CompositionLocal.current","location":"compose/runtime/runtime/androidx.compose.runtime/-composition-local/current.html","searchKeys":["current","val current: T","androidx.compose.runtime.CompositionLocal.current"]},{"name":"val currentComposer: Composer","description":"androidx.compose.runtime.currentComposer","location":"compose/runtime/runtime/androidx.compose.runtime/current-composer.html","searchKeys":["currentComposer","val currentComposer: Composer","androidx.compose.runtime.currentComposer"]},{"name":"val currentCompositeKeyHash: Int","description":"androidx.compose.runtime.currentCompositeKeyHash","location":"compose/runtime/runtime/androidx.compose.runtime/current-composite-key-hash.html","searchKeys":["currentCompositeKeyHash","val currentCompositeKeyHash: Int","androidx.compose.runtime.currentCompositeKeyHash"]},{"name":"val currentRecomposeScope: RecomposeScope","description":"androidx.compose.runtime.currentRecomposeScope","location":"compose/runtime/runtime/androidx.compose.runtime/current-recompose-scope.html","searchKeys":["currentRecomposeScope","val currentRecomposeScope: RecomposeScope","androidx.compose.runtime.currentRecomposeScope"]},{"name":"val file: String","description":"androidx.compose.runtime.internal.LiveLiteralFileInfo.file","location":"compose/runtime/runtime/androidx.compose.runtime.internal/-live-literal-file-info/file.html","searchKeys":["file","val file: String","androidx.compose.runtime.internal.LiveLiteralFileInfo.file"]},{"name":"val hasAwaiters: Boolean","description":"androidx.compose.runtime.BroadcastFrameClock.hasAwaiters","location":"compose/runtime/runtime/androidx.compose.runtime/-broadcast-frame-clock/has-awaiters.html","searchKeys":["hasAwaiters","val hasAwaiters: Boolean","androidx.compose.runtime.BroadcastFrameClock.hasAwaiters"]},{"name":"val hasPendingWork: Boolean","description":"androidx.compose.runtime.Recomposer.hasPendingWork","location":"compose/runtime/runtime/androidx.compose.runtime/-recomposer/has-pending-work.html","searchKeys":["hasPendingWork","val hasPendingWork: Boolean","androidx.compose.runtime.Recomposer.hasPendingWork"]},{"name":"val indices: IntRange","description":"androidx.compose.runtime.collection.MutableVector.indices","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/indices.html","searchKeys":["indices","val indices: IntRange","androidx.compose.runtime.collection.MutableVector.indices"]},{"name":"val isPaused: Boolean","description":"androidx.compose.runtime.PausableMonotonicFrameClock.isPaused","location":"compose/runtime/runtime/androidx.compose.runtime/-pausable-monotonic-frame-clock/is-paused.html","searchKeys":["isPaused","val isPaused: Boolean","androidx.compose.runtime.PausableMonotonicFrameClock.isPaused"]},{"name":"val key: String","description":"androidx.compose.runtime.internal.LiveLiteralInfo.key","location":"compose/runtime/runtime/androidx.compose.runtime.internal/-live-literal-info/key.html","searchKeys":["key","val key: String","androidx.compose.runtime.internal.LiveLiteralInfo.key"]},{"name":"val lastIndex: Int","description":"androidx.compose.runtime.collection.MutableVector.lastIndex","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/last-index.html","searchKeys":["lastIndex","val lastIndex: Int","androidx.compose.runtime.collection.MutableVector.lastIndex"]},{"name":"val name: String","description":"androidx.compose.runtime.Recomposer.State.Idle.name","location":"compose/runtime/runtime/androidx.compose.runtime/-recomposer/-state/-idle/name.html","searchKeys":["name","val name: String","androidx.compose.runtime.Recomposer.State.Idle.name"]},{"name":"val name: String","description":"androidx.compose.runtime.Recomposer.State.Inactive.name","location":"compose/runtime/runtime/androidx.compose.runtime/-recomposer/-state/-inactive/name.html","searchKeys":["name","val name: String","androidx.compose.runtime.Recomposer.State.Inactive.name"]},{"name":"val name: String","description":"androidx.compose.runtime.Recomposer.State.InactivePendingWork.name","location":"compose/runtime/runtime/androidx.compose.runtime/-recomposer/-state/-inactive-pending-work/name.html","searchKeys":["name","val name: String","androidx.compose.runtime.Recomposer.State.InactivePendingWork.name"]},{"name":"val name: String","description":"androidx.compose.runtime.Recomposer.State.PendingWork.name","location":"compose/runtime/runtime/androidx.compose.runtime/-recomposer/-state/-pending-work/name.html","searchKeys":["name","val name: String","androidx.compose.runtime.Recomposer.State.PendingWork.name"]},{"name":"val name: String","description":"androidx.compose.runtime.Recomposer.State.ShutDown.name","location":"compose/runtime/runtime/androidx.compose.runtime/-recomposer/-state/-shut-down/name.html","searchKeys":["name","val name: String","androidx.compose.runtime.Recomposer.State.ShutDown.name"]},{"name":"val name: String","description":"androidx.compose.runtime.Recomposer.State.ShuttingDown.name","location":"compose/runtime/runtime/androidx.compose.runtime/-recomposer/-state/-shutting-down/name.html","searchKeys":["name","val name: String","androidx.compose.runtime.Recomposer.State.ShuttingDown.name"]},{"name":"val offset: Int","description":"androidx.compose.runtime.internal.LiveLiteralInfo.offset","location":"compose/runtime/runtime/androidx.compose.runtime.internal/-live-literal-info/offset.html","searchKeys":["offset","val offset: Int","androidx.compose.runtime.internal.LiveLiteralInfo.offset"]},{"name":"val ordinal: Int","description":"androidx.compose.runtime.Recomposer.State.Idle.ordinal","location":"compose/runtime/runtime/androidx.compose.runtime/-recomposer/-state/-idle/ordinal.html","searchKeys":["ordinal","val ordinal: Int","androidx.compose.runtime.Recomposer.State.Idle.ordinal"]},{"name":"val ordinal: Int","description":"androidx.compose.runtime.Recomposer.State.Inactive.ordinal","location":"compose/runtime/runtime/androidx.compose.runtime/-recomposer/-state/-inactive/ordinal.html","searchKeys":["ordinal","val ordinal: Int","androidx.compose.runtime.Recomposer.State.Inactive.ordinal"]},{"name":"val ordinal: Int","description":"androidx.compose.runtime.Recomposer.State.InactivePendingWork.ordinal","location":"compose/runtime/runtime/androidx.compose.runtime/-recomposer/-state/-inactive-pending-work/ordinal.html","searchKeys":["ordinal","val ordinal: Int","androidx.compose.runtime.Recomposer.State.InactivePendingWork.ordinal"]},{"name":"val ordinal: Int","description":"androidx.compose.runtime.Recomposer.State.PendingWork.ordinal","location":"compose/runtime/runtime/androidx.compose.runtime/-recomposer/-state/-pending-work/ordinal.html","searchKeys":["ordinal","val ordinal: Int","androidx.compose.runtime.Recomposer.State.PendingWork.ordinal"]},{"name":"val ordinal: Int","description":"androidx.compose.runtime.Recomposer.State.ShutDown.ordinal","location":"compose/runtime/runtime/androidx.compose.runtime/-recomposer/-state/-shut-down/ordinal.html","searchKeys":["ordinal","val ordinal: Int","androidx.compose.runtime.Recomposer.State.ShutDown.ordinal"]},{"name":"val ordinal: Int","description":"androidx.compose.runtime.Recomposer.State.ShuttingDown.ordinal","location":"compose/runtime/runtime/androidx.compose.runtime/-recomposer/-state/-shutting-down/ordinal.html","searchKeys":["ordinal","val ordinal: Int","androidx.compose.runtime.Recomposer.State.ShuttingDown.ordinal"]},{"name":"val parameters: Int","description":"androidx.compose.runtime.internal.StabilityInferred.parameters","location":"compose/runtime/runtime/androidx.compose.runtime.internal/-stability-inferred/parameters.html","searchKeys":["parameters","val parameters: Int","androidx.compose.runtime.internal.StabilityInferred.parameters"]},{"name":"val root: T","description":"androidx.compose.runtime.AbstractApplier.root","location":"compose/runtime/runtime/androidx.compose.runtime/-abstract-applier/root.html","searchKeys":["root","val root: T","androidx.compose.runtime.AbstractApplier.root"]},{"name":"val runningRecomposers: StateFlow<Set<RecomposerInfo>>","description":"androidx.compose.runtime.Recomposer.Companion.runningRecomposers","location":"compose/runtime/runtime/androidx.compose.runtime/-recomposer/-companion/running-recomposers.html","searchKeys":["runningRecomposers","val runningRecomposers: StateFlow<Set<RecomposerInfo>>","androidx.compose.runtime.Recomposer.Companion.runningRecomposers"]},{"name":"val signature: Array<out String>","description":"androidx.compose.runtime.internal.Decoy.signature","location":"compose/runtime/runtime/androidx.compose.runtime.internal/-decoy/signature.html","searchKeys":["signature","val signature: Array<out String>","androidx.compose.runtime.internal.Decoy.signature"]},{"name":"val snapshot: Snapshot","description":"androidx.compose.runtime.snapshots.SnapshotApplyConflictException.snapshot","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-apply-conflict-exception/snapshot.html","searchKeys":["snapshot","val snapshot: Snapshot","androidx.compose.runtime.snapshots.SnapshotApplyConflictException.snapshot"]},{"name":"val snapshot: Snapshot","description":"androidx.compose.runtime.snapshots.SnapshotApplyResult.Failure.snapshot","location":"compose/runtime/runtime/androidx.compose.runtime.snapshots/-snapshot-apply-result/-failure/snapshot.html","searchKeys":["snapshot","val snapshot: Snapshot","androidx.compose.runtime.snapshots.SnapshotApplyResult.Failure.snapshot"]},{"name":"val state: Flow<Recomposer.State>","description":"androidx.compose.runtime.Recomposer.state","location":"compose/runtime/runtime/androidx.compose.runtime/-recomposer/state.html","searchKeys":["state","val state: Flow<Recomposer.State>","androidx.compose.runtime.Recomposer.state"]},{"name":"val suggest: String","description":"androidx.compose.runtime.CheckResult.suggest","location":"compose/runtime/runtime/androidx.compose.runtime/-check-result/suggest.html","searchKeys":["suggest","val suggest: String","androidx.compose.runtime.CheckResult.suggest"]},{"name":"val targetName: String","description":"androidx.compose.runtime.internal.Decoy.targetName","location":"compose/runtime/runtime/androidx.compose.runtime.internal/-decoy/target-name.html","searchKeys":["targetName","val targetName: String","androidx.compose.runtime.internal.Decoy.targetName"]},{"name":"val targetName: String","description":"androidx.compose.runtime.internal.DecoyImplementation.targetName","location":"compose/runtime/runtime/androidx.compose.runtime.internal/-decoy-implementation/target-name.html","searchKeys":["targetName","val targetName: String","androidx.compose.runtime.internal.DecoyImplementation.targetName"]},{"name":"val value: T","description":"androidx.compose.runtime.ProvidedValue.value","location":"compose/runtime/runtime/androidx.compose.runtime/-provided-value/value.html","searchKeys":["value","val value: T","androidx.compose.runtime.ProvidedValue.value"]},{"name":"var changeCount: Long = 0L","description":"androidx.compose.runtime.Recomposer.changeCount","location":"compose/runtime/runtime/androidx.compose.runtime/-recomposer/change-count.html","searchKeys":["changeCount","var changeCount: Long = 0L","androidx.compose.runtime.Recomposer.changeCount"]},{"name":"var isLiveLiteralsEnabled: Boolean = false","description":"androidx.compose.runtime.internal.isLiveLiteralsEnabled","location":"compose/runtime/runtime/androidx.compose.runtime.internal/is-live-literals-enabled.html","searchKeys":["isLiveLiteralsEnabled","var isLiveLiteralsEnabled: Boolean = false","androidx.compose.runtime.internal.isLiveLiteralsEnabled"]},{"name":"var size: Int","description":"androidx.compose.runtime.collection.MutableVector.size","location":"compose/runtime/runtime/androidx.compose.runtime.collection/-mutable-vector/size.html","searchKeys":["size","var size: Int","androidx.compose.runtime.collection.MutableVector.size"]},{"name":"abstract val defaultExpression: String?","description":"app.cash.treehouse.schema.parser.Trait.defaultExpression","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-trait/default-expression.html","searchKeys":["defaultExpression","abstract val defaultExpression: String?","app.cash.treehouse.schema.parser.Trait.defaultExpression"]},{"name":"abstract val name: String","description":"app.cash.treehouse.schema.parser.Trait.name","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-trait/name.html","searchKeys":["name","abstract val name: String","app.cash.treehouse.schema.parser.Trait.name"]},{"name":"abstract val tag: Int","description":"app.cash.treehouse.schema.parser.Trait.tag","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-trait/tag.html","searchKeys":["tag","abstract val tag: Int","app.cash.treehouse.schema.parser.Trait.tag"]},{"name":"data class Children(tag: Int, name: String) : Trait","description":"app.cash.treehouse.schema.parser.Children","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-children/index.html","searchKeys":["Children","data class Children(tag: Int, name: String) : Trait","app.cash.treehouse.schema.parser.Children"]},{"name":"data class Event(tag: Int, name: String, defaultExpression: String?) : Trait","description":"app.cash.treehouse.schema.parser.Event","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-event/index.html","searchKeys":["Event","data class Event(tag: Int, name: String, defaultExpression: String?) : Trait","app.cash.treehouse.schema.parser.Event"]},{"name":"data class Property(tag: Int, name: String, type: KType, defaultExpression: String?) : Trait","description":"app.cash.treehouse.schema.parser.Property","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-property/index.html","searchKeys":["Property","data class Property(tag: Int, name: String, type: KType, defaultExpression: String?) : Trait","app.cash.treehouse.schema.parser.Property"]},{"name":"data class Schema(name: String, package: String, widgets: List<Widget>)","description":"app.cash.treehouse.schema.parser.Schema","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-schema/index.html","searchKeys":["Schema","data class Schema(name: String, package: String, widgets: List<Widget>)","app.cash.treehouse.schema.parser.Schema"]},{"name":"data class Widget(tag: Int, className: KClass<*>, traits: List<Trait>)","description":"app.cash.treehouse.schema.parser.Widget","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-widget/index.html","searchKeys":["Widget","data class Widget(tag: Int, className: KClass<*>, traits: List<Trait>)","app.cash.treehouse.schema.parser.Widget"]},{"name":"fun Children(tag: Int, name: String)","description":"app.cash.treehouse.schema.parser.Children.Children","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-children/-children.html","searchKeys":["Children","fun Children(tag: Int, name: String)","app.cash.treehouse.schema.parser.Children.Children"]},{"name":"fun Event(tag: Int, name: String, defaultExpression: String?)","description":"app.cash.treehouse.schema.parser.Event.Event","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-event/-event.html","searchKeys":["Event","fun Event(tag: Int, name: String, defaultExpression: String?)","app.cash.treehouse.schema.parser.Event.Event"]},{"name":"fun Property(tag: Int, name: String, type: KType, defaultExpression: String?)","description":"app.cash.treehouse.schema.parser.Property.Property","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-property/-property.html","searchKeys":["Property","fun Property(tag: Int, name: String, type: KType, defaultExpression: String?)","app.cash.treehouse.schema.parser.Property.Property"]},{"name":"fun Schema(name: String, package: String, widgets: List<Widget>)","description":"app.cash.treehouse.schema.parser.Schema.Schema","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-schema/-schema.html","searchKeys":["Schema","fun Schema(name: String, package: String, widgets: List<Widget>)","app.cash.treehouse.schema.parser.Schema.Schema"]},{"name":"fun Widget(tag: Int, className: KClass<*>, traits: List<Trait>)","description":"app.cash.treehouse.schema.parser.Widget.Widget","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-widget/-widget.html","searchKeys":["Widget","fun Widget(tag: Int, className: KClass<*>, traits: List<Trait>)","app.cash.treehouse.schema.parser.Widget.Widget"]},{"name":"fun parseSchema(schemaType: KClass<*>): Schema","description":"app.cash.treehouse.schema.parser.parseSchema","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/parse-schema.html","searchKeys":["parseSchema","fun parseSchema(schemaType: KClass<*>): Schema","app.cash.treehouse.schema.parser.parseSchema"]},{"name":"open override val defaultExpression: String?","description":"app.cash.treehouse.schema.parser.Children.defaultExpression","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-children/default-expression.html","searchKeys":["defaultExpression","open override val defaultExpression: String?","app.cash.treehouse.schema.parser.Children.defaultExpression"]},{"name":"open override val defaultExpression: String?","description":"app.cash.treehouse.schema.parser.Event.defaultExpression","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-event/default-expression.html","searchKeys":["defaultExpression","open override val defaultExpression: String?","app.cash.treehouse.schema.parser.Event.defaultExpression"]},{"name":"open override val defaultExpression: String?","description":"app.cash.treehouse.schema.parser.Property.defaultExpression","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-property/default-expression.html","searchKeys":["defaultExpression","open override val defaultExpression: String?","app.cash.treehouse.schema.parser.Property.defaultExpression"]},{"name":"open override val name: String","description":"app.cash.treehouse.schema.parser.Children.name","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-children/name.html","searchKeys":["name","open override val name: String","app.cash.treehouse.schema.parser.Children.name"]},{"name":"open override val name: String","description":"app.cash.treehouse.schema.parser.Event.name","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-event/name.html","searchKeys":["name","open override val name: String","app.cash.treehouse.schema.parser.Event.name"]},{"name":"open override val name: String","description":"app.cash.treehouse.schema.parser.Property.name","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-property/name.html","searchKeys":["name","open override val name: String","app.cash.treehouse.schema.parser.Property.name"]},{"name":"open override val tag: Int","description":"app.cash.treehouse.schema.parser.Children.tag","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-children/tag.html","searchKeys":["tag","open override val tag: Int","app.cash.treehouse.schema.parser.Children.tag"]},{"name":"open override val tag: Int","description":"app.cash.treehouse.schema.parser.Event.tag","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-event/tag.html","searchKeys":["tag","open override val tag: Int","app.cash.treehouse.schema.parser.Event.tag"]},{"name":"open override val tag: Int","description":"app.cash.treehouse.schema.parser.Property.tag","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-property/tag.html","searchKeys":["tag","open override val tag: Int","app.cash.treehouse.schema.parser.Property.tag"]},{"name":"sealed class Trait","description":"app.cash.treehouse.schema.parser.Trait","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-trait/index.html","searchKeys":["Trait","sealed class Trait","app.cash.treehouse.schema.parser.Trait"]},{"name":"val className: KClass<*>","description":"app.cash.treehouse.schema.parser.Widget.className","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-widget/class-name.html","searchKeys":["className","val className: KClass<*>","app.cash.treehouse.schema.parser.Widget.className"]},{"name":"val name: String","description":"app.cash.treehouse.schema.parser.Schema.name","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-schema/name.html","searchKeys":["name","val name: String","app.cash.treehouse.schema.parser.Schema.name"]},{"name":"val package: String","description":"app.cash.treehouse.schema.parser.Schema.package","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-schema/package.html","searchKeys":["package","val package: String","app.cash.treehouse.schema.parser.Schema.package"]},{"name":"val tag: Int","description":"app.cash.treehouse.schema.parser.Widget.tag","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-widget/tag.html","searchKeys":["tag","val tag: Int","app.cash.treehouse.schema.parser.Widget.tag"]},{"name":"val traits: List<Trait>","description":"app.cash.treehouse.schema.parser.Widget.traits","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-widget/traits.html","searchKeys":["traits","val traits: List<Trait>","app.cash.treehouse.schema.parser.Widget.traits"]},{"name":"val type: KType","description":"app.cash.treehouse.schema.parser.Property.type","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-property/type.html","searchKeys":["type","val type: KType","app.cash.treehouse.schema.parser.Property.type"]},{"name":"val widgets: List<Widget>","description":"app.cash.treehouse.schema.parser.Schema.widgets","location":"treehouse-schema/treehouse-schema/app.cash.treehouse.schema.parser/-schema/widgets.html","searchKeys":["widgets","val widgets: List<Widget>","app.cash.treehouse.schema.parser.Schema.widgets"]}]