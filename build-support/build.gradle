buildscript {
  dependencies {
    classpath libs.kotlin.gradlePlugin
  }
  repositories {
    mavenCentral()
  }
}

apply plugin: 'org.jetbrains.kotlin.jvm'
apply plugin: 'java-gradle-plugin'

dependencies {
  compileOnly gradleApi()
  compileOnly libs.kotlin.gradlePlugin
}

repositories {
  mavenCentral()
}

gradlePlugin {
  plugins {
    jetbrainsCompose {
      id = "app.cash.redwood.build.compose"
      displayName = "JetBrains Compose"
      description = "Gradle plugin to apply JetBrains Compose compiler"
      implementationClass = "app.cash.redwood.buildsupport.JetBrainsComposePlugin"
    }
  }
}

def versionDirectory = "$buildDir/generated/version/"

sourceSets {
  main.java.srcDir versionDirectory
}

task pluginVersion {
  def outputDir = file(versionDirectory)

  inputs.property 'jbComposeVersion', libs.versions.jbCompose.get()
  outputs.dir outputDir

  doLast {
    def versionFile = file("$outputDir/app/cash/redwood/buildsupport/version.kt")
    versionFile.parentFile.mkdirs()
    versionFile.text = """// Generated file. Do not edit!
package app.cash.redwood.buildsupport

internal const val jbComposeVersion = "${libs.versions.jbCompose.get()}"
"""
  }
}

tasks.getByName('compileKotlin').dependsOn('pluginVersion')
